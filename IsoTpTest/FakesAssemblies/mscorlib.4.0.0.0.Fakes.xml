<?xml version="1.0"?>
<doc>
    <assembly>
        <name>mscorlib.4.0.0.0.Fakes</name>
    </assembly>
    <members>
        <member name="T:Microsoft.QualityTools.Testing.Fakes.Delegates.MscorlibDelegates">
            <summary>Содержит пользовательские делегаты для заглушек и оболочек совместимости mscorlib</summary>
        </member>
        <member name="T:Microsoft.Win32.SafeHandles.Fakes.StubCriticalHandleMinusOneIsInvalid">
            <summary>Тип заглушки Microsoft.Win32.SafeHandles.CriticalHandleMinusOneIsInvalid</summary>
        </member>
        <member name="M:Microsoft.Win32.SafeHandles.Fakes.StubCriticalHandleMinusOneIsInvalid.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:Microsoft.Win32.SafeHandles.Fakes.StubCriticalHandleMinusOneIsInvalid.Dispose(System.Boolean)">
            <summary>Задает заглушка CriticalHandle.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Microsoft.Win32.SafeHandles.Fakes.StubCriticalHandleMinusOneIsInvalid.DisposeBoolean">
            <summary>Задает stub CriticalHandle.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Microsoft.Win32.SafeHandles.Fakes.StubCriticalHandleMinusOneIsInvalid.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCriticalHandleMinusOneIsInvalid</summary>
        </member>
        <member name="F:Microsoft.Win32.SafeHandles.Fakes.StubCriticalHandleMinusOneIsInvalid.IsInvalidGet">
            <summary>Задает stub CriticalHandleMinusOneIsInvalid.get_IsInvalid()</summary>
        </member>
        <member name="M:Microsoft.Win32.SafeHandles.Fakes.StubCriticalHandleMinusOneIsInvalid.ReleaseHandle">
            <summary>Задает заглушка CriticalHandle.ReleaseHandle()</summary>
        </member>
        <member name="F:Microsoft.Win32.SafeHandles.Fakes.StubCriticalHandleMinusOneIsInvalid.ReleaseHandle01">
            <summary>Задает stub CriticalHandle.ReleaseHandle()</summary>
        </member>
        <member name="P:Microsoft.Win32.SafeHandles.Fakes.StubCriticalHandleMinusOneIsInvalid.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:Microsoft.Win32.SafeHandles.Fakes.StubCriticalHandleMinusOneIsInvalid.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:Microsoft.Win32.SafeHandles.Fakes.StubCriticalHandleMinusOneIsInvalid.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:Microsoft.Win32.SafeHandles.Fakes.StubCriticalHandleMinusOneIsInvalid.IsInvalid">
            <summary>Задает stub CriticalHandleMinusOneIsInvalid.get_IsInvalid()</summary>
        </member>
        <member name="T:Microsoft.Win32.SafeHandles.Fakes.StubCriticalHandleZeroOrMinusOneIsInvalid">
            <summary>Тип заглушки Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid</summary>
        </member>
        <member name="M:Microsoft.Win32.SafeHandles.Fakes.StubCriticalHandleZeroOrMinusOneIsInvalid.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:Microsoft.Win32.SafeHandles.Fakes.StubCriticalHandleZeroOrMinusOneIsInvalid.Dispose(System.Boolean)">
            <summary>Задает заглушка CriticalHandle.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Microsoft.Win32.SafeHandles.Fakes.StubCriticalHandleZeroOrMinusOneIsInvalid.DisposeBoolean">
            <summary>Задает stub CriticalHandle.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Microsoft.Win32.SafeHandles.Fakes.StubCriticalHandleZeroOrMinusOneIsInvalid.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCriticalHandleZeroOrMinusOneIsInvalid</summary>
        </member>
        <member name="F:Microsoft.Win32.SafeHandles.Fakes.StubCriticalHandleZeroOrMinusOneIsInvalid.IsInvalidGet">
            <summary>Задает stub CriticalHandleZeroOrMinusOneIsInvalid.get_IsInvalid()</summary>
        </member>
        <member name="M:Microsoft.Win32.SafeHandles.Fakes.StubCriticalHandleZeroOrMinusOneIsInvalid.ReleaseHandle">
            <summary>Задает заглушка CriticalHandle.ReleaseHandle()</summary>
        </member>
        <member name="F:Microsoft.Win32.SafeHandles.Fakes.StubCriticalHandleZeroOrMinusOneIsInvalid.ReleaseHandle01">
            <summary>Задает stub CriticalHandle.ReleaseHandle()</summary>
        </member>
        <member name="P:Microsoft.Win32.SafeHandles.Fakes.StubCriticalHandleZeroOrMinusOneIsInvalid.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:Microsoft.Win32.SafeHandles.Fakes.StubCriticalHandleZeroOrMinusOneIsInvalid.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:Microsoft.Win32.SafeHandles.Fakes.StubCriticalHandleZeroOrMinusOneIsInvalid.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:Microsoft.Win32.SafeHandles.Fakes.StubCriticalHandleZeroOrMinusOneIsInvalid.IsInvalid">
            <summary>Задает stub CriticalHandleZeroOrMinusOneIsInvalid.get_IsInvalid()</summary>
        </member>
        <member name="T:Microsoft.Win32.SafeHandles.Fakes.StubSafeHandleMinusOneIsInvalid">
            <summary>Тип заглушки Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid</summary>
        </member>
        <member name="M:Microsoft.Win32.SafeHandles.Fakes.StubSafeHandleMinusOneIsInvalid.#ctor(System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:Microsoft.Win32.SafeHandles.Fakes.StubSafeHandleMinusOneIsInvalid.Dispose(System.Boolean)">
            <summary>Задает заглушка SafeHandle.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Microsoft.Win32.SafeHandles.Fakes.StubSafeHandleMinusOneIsInvalid.DisposeBoolean">
            <summary>Задает stub SafeHandle.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Microsoft.Win32.SafeHandles.Fakes.StubSafeHandleMinusOneIsInvalid.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubSafeHandleMinusOneIsInvalid</summary>
        </member>
        <member name="F:Microsoft.Win32.SafeHandles.Fakes.StubSafeHandleMinusOneIsInvalid.IsInvalidGet">
            <summary>Задает stub SafeHandleMinusOneIsInvalid.get_IsInvalid()</summary>
        </member>
        <member name="M:Microsoft.Win32.SafeHandles.Fakes.StubSafeHandleMinusOneIsInvalid.ReleaseHandle">
            <summary>Задает заглушка SafeHandle.ReleaseHandle()</summary>
        </member>
        <member name="F:Microsoft.Win32.SafeHandles.Fakes.StubSafeHandleMinusOneIsInvalid.ReleaseHandle01">
            <summary>Задает stub SafeHandle.ReleaseHandle()</summary>
        </member>
        <member name="P:Microsoft.Win32.SafeHandles.Fakes.StubSafeHandleMinusOneIsInvalid.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:Microsoft.Win32.SafeHandles.Fakes.StubSafeHandleMinusOneIsInvalid.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:Microsoft.Win32.SafeHandles.Fakes.StubSafeHandleMinusOneIsInvalid.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:Microsoft.Win32.SafeHandles.Fakes.StubSafeHandleMinusOneIsInvalid.IsInvalid">
            <summary>Задает stub SafeHandleMinusOneIsInvalid.get_IsInvalid()</summary>
        </member>
        <member name="T:Microsoft.Win32.SafeHandles.Fakes.StubSafeHandleZeroOrMinusOneIsInvalid">
            <summary>Тип заглушки Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid</summary>
        </member>
        <member name="M:Microsoft.Win32.SafeHandles.Fakes.StubSafeHandleZeroOrMinusOneIsInvalid.#ctor(System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:Microsoft.Win32.SafeHandles.Fakes.StubSafeHandleZeroOrMinusOneIsInvalid.Dispose(System.Boolean)">
            <summary>Задает заглушка SafeHandle.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Microsoft.Win32.SafeHandles.Fakes.StubSafeHandleZeroOrMinusOneIsInvalid.DisposeBoolean">
            <summary>Задает stub SafeHandle.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Microsoft.Win32.SafeHandles.Fakes.StubSafeHandleZeroOrMinusOneIsInvalid.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubSafeHandleZeroOrMinusOneIsInvalid</summary>
        </member>
        <member name="F:Microsoft.Win32.SafeHandles.Fakes.StubSafeHandleZeroOrMinusOneIsInvalid.IsInvalidGet">
            <summary>Задает stub SafeHandleZeroOrMinusOneIsInvalid.get_IsInvalid()</summary>
        </member>
        <member name="M:Microsoft.Win32.SafeHandles.Fakes.StubSafeHandleZeroOrMinusOneIsInvalid.ReleaseHandle">
            <summary>Задает заглушка SafeHandle.ReleaseHandle()</summary>
        </member>
        <member name="F:Microsoft.Win32.SafeHandles.Fakes.StubSafeHandleZeroOrMinusOneIsInvalid.ReleaseHandle01">
            <summary>Задает stub SafeHandle.ReleaseHandle()</summary>
        </member>
        <member name="P:Microsoft.Win32.SafeHandles.Fakes.StubSafeHandleZeroOrMinusOneIsInvalid.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:Microsoft.Win32.SafeHandles.Fakes.StubSafeHandleZeroOrMinusOneIsInvalid.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:Microsoft.Win32.SafeHandles.Fakes.StubSafeHandleZeroOrMinusOneIsInvalid.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:Microsoft.Win32.SafeHandles.Fakes.StubSafeHandleZeroOrMinusOneIsInvalid.IsInvalid">
            <summary>Задает stub SafeHandleZeroOrMinusOneIsInvalid.get_IsInvalid()</summary>
        </member>
        <member name="T:System.Collections.Concurrent.Fakes.StubConcurrentDictionary`2">
            <summary>Тип заглушки System.Collections.Concurrent.ConcurrentDictionary`2</summary>
        </member>
        <member name="M:System.Collections.Concurrent.Fakes.StubConcurrentDictionary`2.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Concurrent.Fakes.StubConcurrentDictionary`2.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Concurrent.Fakes.StubConcurrentDictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Concurrent.Fakes.StubConcurrentDictionary`2.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}},System.Collections.Generic.IEqualityComparer{`0})">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Concurrent.Fakes.StubConcurrentDictionary`2.#ctor(System.Int32,System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Concurrent.Fakes.StubConcurrentDictionary`2.#ctor(System.Int32,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}},System.Collections.Generic.IEqualityComparer{`0})">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Concurrent.Fakes.StubConcurrentDictionary`2.#ctor(System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Concurrent.Fakes.StubConcurrentDictionary`2.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubConcurrentDictionary</summary>
        </member>
        <member name="P:System.Collections.Concurrent.Fakes.StubConcurrentDictionary`2.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Collections.Concurrent.Fakes.StubConcurrentDictionary`2.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Collections.Concurrent.Fakes.StubConcurrentDictionary`2.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Collections.Concurrent.Fakes.StubConcurrentQueue`1">
            <summary>Тип заглушки System.Collections.Concurrent.ConcurrentQueue`1</summary>
        </member>
        <member name="M:System.Collections.Concurrent.Fakes.StubConcurrentQueue`1.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Concurrent.Fakes.StubConcurrentQueue`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Concurrent.Fakes.StubConcurrentQueue`1.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubConcurrentQueue</summary>
        </member>
        <member name="P:System.Collections.Concurrent.Fakes.StubConcurrentQueue`1.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Collections.Concurrent.Fakes.StubConcurrentQueue`1.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Collections.Concurrent.Fakes.StubConcurrentQueue`1.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Collections.Concurrent.Fakes.StubConcurrentStack`1">
            <summary>Тип заглушки System.Collections.Concurrent.ConcurrentStack`1</summary>
        </member>
        <member name="M:System.Collections.Concurrent.Fakes.StubConcurrentStack`1.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Concurrent.Fakes.StubConcurrentStack`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Concurrent.Fakes.StubConcurrentStack`1.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubConcurrentStack</summary>
        </member>
        <member name="P:System.Collections.Concurrent.Fakes.StubConcurrentStack`1.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Collections.Concurrent.Fakes.StubConcurrentStack`1.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Collections.Concurrent.Fakes.StubConcurrentStack`1.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Collections.Concurrent.Fakes.StubIProducerConsumerCollection`1">
            <summary>Тип заглушки System.Collections.Concurrent.IProducerConsumerCollection`1</summary>
        </member>
        <member name="M:System.Collections.Concurrent.Fakes.StubIProducerConsumerCollection`1.#ctor">
            <summary>Инициализирует новый экземпляр type StubIProducerConsumerCollection</summary>
        </member>
        <member name="F:System.Collections.Concurrent.Fakes.StubIProducerConsumerCollection`1.CopyToArrayInt32">
            <summary>Задает stub ICollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="F:System.Collections.Concurrent.Fakes.StubIProducerConsumerCollection`1.CopyToT0ArrayInt32">
            <summary>Задает stub IProducerConsumerCollection`1.CopyTo(!0[] array, Int32 index)</summary>
        </member>
        <member name="F:System.Collections.Concurrent.Fakes.StubIProducerConsumerCollection`1.CountGet">
            <summary>Задает stub ICollection.get_Count()</summary>
        </member>
        <member name="F:System.Collections.Concurrent.Fakes.StubIProducerConsumerCollection`1.GetEnumerator">
            <summary>Задает stub IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="F:System.Collections.Concurrent.Fakes.StubIProducerConsumerCollection`1.GetEnumerator01">
            <summary>Задает stub IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="F:System.Collections.Concurrent.Fakes.StubIProducerConsumerCollection`1.IsSynchronizedGet">
            <summary>Задает stub ICollection.get_IsSynchronized()</summary>
        </member>
        <member name="F:System.Collections.Concurrent.Fakes.StubIProducerConsumerCollection`1.SyncRootGet">
            <summary>Задает stub ICollection.get_SyncRoot()</summary>
        </member>
        <member name="M:System.Collections.Concurrent.Fakes.StubIProducerConsumerCollection`1.global::System#Collections#Concurrent#IProducerConsumerCollection{T}#CopyTo(`0[],System.Int32)">
            <summary>Задает заглушка IProducerConsumerCollection`1.CopyTo(!0[] array, Int32 index)</summary>
        </member>
        <member name="M:System.Collections.Concurrent.Fakes.StubIProducerConsumerCollection`1.global::System#Collections#Concurrent#IProducerConsumerCollection{T}#ToArray">
            <summary>Задает заглушка IProducerConsumerCollection`1.ToArray()</summary>
        </member>
        <member name="M:System.Collections.Concurrent.Fakes.StubIProducerConsumerCollection`1.global::System#Collections#Concurrent#IProducerConsumerCollection{T}#TryAdd(`0)">
            <summary>Задает заглушка IProducerConsumerCollection`1.TryAdd(!0 item)</summary>
        </member>
        <member name="M:System.Collections.Concurrent.Fakes.StubIProducerConsumerCollection`1.global::System#Collections#Concurrent#IProducerConsumerCollection{T}#TryTake(`0@)">
            <summary>Задает заглушка IProducerConsumerCollection`1.TryTake(!0&amp; item)</summary>
        </member>
        <member name="M:System.Collections.Concurrent.Fakes.StubIProducerConsumerCollection`1.global::System#Collections#Generic#IEnumerable{T}#GetEnumerator">
            <summary>Задает заглушка IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="M:System.Collections.Concurrent.Fakes.StubIProducerConsumerCollection`1.global::System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>Задает заглушка ICollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="M:System.Collections.Concurrent.Fakes.StubIProducerConsumerCollection`1.global::System#Collections#IEnumerable#GetEnumerator">
            <summary>Задает заглушка IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="F:System.Collections.Concurrent.Fakes.StubIProducerConsumerCollection`1.ToArray">
            <summary>Задает stub IProducerConsumerCollection`1.ToArray()</summary>
        </member>
        <member name="F:System.Collections.Concurrent.Fakes.StubIProducerConsumerCollection`1.TryAddT0">
            <summary>Задает stub IProducerConsumerCollection`1.TryAdd(!0 item)</summary>
        </member>
        <member name="F:System.Collections.Concurrent.Fakes.StubIProducerConsumerCollection`1.TryTakeT0Out">
            <summary>Задает stub IProducerConsumerCollection`1.TryTake(!0&amp; item)</summary>
        </member>
        <member name="P:System.Collections.Concurrent.Fakes.StubIProducerConsumerCollection`1.global::System#Collections#ICollection#Count">
            <summary>Задает stub ICollection.get_Count()</summary>
        </member>
        <member name="P:System.Collections.Concurrent.Fakes.StubIProducerConsumerCollection`1.global::System#Collections#ICollection#IsSynchronized">
            <summary>Задает stub ICollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:System.Collections.Concurrent.Fakes.StubIProducerConsumerCollection`1.global::System#Collections#ICollection#SyncRoot">
            <summary>Задает stub ICollection.get_SyncRoot()</summary>
        </member>
        <member name="T:System.Collections.Concurrent.Fakes.StubOrderablePartitioner`1">
            <summary>Тип заглушки System.Collections.Concurrent.OrderablePartitioner`1</summary>
        </member>
        <member name="M:System.Collections.Concurrent.Fakes.StubOrderablePartitioner`1.#ctor(System.Boolean,System.Boolean,System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Concurrent.Fakes.StubOrderablePartitioner`1.GetDynamicPartitions">
            <summary>Задает заглушка OrderablePartitioner`1.GetDynamicPartitions()</summary>
        </member>
        <member name="F:System.Collections.Concurrent.Fakes.StubOrderablePartitioner`1.GetDynamicPartitions01">
            <summary>Задает stub OrderablePartitioner`1.GetDynamicPartitions()</summary>
        </member>
        <member name="M:System.Collections.Concurrent.Fakes.StubOrderablePartitioner`1.GetOrderableDynamicPartitions">
            <summary>Задает заглушка OrderablePartitioner`1.GetOrderableDynamicPartitions()</summary>
        </member>
        <member name="F:System.Collections.Concurrent.Fakes.StubOrderablePartitioner`1.GetOrderableDynamicPartitions01">
            <summary>Задает stub OrderablePartitioner`1.GetOrderableDynamicPartitions()</summary>
        </member>
        <member name="M:System.Collections.Concurrent.Fakes.StubOrderablePartitioner`1.GetOrderablePartitions(System.Int32)">
            <summary>Задает заглушка OrderablePartitioner`1.GetOrderablePartitions(Int32 partitionCount)</summary>
        </member>
        <member name="F:System.Collections.Concurrent.Fakes.StubOrderablePartitioner`1.GetOrderablePartitionsInt32">
            <summary>Задает stub OrderablePartitioner`1.GetOrderablePartitions(Int32 partitionCount)</summary>
        </member>
        <member name="M:System.Collections.Concurrent.Fakes.StubOrderablePartitioner`1.GetPartitions(System.Int32)">
            <summary>Задает заглушка OrderablePartitioner`1.GetPartitions(Int32 partitionCount)</summary>
        </member>
        <member name="F:System.Collections.Concurrent.Fakes.StubOrderablePartitioner`1.GetPartitionsInt32">
            <summary>Задает stub OrderablePartitioner`1.GetPartitions(Int32 partitionCount)</summary>
        </member>
        <member name="M:System.Collections.Concurrent.Fakes.StubOrderablePartitioner`1.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubOrderablePartitioner</summary>
        </member>
        <member name="F:System.Collections.Concurrent.Fakes.StubOrderablePartitioner`1.SupportsDynamicPartitionsGet">
            <summary>Задает stub Partitioner`1.get_SupportsDynamicPartitions()</summary>
        </member>
        <member name="P:System.Collections.Concurrent.Fakes.StubOrderablePartitioner`1.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Collections.Concurrent.Fakes.StubOrderablePartitioner`1.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Collections.Concurrent.Fakes.StubOrderablePartitioner`1.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Collections.Concurrent.Fakes.StubOrderablePartitioner`1.SupportsDynamicPartitions">
            <summary>Задает stub Partitioner`1.get_SupportsDynamicPartitions()</summary>
        </member>
        <member name="T:System.Collections.Concurrent.Fakes.StubPartitioner`1">
            <summary>Тип заглушки System.Collections.Concurrent.Partitioner`1</summary>
        </member>
        <member name="M:System.Collections.Concurrent.Fakes.StubPartitioner`1.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Concurrent.Fakes.StubPartitioner`1.GetDynamicPartitions">
            <summary>Задает заглушка Partitioner`1.GetDynamicPartitions()</summary>
        </member>
        <member name="F:System.Collections.Concurrent.Fakes.StubPartitioner`1.GetDynamicPartitions01">
            <summary>Задает stub Partitioner`1.GetDynamicPartitions()</summary>
        </member>
        <member name="M:System.Collections.Concurrent.Fakes.StubPartitioner`1.GetPartitions(System.Int32)">
            <summary>Задает заглушка Partitioner`1.GetPartitions(Int32 partitionCount)</summary>
        </member>
        <member name="F:System.Collections.Concurrent.Fakes.StubPartitioner`1.GetPartitionsInt32">
            <summary>Задает stub Partitioner`1.GetPartitions(Int32 partitionCount)</summary>
        </member>
        <member name="M:System.Collections.Concurrent.Fakes.StubPartitioner`1.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubPartitioner</summary>
        </member>
        <member name="F:System.Collections.Concurrent.Fakes.StubPartitioner`1.SupportsDynamicPartitionsGet">
            <summary>Задает stub Partitioner`1.get_SupportsDynamicPartitions()</summary>
        </member>
        <member name="P:System.Collections.Concurrent.Fakes.StubPartitioner`1.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Collections.Concurrent.Fakes.StubPartitioner`1.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Collections.Concurrent.Fakes.StubPartitioner`1.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Collections.Concurrent.Fakes.StubPartitioner`1.SupportsDynamicPartitions">
            <summary>Задает stub Partitioner`1.get_SupportsDynamicPartitions()</summary>
        </member>
        <member name="T:System.Collections.Fakes.StubArrayList">
            <summary>Тип заглушки System.Collections.ArrayList</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubArrayList.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubArrayList.#ctor(System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubArrayList.#ctor(System.Collections.ICollection)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubArrayList.Add(System.Object)">
            <summary>Задает заглушка ArrayList.Add(Object value)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubArrayList.AddObject">
            <summary>Задает stub ArrayList.Add(Object value)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubArrayList.AddRange(System.Collections.ICollection)">
            <summary>Задает заглушка ArrayList.AddRange(ICollection c)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubArrayList.AddRangeICollection">
            <summary>Задает stub ArrayList.AddRange(ICollection c)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubArrayList.AttachBackingFieldToCapacity">
            <summary>Присоединение делегатов для эмуляции StubArrayList.Capacity как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubArrayList.BinarySearch(System.Object)">
            <summary>Задает заглушка ArrayList.BinarySearch(Object value)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubArrayList.BinarySearch(System.Object,System.Collections.IComparer)">
            <summary>Задает заглушка ArrayList.BinarySearch(Object value, IComparer comparer)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)">
            <summary>Задает заглушка ArrayList.BinarySearch(Int32 index, Int32 count, Object value, IComparer comparer)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubArrayList.BinarySearchInt32Int32ObjectIComparer">
            <summary>Задает stub ArrayList.BinarySearch(Int32 index, Int32 count, Object value, IComparer comparer)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubArrayList.BinarySearchObject">
            <summary>Задает stub ArrayList.BinarySearch(Object value)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubArrayList.BinarySearchObjectIComparer">
            <summary>Задает stub ArrayList.BinarySearch(Object value, IComparer comparer)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubArrayList.CapacityGet">
            <summary>Задает stub ArrayList.get_Capacity()</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubArrayList.CapacitySetInt32">
            <summary>Задает stub ArrayList.set_Capacity(Int32 value)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubArrayList.Clear">
            <summary>Задает заглушка ArrayList.Clear()</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubArrayList.Clear01">
            <summary>Задает stub ArrayList.Clear()</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubArrayList.Clone">
            <summary>Задает заглушка ArrayList.Clone()</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubArrayList.Clone01">
            <summary>Задает stub ArrayList.Clone()</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubArrayList.Contains(System.Object)">
            <summary>Задает заглушка ArrayList.Contains(Object item)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubArrayList.ContainsObject">
            <summary>Задает stub ArrayList.Contains(Object item)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubArrayList.CopyTo(System.Array)">
            <summary>Задает заглушка ArrayList.CopyTo(Array array)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubArrayList.CopyTo(System.Array,System.Int32)">
            <summary>Задает заглушка ArrayList.CopyTo(Array array, Int32 arrayIndex)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubArrayList.CopyTo(System.Int32,System.Array,System.Int32,System.Int32)">
            <summary>Задает заглушка ArrayList.CopyTo(Int32 index, Array array, Int32 arrayIndex, Int32 count)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubArrayList.CopyToArray">
            <summary>Задает stub ArrayList.CopyTo(Array array)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubArrayList.CopyToArrayInt32">
            <summary>Задает stub ArrayList.CopyTo(Array array, Int32 arrayIndex)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubArrayList.CopyToInt32ArrayInt32Int32">
            <summary>Задает stub ArrayList.CopyTo(Int32 index, Array array, Int32 arrayIndex, Int32 count)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubArrayList.CountGet">
            <summary>Задает stub ArrayList.get_Count()</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubArrayList.GetEnumerator">
            <summary>Задает заглушка ArrayList.GetEnumerator()</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubArrayList.GetEnumerator(System.Int32,System.Int32)">
            <summary>Задает заглушка ArrayList.GetEnumerator(Int32 index, Int32 count)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubArrayList.GetEnumerator01">
            <summary>Задает stub ArrayList.GetEnumerator()</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubArrayList.GetEnumeratorInt32Int32">
            <summary>Задает stub ArrayList.GetEnumerator(Int32 index, Int32 count)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubArrayList.GetRange(System.Int32,System.Int32)">
            <summary>Задает заглушка ArrayList.GetRange(Int32 index, Int32 count)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubArrayList.GetRangeInt32Int32">
            <summary>Задает stub ArrayList.GetRange(Int32 index, Int32 count)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubArrayList.IndexOf(System.Object)">
            <summary>Задает заглушка ArrayList.IndexOf(Object value)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubArrayList.IndexOf(System.Object,System.Int32)">
            <summary>Задает заглушка ArrayList.IndexOf(Object value, Int32 startIndex)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubArrayList.IndexOf(System.Object,System.Int32,System.Int32)">
            <summary>Задает заглушка ArrayList.IndexOf(Object value, Int32 startIndex, Int32 count)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubArrayList.IndexOfObject">
            <summary>Задает stub ArrayList.IndexOf(Object value)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubArrayList.IndexOfObjectInt32">
            <summary>Задает stub ArrayList.IndexOf(Object value, Int32 startIndex)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubArrayList.IndexOfObjectInt32Int32">
            <summary>Задает stub ArrayList.IndexOf(Object value, Int32 startIndex, Int32 count)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubArrayList.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubArrayList</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubArrayList.Insert(System.Int32,System.Object)">
            <summary>Задает заглушка ArrayList.Insert(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubArrayList.InsertInt32Object">
            <summary>Задает stub ArrayList.Insert(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubArrayList.InsertRange(System.Int32,System.Collections.ICollection)">
            <summary>Задает заглушка ArrayList.InsertRange(Int32 index, ICollection c)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubArrayList.InsertRangeInt32ICollection">
            <summary>Задает stub ArrayList.InsertRange(Int32 index, ICollection c)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubArrayList.IsFixedSizeGet">
            <summary>Задает stub ArrayList.get_IsFixedSize()</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubArrayList.IsReadOnlyGet">
            <summary>Задает stub ArrayList.get_IsReadOnly()</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubArrayList.IsSynchronizedGet">
            <summary>Задает stub ArrayList.get_IsSynchronized()</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubArrayList.ItemGetInt32">
            <summary>Задает stub ArrayList.get_Item(Int32 index)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubArrayList.ItemSetInt32Object">
            <summary>Задает stub ArrayList.set_Item(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubArrayList.LastIndexOf(System.Object)">
            <summary>Задает заглушка ArrayList.LastIndexOf(Object value)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubArrayList.LastIndexOf(System.Object,System.Int32)">
            <summary>Задает заглушка ArrayList.LastIndexOf(Object value, Int32 startIndex)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubArrayList.LastIndexOf(System.Object,System.Int32,System.Int32)">
            <summary>Задает заглушка ArrayList.LastIndexOf(Object value, Int32 startIndex, Int32 count)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubArrayList.LastIndexOfObject">
            <summary>Задает stub ArrayList.LastIndexOf(Object value)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubArrayList.LastIndexOfObjectInt32">
            <summary>Задает stub ArrayList.LastIndexOf(Object value, Int32 startIndex)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubArrayList.LastIndexOfObjectInt32Int32">
            <summary>Задает stub ArrayList.LastIndexOf(Object value, Int32 startIndex, Int32 count)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubArrayList.Remove(System.Object)">
            <summary>Задает заглушка ArrayList.Remove(Object obj)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubArrayList.RemoveAt(System.Int32)">
            <summary>Задает заглушка ArrayList.RemoveAt(Int32 index)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubArrayList.RemoveAtInt32">
            <summary>Задает stub ArrayList.RemoveAt(Int32 index)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubArrayList.RemoveObject">
            <summary>Задает stub ArrayList.Remove(Object obj)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubArrayList.RemoveRange(System.Int32,System.Int32)">
            <summary>Задает заглушка ArrayList.RemoveRange(Int32 index, Int32 count)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubArrayList.RemoveRangeInt32Int32">
            <summary>Задает stub ArrayList.RemoveRange(Int32 index, Int32 count)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubArrayList.Reverse">
            <summary>Задает заглушка ArrayList.Reverse()</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubArrayList.Reverse(System.Int32,System.Int32)">
            <summary>Задает заглушка ArrayList.Reverse(Int32 index, Int32 count)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubArrayList.Reverse01">
            <summary>Задает stub ArrayList.Reverse()</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubArrayList.ReverseInt32Int32">
            <summary>Задает stub ArrayList.Reverse(Int32 index, Int32 count)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubArrayList.SetRange(System.Int32,System.Collections.ICollection)">
            <summary>Задает заглушка ArrayList.SetRange(Int32 index, ICollection c)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubArrayList.SetRangeInt32ICollection">
            <summary>Задает stub ArrayList.SetRange(Int32 index, ICollection c)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubArrayList.Sort">
            <summary>Задает заглушка ArrayList.Sort()</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubArrayList.Sort(System.Collections.IComparer)">
            <summary>Задает заглушка ArrayList.Sort(IComparer comparer)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubArrayList.Sort(System.Int32,System.Int32,System.Collections.IComparer)">
            <summary>Задает заглушка ArrayList.Sort(Int32 index, Int32 count, IComparer comparer)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubArrayList.Sort01">
            <summary>Задает stub ArrayList.Sort()</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubArrayList.SortIComparer">
            <summary>Задает stub ArrayList.Sort(IComparer comparer)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubArrayList.SortInt32Int32IComparer">
            <summary>Задает stub ArrayList.Sort(Int32 index, Int32 count, IComparer comparer)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubArrayList.SyncRootGet">
            <summary>Задает stub ArrayList.get_SyncRoot()</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubArrayList.ToArray(System.Type)">
            <summary>Задает заглушка ArrayList.ToArray(Type type)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubArrayList.ToArray">
            <summary>Задает заглушка ArrayList.ToArray()</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubArrayList.ToArray01">
            <summary>Задает stub ArrayList.ToArray()</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubArrayList.ToArrayType">
            <summary>Задает stub ArrayList.ToArray(Type type)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubArrayList.TrimToSize">
            <summary>Задает заглушка ArrayList.TrimToSize()</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubArrayList.TrimToSize01">
            <summary>Задает stub ArrayList.TrimToSize()</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubArrayList.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubArrayList.Capacity">
            <summary>Задает stub ArrayList.get_Capacity()</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubArrayList.Count">
            <summary>Задает stub ArrayList.get_Count()</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubArrayList.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubArrayList.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubArrayList.IsFixedSize">
            <summary>Задает stub ArrayList.get_IsFixedSize()</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubArrayList.IsReadOnly">
            <summary>Задает stub ArrayList.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubArrayList.IsSynchronized">
            <summary>Задает stub ArrayList.get_IsSynchronized()</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubArrayList.Item(System.Int32)">
            <summary>Задает stub ArrayList.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubArrayList.SyncRoot">
            <summary>Задает stub ArrayList.get_SyncRoot()</summary>
        </member>
        <member name="T:System.Collections.Fakes.StubCaseInsensitiveComparer">
            <summary>Тип заглушки System.Collections.CaseInsensitiveComparer</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubCaseInsensitiveComparer.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubCaseInsensitiveComparer.#ctor(System.Globalization.CultureInfo)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubCaseInsensitiveComparer.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCaseInsensitiveComparer</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubCaseInsensitiveComparer.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubCaseInsensitiveComparer.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubCaseInsensitiveComparer.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Collections.Fakes.StubCollectionBase">
            <summary>Тип заглушки System.Collections.CollectionBase</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubCollectionBase.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubCollectionBase.#ctor(System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubCollectionBase.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCollectionBase</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubCollectionBase.OnClear">
            <summary>Задает заглушка CollectionBase.OnClear()</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubCollectionBase.OnClear01">
            <summary>Задает stub CollectionBase.OnClear()</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubCollectionBase.OnClearComplete">
            <summary>Задает заглушка CollectionBase.OnClearComplete()</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubCollectionBase.OnClearComplete01">
            <summary>Задает stub CollectionBase.OnClearComplete()</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubCollectionBase.OnInsert(System.Int32,System.Object)">
            <summary>Задает заглушка CollectionBase.OnInsert(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubCollectionBase.OnInsertComplete(System.Int32,System.Object)">
            <summary>Задает заглушка CollectionBase.OnInsertComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubCollectionBase.OnInsertCompleteInt32Object">
            <summary>Задает stub CollectionBase.OnInsertComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubCollectionBase.OnInsertInt32Object">
            <summary>Задает stub CollectionBase.OnInsert(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubCollectionBase.OnRemove(System.Int32,System.Object)">
            <summary>Задает заглушка CollectionBase.OnRemove(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubCollectionBase.OnRemoveComplete(System.Int32,System.Object)">
            <summary>Задает заглушка CollectionBase.OnRemoveComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubCollectionBase.OnRemoveCompleteInt32Object">
            <summary>Задает stub CollectionBase.OnRemoveComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubCollectionBase.OnRemoveInt32Object">
            <summary>Задает stub CollectionBase.OnRemove(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubCollectionBase.OnSet(System.Int32,System.Object,System.Object)">
            <summary>Задает заглушка CollectionBase.OnSet(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubCollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)">
            <summary>Задает заглушка CollectionBase.OnSetComplete(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubCollectionBase.OnSetCompleteInt32ObjectObject">
            <summary>Задает stub CollectionBase.OnSetComplete(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubCollectionBase.OnSetInt32ObjectObject">
            <summary>Задает stub CollectionBase.OnSet(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubCollectionBase.OnValidate(System.Object)">
            <summary>Задает заглушка CollectionBase.OnValidate(Object value)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubCollectionBase.OnValidateObject">
            <summary>Задает stub CollectionBase.OnValidate(Object value)</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubCollectionBase.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubCollectionBase.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubCollectionBase.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Collections.Fakes.StubDictionaryBase">
            <summary>Тип заглушки System.Collections.DictionaryBase</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubDictionaryBase.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubDictionaryBase.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubDictionaryBase</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubDictionaryBase.OnClear">
            <summary>Задает заглушка DictionaryBase.OnClear()</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubDictionaryBase.OnClear01">
            <summary>Задает stub DictionaryBase.OnClear()</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubDictionaryBase.OnClearComplete">
            <summary>Задает заглушка DictionaryBase.OnClearComplete()</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubDictionaryBase.OnClearComplete01">
            <summary>Задает stub DictionaryBase.OnClearComplete()</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubDictionaryBase.OnGet(System.Object,System.Object)">
            <summary>Задает заглушка DictionaryBase.OnGet(Object key, Object currentValue)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubDictionaryBase.OnGetObjectObject">
            <summary>Задает stub DictionaryBase.OnGet(Object key, Object currentValue)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubDictionaryBase.OnInsert(System.Object,System.Object)">
            <summary>Задает заглушка DictionaryBase.OnInsert(Object key, Object value)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubDictionaryBase.OnInsertComplete(System.Object,System.Object)">
            <summary>Задает заглушка DictionaryBase.OnInsertComplete(Object key, Object value)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubDictionaryBase.OnInsertCompleteObjectObject">
            <summary>Задает stub DictionaryBase.OnInsertComplete(Object key, Object value)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubDictionaryBase.OnInsertObjectObject">
            <summary>Задает stub DictionaryBase.OnInsert(Object key, Object value)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubDictionaryBase.OnRemove(System.Object,System.Object)">
            <summary>Задает заглушка DictionaryBase.OnRemove(Object key, Object value)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubDictionaryBase.OnRemoveComplete(System.Object,System.Object)">
            <summary>Задает заглушка DictionaryBase.OnRemoveComplete(Object key, Object value)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubDictionaryBase.OnRemoveCompleteObjectObject">
            <summary>Задает stub DictionaryBase.OnRemoveComplete(Object key, Object value)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubDictionaryBase.OnRemoveObjectObject">
            <summary>Задает stub DictionaryBase.OnRemove(Object key, Object value)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubDictionaryBase.OnSet(System.Object,System.Object,System.Object)">
            <summary>Задает заглушка DictionaryBase.OnSet(Object key, Object oldValue, Object newValue)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubDictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)">
            <summary>Задает заглушка DictionaryBase.OnSetComplete(Object key, Object oldValue, Object newValue)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubDictionaryBase.OnSetCompleteObjectObjectObject">
            <summary>Задает stub DictionaryBase.OnSetComplete(Object key, Object oldValue, Object newValue)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubDictionaryBase.OnSetObjectObjectObject">
            <summary>Задает stub DictionaryBase.OnSet(Object key, Object oldValue, Object newValue)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubDictionaryBase.OnValidate(System.Object,System.Object)">
            <summary>Задает заглушка DictionaryBase.OnValidate(Object key, Object value)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubDictionaryBase.OnValidateObjectObject">
            <summary>Задает stub DictionaryBase.OnValidate(Object key, Object value)</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubDictionaryBase.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubDictionaryBase.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubDictionaryBase.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Collections.Fakes.StubHashtable">
            <summary>Тип заглушки System.Collections.Hashtable</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubHashtable.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubHashtable.#ctor(System.Collections.IDictionary)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubHashtable.#ctor(System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubHashtable.#ctor(System.Collections.IEqualityComparer)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubHashtable.#ctor(System.Int32,System.Single)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubHashtable.#ctor(System.Collections.IDictionary,System.Single)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubHashtable.#ctor(System.Collections.IDictionary,System.Collections.IEqualityComparer)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubHashtable.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubHashtable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubHashtable.#ctor(System.Int32,System.Collections.IEqualityComparer)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubHashtable.#ctor(System.Int32,System.Single,System.Collections.IEqualityComparer)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubHashtable.#ctor(System.Collections.IDictionary,System.Collections.IHashCodeProvider,System.Collections.IComparer)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubHashtable.#ctor(System.Collections.IDictionary,System.Single,System.Collections.IEqualityComparer)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubHashtable.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubHashtable.#ctor(System.Int32,System.Single,System.Collections.IHashCodeProvider,System.Collections.IComparer)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubHashtable.#ctor(System.Collections.IDictionary,System.Single,System.Collections.IHashCodeProvider,System.Collections.IComparer)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubHashtable.Add(System.Object,System.Object)">
            <summary>Задает заглушка Hashtable.Add(Object key, Object value)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubHashtable.AddObjectObject">
            <summary>Задает stub Hashtable.Add(Object key, Object value)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubHashtable.Clear">
            <summary>Задает заглушка Hashtable.Clear()</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubHashtable.Clear01">
            <summary>Задает stub Hashtable.Clear()</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubHashtable.Clone">
            <summary>Задает заглушка Hashtable.Clone()</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubHashtable.Clone01">
            <summary>Задает stub Hashtable.Clone()</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubHashtable.Contains(System.Object)">
            <summary>Задает заглушка Hashtable.Contains(Object key)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubHashtable.ContainsKey(System.Object)">
            <summary>Задает заглушка Hashtable.ContainsKey(Object key)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubHashtable.ContainsKeyObject">
            <summary>Задает stub Hashtable.ContainsKey(Object key)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubHashtable.ContainsObject">
            <summary>Задает stub Hashtable.Contains(Object key)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubHashtable.ContainsValue(System.Object)">
            <summary>Задает заглушка Hashtable.ContainsValue(Object value)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubHashtable.ContainsValueObject">
            <summary>Задает stub Hashtable.ContainsValue(Object value)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubHashtable.CopyTo(System.Array,System.Int32)">
            <summary>Задает заглушка Hashtable.CopyTo(Array array, Int32 arrayIndex)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubHashtable.CopyToArrayInt32">
            <summary>Задает stub Hashtable.CopyTo(Array array, Int32 arrayIndex)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubHashtable.CountGet">
            <summary>Задает stub Hashtable.get_Count()</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubHashtable.GetEnumerator">
            <summary>Задает заглушка Hashtable.GetEnumerator()</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubHashtable.GetEnumerator01">
            <summary>Задает stub Hashtable.GetEnumerator()</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubHashtable.GetHash(System.Object)">
            <summary>Задает заглушка Hashtable.GetHash(Object key)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubHashtable.GetHashObject">
            <summary>Задает stub Hashtable.GetHash(Object key)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubHashtable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка Hashtable.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubHashtable.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub Hashtable.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubHashtable.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubHashtable</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubHashtable.IsFixedSizeGet">
            <summary>Задает stub Hashtable.get_IsFixedSize()</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubHashtable.IsReadOnlyGet">
            <summary>Задает stub Hashtable.get_IsReadOnly()</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubHashtable.IsSynchronizedGet">
            <summary>Задает stub Hashtable.get_IsSynchronized()</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubHashtable.ItemGetObject">
            <summary>Задает stub Hashtable.get_Item(Object key)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubHashtable.ItemSetObjectObject">
            <summary>Задает stub Hashtable.set_Item(Object key, Object value)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubHashtable.KeyEquals(System.Object,System.Object)">
            <summary>Задает заглушка Hashtable.KeyEquals(Object item, Object key)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubHashtable.KeyEqualsObjectObject">
            <summary>Задает stub Hashtable.KeyEquals(Object item, Object key)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubHashtable.KeysGet">
            <summary>Задает stub Hashtable.get_Keys()</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubHashtable.OnDeserialization(System.Object)">
            <summary>Задает заглушка Hashtable.OnDeserialization(Object sender)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubHashtable.OnDeserializationObject">
            <summary>Задает stub Hashtable.OnDeserialization(Object sender)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubHashtable.Remove(System.Object)">
            <summary>Задает заглушка Hashtable.Remove(Object key)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubHashtable.RemoveObject">
            <summary>Задает stub Hashtable.Remove(Object key)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubHashtable.SyncRootGet">
            <summary>Задает stub Hashtable.get_SyncRoot()</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubHashtable.ValuesGet">
            <summary>Задает stub Hashtable.get_Values()</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubHashtable.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubHashtable.Count">
            <summary>Задает stub Hashtable.get_Count()</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubHashtable.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubHashtable.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubHashtable.IsFixedSize">
            <summary>Задает stub Hashtable.get_IsFixedSize()</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubHashtable.IsReadOnly">
            <summary>Задает stub Hashtable.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubHashtable.IsSynchronized">
            <summary>Задает stub Hashtable.get_IsSynchronized()</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubHashtable.Item(System.Object)">
            <summary>Задает stub Hashtable.get_Item(Object key)</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubHashtable.Keys">
            <summary>Задает stub Hashtable.get_Keys()</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubHashtable.SyncRoot">
            <summary>Задает stub Hashtable.get_SyncRoot()</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubHashtable.Values">
            <summary>Задает stub Hashtable.get_Values()</summary>
        </member>
        <member name="T:System.Collections.Fakes.StubICollection">
            <summary>Тип заглушки System.Collections.ICollection</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubICollection.#ctor">
            <summary>Инициализирует новый экземпляр type StubICollection</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubICollection.CopyToArrayInt32">
            <summary>Задает stub ICollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubICollection.CountGet">
            <summary>Задает stub ICollection.get_Count()</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubICollection.GetEnumerator">
            <summary>Задает stub IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubICollection.IsSynchronizedGet">
            <summary>Задает stub ICollection.get_IsSynchronized()</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubICollection.SyncRootGet">
            <summary>Задает stub ICollection.get_SyncRoot()</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubICollection.global::System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>Задает заглушка ICollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubICollection.global::System#Collections#IEnumerable#GetEnumerator">
            <summary>Задает заглушка IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubICollection.global::System#Collections#ICollection#Count">
            <summary>Задает stub ICollection.get_Count()</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubICollection.global::System#Collections#ICollection#IsSynchronized">
            <summary>Задает stub ICollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubICollection.global::System#Collections#ICollection#SyncRoot">
            <summary>Задает stub ICollection.get_SyncRoot()</summary>
        </member>
        <member name="T:System.Collections.Fakes.StubIComparer">
            <summary>Тип заглушки System.Collections.IComparer</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubIComparer.#ctor">
            <summary>Инициализирует новый экземпляр type StubIComparer</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubIComparer.CompareObjectObject">
            <summary>Задает stub IComparer.Compare(Object x, Object y)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubIComparer.global::System#Collections#IComparer#Compare(System.Object,System.Object)">
            <summary>Задает заглушка IComparer.Compare(Object x, Object y)</summary>
        </member>
        <member name="T:System.Collections.Fakes.StubIDictionary">
            <summary>Тип заглушки System.Collections.IDictionary</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubIDictionary.#ctor">
            <summary>Инициализирует новый экземпляр type StubIDictionary</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubIDictionary.AddObjectObject">
            <summary>Задает stub IDictionary.Add(Object key, Object value)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubIDictionary.Clear">
            <summary>Задает stub IDictionary.Clear()</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubIDictionary.ContainsObject">
            <summary>Задает stub IDictionary.Contains(Object key)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubIDictionary.CopyToArrayInt32">
            <summary>Задает stub ICollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubIDictionary.CountGet">
            <summary>Задает stub ICollection.get_Count()</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubIDictionary.GetEnumerator">
            <summary>Задает stub IDictionary.GetEnumerator()</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubIDictionary.GetEnumerator01">
            <summary>Задает stub IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubIDictionary.IsFixedSizeGet">
            <summary>Задает stub IDictionary.get_IsFixedSize()</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubIDictionary.IsReadOnlyGet">
            <summary>Задает stub IDictionary.get_IsReadOnly()</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubIDictionary.IsSynchronizedGet">
            <summary>Задает stub ICollection.get_IsSynchronized()</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubIDictionary.ItemGetObject">
            <summary>Задает stub IDictionary.get_Item(Object key)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubIDictionary.ItemSetObjectObject">
            <summary>Задает stub IDictionary.set_Item(Object key, Object value)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubIDictionary.KeysGet">
            <summary>Задает stub IDictionary.get_Keys()</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubIDictionary.RemoveObject">
            <summary>Задает stub IDictionary.Remove(Object key)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubIDictionary.SyncRootGet">
            <summary>Задает stub ICollection.get_SyncRoot()</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubIDictionary.global::System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>Задает заглушка ICollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubIDictionary.global::System#Collections#IDictionary#Add(System.Object,System.Object)">
            <summary>Задает заглушка IDictionary.Add(Object key, Object value)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubIDictionary.global::System#Collections#IDictionary#Clear">
            <summary>Задает заглушка IDictionary.Clear()</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubIDictionary.global::System#Collections#IDictionary#Contains(System.Object)">
            <summary>Задает заглушка IDictionary.Contains(Object key)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubIDictionary.global::System#Collections#IDictionary#GetEnumerator">
            <summary>Задает заглушка IDictionary.GetEnumerator()</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubIDictionary.global::System#Collections#IDictionary#Remove(System.Object)">
            <summary>Задает заглушка IDictionary.Remove(Object key)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubIDictionary.global::System#Collections#IEnumerable#GetEnumerator">
            <summary>Задает заглушка IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubIDictionary.ValuesGet">
            <summary>Задает stub IDictionary.get_Values()</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubIDictionary.global::System#Collections#ICollection#Count">
            <summary>Задает stub ICollection.get_Count()</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubIDictionary.global::System#Collections#IDictionary#IsFixedSize">
            <summary>Задает stub IDictionary.get_IsFixedSize()</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubIDictionary.global::System#Collections#IDictionary#IsReadOnly">
            <summary>Задает stub IDictionary.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubIDictionary.global::System#Collections#ICollection#IsSynchronized">
            <summary>Задает stub ICollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubIDictionary.System#Collections#IDictionary#Item(System.Object)">
            <summary>Задает stub IDictionary.get_Item(Object key)</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubIDictionary.global::System#Collections#IDictionary#Keys">
            <summary>Задает stub IDictionary.get_Keys()</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubIDictionary.global::System#Collections#ICollection#SyncRoot">
            <summary>Задает stub ICollection.get_SyncRoot()</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubIDictionary.global::System#Collections#IDictionary#Values">
            <summary>Задает stub IDictionary.get_Values()</summary>
        </member>
        <member name="T:System.Collections.Fakes.StubIDictionaryEnumerator">
            <summary>Тип заглушки System.Collections.IDictionaryEnumerator</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubIDictionaryEnumerator.#ctor">
            <summary>Инициализирует новый экземпляр type StubIDictionaryEnumerator</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubIDictionaryEnumerator.CurrentGet">
            <summary>Задает stub IEnumerator.get_Current()</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubIDictionaryEnumerator.EntryGet">
            <summary>Задает stub IDictionaryEnumerator.get_Entry()</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubIDictionaryEnumerator.KeyGet">
            <summary>Задает stub IDictionaryEnumerator.get_Key()</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubIDictionaryEnumerator.MoveNext">
            <summary>Задает stub IEnumerator.MoveNext()</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubIDictionaryEnumerator.Reset">
            <summary>Задает stub IEnumerator.Reset()</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubIDictionaryEnumerator.global::System#Collections#IEnumerator#MoveNext">
            <summary>Задает заглушка IEnumerator.MoveNext()</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubIDictionaryEnumerator.global::System#Collections#IEnumerator#Reset">
            <summary>Задает заглушка IEnumerator.Reset()</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubIDictionaryEnumerator.ValueGet">
            <summary>Задает stub IDictionaryEnumerator.get_Value()</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubIDictionaryEnumerator.global::System#Collections#IEnumerator#Current">
            <summary>Задает stub IEnumerator.get_Current()</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubIDictionaryEnumerator.global::System#Collections#IDictionaryEnumerator#Entry">
            <summary>Задает stub IDictionaryEnumerator.get_Entry()</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubIDictionaryEnumerator.global::System#Collections#IDictionaryEnumerator#Key">
            <summary>Задает stub IDictionaryEnumerator.get_Key()</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubIDictionaryEnumerator.global::System#Collections#IDictionaryEnumerator#Value">
            <summary>Задает stub IDictionaryEnumerator.get_Value()</summary>
        </member>
        <member name="T:System.Collections.Fakes.StubIEnumerable">
            <summary>Тип заглушки System.Collections.IEnumerable</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubIEnumerable.#ctor">
            <summary>Инициализирует новый экземпляр type StubIEnumerable</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubIEnumerable.GetEnumerator">
            <summary>Задает stub IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubIEnumerable.global::System#Collections#IEnumerable#GetEnumerator">
            <summary>Задает заглушка IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:System.Collections.Fakes.StubIEnumerator">
            <summary>Тип заглушки System.Collections.IEnumerator</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubIEnumerator.#ctor">
            <summary>Инициализирует новый экземпляр type StubIEnumerator</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubIEnumerator.CurrentGet">
            <summary>Задает stub IEnumerator.get_Current()</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubIEnumerator.MoveNext">
            <summary>Задает stub IEnumerator.MoveNext()</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubIEnumerator.Reset">
            <summary>Задает stub IEnumerator.Reset()</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubIEnumerator.global::System#Collections#IEnumerator#MoveNext">
            <summary>Задает заглушка IEnumerator.MoveNext()</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubIEnumerator.global::System#Collections#IEnumerator#Reset">
            <summary>Задает заглушка IEnumerator.Reset()</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubIEnumerator.global::System#Collections#IEnumerator#Current">
            <summary>Задает stub IEnumerator.get_Current()</summary>
        </member>
        <member name="T:System.Collections.Fakes.StubIEqualityComparer">
            <summary>Тип заглушки System.Collections.IEqualityComparer</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubIEqualityComparer.#ctor">
            <summary>Инициализирует новый экземпляр type StubIEqualityComparer</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubIEqualityComparer.EqualsObjectObject">
            <summary>Задает stub IEqualityComparer.Equals(Object x, Object y)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubIEqualityComparer.GetHashCodeObject">
            <summary>Задает stub IEqualityComparer.GetHashCode(Object obj)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubIEqualityComparer.global::System#Collections#IEqualityComparer#Equals(System.Object,System.Object)">
            <summary>Задает заглушка IEqualityComparer.Equals(Object x, Object y)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubIEqualityComparer.global::System#Collections#IEqualityComparer#GetHashCode(System.Object)">
            <summary>Задает заглушка IEqualityComparer.GetHashCode(Object obj)</summary>
        </member>
        <member name="T:System.Collections.Fakes.StubIList">
            <summary>Тип заглушки System.Collections.IList</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubIList.#ctor">
            <summary>Инициализирует новый экземпляр type StubIList</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubIList.AddObject">
            <summary>Задает stub IList.Add(Object value)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubIList.Clear">
            <summary>Задает stub IList.Clear()</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubIList.ContainsObject">
            <summary>Задает stub IList.Contains(Object value)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubIList.CopyToArrayInt32">
            <summary>Задает stub ICollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubIList.CountGet">
            <summary>Задает stub ICollection.get_Count()</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubIList.GetEnumerator">
            <summary>Задает stub IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubIList.IndexOfObject">
            <summary>Задает stub IList.IndexOf(Object value)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubIList.InsertInt32Object">
            <summary>Задает stub IList.Insert(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubIList.IsFixedSizeGet">
            <summary>Задает stub IList.get_IsFixedSize()</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubIList.IsReadOnlyGet">
            <summary>Задает stub IList.get_IsReadOnly()</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubIList.IsSynchronizedGet">
            <summary>Задает stub ICollection.get_IsSynchronized()</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubIList.ItemGetInt32">
            <summary>Задает stub IList.get_Item(Int32 index)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubIList.ItemSetInt32Object">
            <summary>Задает stub IList.set_Item(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubIList.RemoveAtInt32">
            <summary>Задает stub IList.RemoveAt(Int32 index)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubIList.RemoveObject">
            <summary>Задает stub IList.Remove(Object value)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubIList.SyncRootGet">
            <summary>Задает stub ICollection.get_SyncRoot()</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubIList.global::System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>Задает заглушка ICollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubIList.global::System#Collections#IEnumerable#GetEnumerator">
            <summary>Задает заглушка IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubIList.global::System#Collections#IList#Add(System.Object)">
            <summary>Задает заглушка IList.Add(Object value)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubIList.global::System#Collections#IList#Clear">
            <summary>Задает заглушка IList.Clear()</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubIList.global::System#Collections#IList#Contains(System.Object)">
            <summary>Задает заглушка IList.Contains(Object value)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubIList.global::System#Collections#IList#IndexOf(System.Object)">
            <summary>Задает заглушка IList.IndexOf(Object value)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubIList.global::System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>Задает заглушка IList.Insert(Int32 index, Object value)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubIList.global::System#Collections#IList#Remove(System.Object)">
            <summary>Задает заглушка IList.Remove(Object value)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubIList.global::System#Collections#IList#RemoveAt(System.Int32)">
            <summary>Задает заглушка IList.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubIList.global::System#Collections#ICollection#Count">
            <summary>Задает stub ICollection.get_Count()</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubIList.global::System#Collections#IList#IsFixedSize">
            <summary>Задает stub IList.get_IsFixedSize()</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubIList.global::System#Collections#IList#IsReadOnly">
            <summary>Задает stub IList.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubIList.global::System#Collections#ICollection#IsSynchronized">
            <summary>Задает stub ICollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubIList.System#Collections#IList#Item(System.Int32)">
            <summary>Задает stub IList.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubIList.global::System#Collections#ICollection#SyncRoot">
            <summary>Задает stub ICollection.get_SyncRoot()</summary>
        </member>
        <member name="T:System.Collections.Fakes.StubIStructuralComparable">
            <summary>Тип заглушки System.Collections.IStructuralComparable</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubIStructuralComparable.#ctor">
            <summary>Инициализирует новый экземпляр type StubIStructuralComparable</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubIStructuralComparable.CompareToObjectIComparer">
            <summary>Задает stub IStructuralComparable.CompareTo(Object other, IComparer comparer)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubIStructuralComparable.global::System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
            <summary>Задает заглушка IStructuralComparable.CompareTo(Object other, IComparer comparer)</summary>
        </member>
        <member name="T:System.Collections.Fakes.StubIStructuralEquatable">
            <summary>Тип заглушки System.Collections.IStructuralEquatable</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubIStructuralEquatable.#ctor">
            <summary>Инициализирует новый экземпляр type StubIStructuralEquatable</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubIStructuralEquatable.EqualsObjectIEqualityComparer">
            <summary>Задает stub IStructuralEquatable.Equals(Object other, IEqualityComparer comparer)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubIStructuralEquatable.GetHashCodeIEqualityComparer">
            <summary>Задает stub IStructuralEquatable.GetHashCode(IEqualityComparer comparer)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubIStructuralEquatable.global::System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
            <summary>Задает заглушка IStructuralEquatable.Equals(Object other, IEqualityComparer comparer)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubIStructuralEquatable.global::System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
            <summary>Задает заглушка IStructuralEquatable.GetHashCode(IEqualityComparer comparer)</summary>
        </member>
        <member name="T:System.Collections.Fakes.StubQueue">
            <summary>Тип заглушки System.Collections.Queue</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubQueue.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubQueue.#ctor(System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubQueue.#ctor(System.Collections.ICollection)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubQueue.#ctor(System.Int32,System.Single)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubQueue.Clear">
            <summary>Задает заглушка Queue.Clear()</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubQueue.Clear01">
            <summary>Задает stub Queue.Clear()</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubQueue.Clone">
            <summary>Задает заглушка Queue.Clone()</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubQueue.Clone01">
            <summary>Задает stub Queue.Clone()</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubQueue.Contains(System.Object)">
            <summary>Задает заглушка Queue.Contains(Object obj)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubQueue.ContainsObject">
            <summary>Задает stub Queue.Contains(Object obj)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubQueue.CopyTo(System.Array,System.Int32)">
            <summary>Задает заглушка Queue.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubQueue.CopyToArrayInt32">
            <summary>Задает stub Queue.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubQueue.CountGet">
            <summary>Задает stub Queue.get_Count()</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubQueue.Dequeue">
            <summary>Задает заглушка Queue.Dequeue()</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubQueue.Dequeue01">
            <summary>Задает stub Queue.Dequeue()</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubQueue.Enqueue(System.Object)">
            <summary>Задает заглушка Queue.Enqueue(Object obj)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubQueue.EnqueueObject">
            <summary>Задает stub Queue.Enqueue(Object obj)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubQueue.GetEnumerator">
            <summary>Задает заглушка Queue.GetEnumerator()</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubQueue.GetEnumerator01">
            <summary>Задает stub Queue.GetEnumerator()</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubQueue.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubQueue</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubQueue.IsSynchronizedGet">
            <summary>Задает stub Queue.get_IsSynchronized()</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubQueue.Peek">
            <summary>Задает заглушка Queue.Peek()</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubQueue.Peek01">
            <summary>Задает stub Queue.Peek()</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubQueue.SyncRootGet">
            <summary>Задает stub Queue.get_SyncRoot()</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubQueue.ToArray">
            <summary>Задает заглушка Queue.ToArray()</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubQueue.ToArray01">
            <summary>Задает stub Queue.ToArray()</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubQueue.TrimToSize">
            <summary>Задает заглушка Queue.TrimToSize()</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubQueue.TrimToSize01">
            <summary>Задает stub Queue.TrimToSize()</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubQueue.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubQueue.Count">
            <summary>Задает stub Queue.get_Count()</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubQueue.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubQueue.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubQueue.IsSynchronized">
            <summary>Задает stub Queue.get_IsSynchronized()</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubQueue.SyncRoot">
            <summary>Задает stub Queue.get_SyncRoot()</summary>
        </member>
        <member name="T:System.Collections.Fakes.StubReadOnlyCollectionBase">
            <summary>Тип заглушки System.Collections.ReadOnlyCollectionBase</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubReadOnlyCollectionBase.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubReadOnlyCollectionBase.CountGet">
            <summary>Задает stub ReadOnlyCollectionBase.get_Count()</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubReadOnlyCollectionBase.GetEnumerator">
            <summary>Задает заглушка ReadOnlyCollectionBase.GetEnumerator()</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubReadOnlyCollectionBase.GetEnumerator01">
            <summary>Задает stub ReadOnlyCollectionBase.GetEnumerator()</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubReadOnlyCollectionBase.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubReadOnlyCollectionBase</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubReadOnlyCollectionBase.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubReadOnlyCollectionBase.Count">
            <summary>Задает stub ReadOnlyCollectionBase.get_Count()</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubReadOnlyCollectionBase.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubReadOnlyCollectionBase.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Collections.Fakes.StubSortedList">
            <summary>Тип заглушки System.Collections.SortedList</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubSortedList.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubSortedList.#ctor(System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubSortedList.#ctor(System.Collections.IComparer)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubSortedList.#ctor(System.Collections.IDictionary)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubSortedList.#ctor(System.Collections.IComparer,System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubSortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubSortedList.Add(System.Object,System.Object)">
            <summary>Задает заглушка SortedList.Add(Object key, Object value)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubSortedList.AddObjectObject">
            <summary>Задает stub SortedList.Add(Object key, Object value)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubSortedList.AttachBackingFieldToCapacity">
            <summary>Присоединение делегатов для эмуляции StubSortedList.Capacity как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubSortedList.CapacityGet">
            <summary>Задает stub SortedList.get_Capacity()</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubSortedList.CapacitySetInt32">
            <summary>Задает stub SortedList.set_Capacity(Int32 value)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubSortedList.Clear">
            <summary>Задает заглушка SortedList.Clear()</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubSortedList.Clear01">
            <summary>Задает stub SortedList.Clear()</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubSortedList.Clone">
            <summary>Задает заглушка SortedList.Clone()</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubSortedList.Clone01">
            <summary>Задает stub SortedList.Clone()</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubSortedList.Contains(System.Object)">
            <summary>Задает заглушка SortedList.Contains(Object key)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubSortedList.ContainsKey(System.Object)">
            <summary>Задает заглушка SortedList.ContainsKey(Object key)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubSortedList.ContainsKeyObject">
            <summary>Задает stub SortedList.ContainsKey(Object key)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubSortedList.ContainsObject">
            <summary>Задает stub SortedList.Contains(Object key)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubSortedList.ContainsValue(System.Object)">
            <summary>Задает заглушка SortedList.ContainsValue(Object value)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubSortedList.ContainsValueObject">
            <summary>Задает stub SortedList.ContainsValue(Object value)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubSortedList.CopyTo(System.Array,System.Int32)">
            <summary>Задает заглушка SortedList.CopyTo(Array array, Int32 arrayIndex)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubSortedList.CopyToArrayInt32">
            <summary>Задает stub SortedList.CopyTo(Array array, Int32 arrayIndex)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubSortedList.CountGet">
            <summary>Задает stub SortedList.get_Count()</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubSortedList.GetByIndex(System.Int32)">
            <summary>Задает заглушка SortedList.GetByIndex(Int32 index)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubSortedList.GetByIndexInt32">
            <summary>Задает stub SortedList.GetByIndex(Int32 index)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubSortedList.GetEnumerator">
            <summary>Задает заглушка SortedList.GetEnumerator()</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubSortedList.GetEnumerator01">
            <summary>Задает stub SortedList.GetEnumerator()</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubSortedList.GetKey(System.Int32)">
            <summary>Задает заглушка SortedList.GetKey(Int32 index)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubSortedList.GetKeyInt32">
            <summary>Задает stub SortedList.GetKey(Int32 index)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubSortedList.GetKeyList">
            <summary>Задает заглушка SortedList.GetKeyList()</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubSortedList.GetKeyList01">
            <summary>Задает stub SortedList.GetKeyList()</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubSortedList.GetValueList">
            <summary>Задает заглушка SortedList.GetValueList()</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubSortedList.GetValueList01">
            <summary>Задает stub SortedList.GetValueList()</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubSortedList.IndexOfKey(System.Object)">
            <summary>Задает заглушка SortedList.IndexOfKey(Object key)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubSortedList.IndexOfKeyObject">
            <summary>Задает stub SortedList.IndexOfKey(Object key)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubSortedList.IndexOfValue(System.Object)">
            <summary>Задает заглушка SortedList.IndexOfValue(Object value)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubSortedList.IndexOfValueObject">
            <summary>Задает stub SortedList.IndexOfValue(Object value)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubSortedList.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubSortedList</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubSortedList.IsFixedSizeGet">
            <summary>Задает stub SortedList.get_IsFixedSize()</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubSortedList.IsReadOnlyGet">
            <summary>Задает stub SortedList.get_IsReadOnly()</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubSortedList.IsSynchronizedGet">
            <summary>Задает stub SortedList.get_IsSynchronized()</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubSortedList.ItemGetObject">
            <summary>Задает stub SortedList.get_Item(Object key)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubSortedList.ItemSetObjectObject">
            <summary>Задает stub SortedList.set_Item(Object key, Object value)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubSortedList.KeysGet">
            <summary>Задает stub SortedList.get_Keys()</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubSortedList.Remove(System.Object)">
            <summary>Задает заглушка SortedList.Remove(Object key)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubSortedList.RemoveAt(System.Int32)">
            <summary>Задает заглушка SortedList.RemoveAt(Int32 index)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubSortedList.RemoveAtInt32">
            <summary>Задает stub SortedList.RemoveAt(Int32 index)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubSortedList.RemoveObject">
            <summary>Задает stub SortedList.Remove(Object key)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubSortedList.SetByIndex(System.Int32,System.Object)">
            <summary>Задает заглушка SortedList.SetByIndex(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubSortedList.SetByIndexInt32Object">
            <summary>Задает stub SortedList.SetByIndex(Int32 index, Object value)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubSortedList.SyncRootGet">
            <summary>Задает stub SortedList.get_SyncRoot()</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubSortedList.TrimToSize">
            <summary>Задает заглушка SortedList.TrimToSize()</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubSortedList.TrimToSize01">
            <summary>Задает stub SortedList.TrimToSize()</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubSortedList.ValuesGet">
            <summary>Задает stub SortedList.get_Values()</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubSortedList.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubSortedList.Capacity">
            <summary>Задает stub SortedList.get_Capacity()</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubSortedList.Count">
            <summary>Задает stub SortedList.get_Count()</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubSortedList.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubSortedList.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubSortedList.IsFixedSize">
            <summary>Задает stub SortedList.get_IsFixedSize()</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubSortedList.IsReadOnly">
            <summary>Задает stub SortedList.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubSortedList.IsSynchronized">
            <summary>Задает stub SortedList.get_IsSynchronized()</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubSortedList.Item(System.Object)">
            <summary>Задает stub SortedList.get_Item(Object key)</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubSortedList.Keys">
            <summary>Задает stub SortedList.get_Keys()</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubSortedList.SyncRoot">
            <summary>Задает stub SortedList.get_SyncRoot()</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubSortedList.Values">
            <summary>Задает stub SortedList.get_Values()</summary>
        </member>
        <member name="T:System.Collections.Fakes.StubStack">
            <summary>Тип заглушки System.Collections.Stack</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubStack.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubStack.#ctor(System.Collections.ICollection)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubStack.#ctor(System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubStack.Clear">
            <summary>Задает заглушка Stack.Clear()</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubStack.Clear01">
            <summary>Задает stub Stack.Clear()</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubStack.Clone">
            <summary>Задает заглушка Stack.Clone()</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubStack.Clone01">
            <summary>Задает stub Stack.Clone()</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubStack.Contains(System.Object)">
            <summary>Задает заглушка Stack.Contains(Object obj)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubStack.ContainsObject">
            <summary>Задает stub Stack.Contains(Object obj)</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubStack.CopyTo(System.Array,System.Int32)">
            <summary>Задает заглушка Stack.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubStack.CopyToArrayInt32">
            <summary>Задает stub Stack.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubStack.CountGet">
            <summary>Задает stub Stack.get_Count()</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubStack.GetEnumerator">
            <summary>Задает заглушка Stack.GetEnumerator()</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubStack.GetEnumerator01">
            <summary>Задает stub Stack.GetEnumerator()</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubStack.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubStack</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubStack.IsSynchronizedGet">
            <summary>Задает stub Stack.get_IsSynchronized()</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubStack.Peek">
            <summary>Задает заглушка Stack.Peek()</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubStack.Peek01">
            <summary>Задает stub Stack.Peek()</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubStack.Pop">
            <summary>Задает заглушка Stack.Pop()</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubStack.Pop01">
            <summary>Задает stub Stack.Pop()</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubStack.Push(System.Object)">
            <summary>Задает заглушка Stack.Push(Object obj)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubStack.PushObject">
            <summary>Задает stub Stack.Push(Object obj)</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubStack.SyncRootGet">
            <summary>Задает stub Stack.get_SyncRoot()</summary>
        </member>
        <member name="M:System.Collections.Fakes.StubStack.ToArray">
            <summary>Задает заглушка Stack.ToArray()</summary>
        </member>
        <member name="F:System.Collections.Fakes.StubStack.ToArray01">
            <summary>Задает stub Stack.ToArray()</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubStack.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubStack.Count">
            <summary>Задает stub Stack.get_Count()</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubStack.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubStack.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubStack.IsSynchronized">
            <summary>Задает stub Stack.get_IsSynchronized()</summary>
        </member>
        <member name="P:System.Collections.Fakes.StubStack.SyncRoot">
            <summary>Задает stub Stack.get_SyncRoot()</summary>
        </member>
        <member name="T:System.Collections.Generic.Fakes.StubComparer`1">
            <summary>Тип заглушки System.Collections.Generic.Comparer`1</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubComparer`1.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubComparer`1.Compare(`0,`0)">
            <summary>Задает заглушка Comparer`1.Compare(!0 x, !0 y)</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubComparer`1.CompareT0T0">
            <summary>Задает stub Comparer`1.Compare(!0 x, !0 y)</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubComparer`1.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubComparer</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.StubComparer`1.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.StubComparer`1.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.StubComparer`1.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Collections.Generic.Fakes.StubDictionary`2">
            <summary>Тип заглушки System.Collections.Generic.Dictionary`2</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubDictionary`2.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubDictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubDictionary`2.#ctor(System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubDictionary`2.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubDictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubDictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка Dictionary`2.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubDictionary`2.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub Dictionary`2.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubDictionary`2.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubDictionary</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubDictionary`2.OnDeserialization(System.Object)">
            <summary>Задает заглушка Dictionary`2.OnDeserialization(Object sender)</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubDictionary`2.OnDeserializationObject">
            <summary>Задает stub Dictionary`2.OnDeserialization(Object sender)</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.StubDictionary`2.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.StubDictionary`2.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.StubDictionary`2.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Collections.Generic.Fakes.StubEqualityComparer`1">
            <summary>Тип заглушки System.Collections.Generic.EqualityComparer`1</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubEqualityComparer`1.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubEqualityComparer`1.Equals(`0,`0)">
            <summary>Задает заглушка EqualityComparer`1.Equals(!0 x, !0 y)</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubEqualityComparer`1.EqualsT0T0">
            <summary>Задает stub EqualityComparer`1.Equals(!0 x, !0 y)</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubEqualityComparer`1.GetHashCode(`0)">
            <summary>Задает заглушка EqualityComparer`1.GetHashCode(!0 obj)</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubEqualityComparer`1.GetHashCodeT0">
            <summary>Задает stub EqualityComparer`1.GetHashCode(!0 obj)</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubEqualityComparer`1.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubEqualityComparer</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.StubEqualityComparer`1.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.StubEqualityComparer`1.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.StubEqualityComparer`1.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Collections.Generic.Fakes.StubICollection`1">
            <summary>Тип заглушки System.Collections.Generic.ICollection`1</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubICollection`1.#ctor">
            <summary>Инициализирует новый экземпляр type StubICollection</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubICollection`1.AddT0">
            <summary>Задает stub ICollection`1.Add(!0 item)</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubICollection`1.Clear">
            <summary>Задает stub ICollection`1.Clear()</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubICollection`1.ContainsT0">
            <summary>Задает stub ICollection`1.Contains(!0 item)</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubICollection`1.CopyToT0ArrayInt32">
            <summary>Задает stub ICollection`1.CopyTo(!0[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubICollection`1.CountGet">
            <summary>Задает stub ICollection`1.get_Count()</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubICollection`1.GetEnumerator">
            <summary>Задает stub IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubICollection`1.GetEnumerator01">
            <summary>Задает stub IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubICollection`1.IsReadOnlyGet">
            <summary>Задает stub ICollection`1.get_IsReadOnly()</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubICollection`1.RemoveT0">
            <summary>Задает stub ICollection`1.Remove(!0 item)</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubICollection`1.global::System#Collections#Generic#ICollection{T}#Add(`0)">
            <summary>Задает заглушка ICollection`1.Add(!0 item)</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubICollection`1.global::System#Collections#Generic#ICollection{T}#Clear">
            <summary>Задает заглушка ICollection`1.Clear()</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubICollection`1.global::System#Collections#Generic#ICollection{T}#Contains(`0)">
            <summary>Задает заглушка ICollection`1.Contains(!0 item)</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubICollection`1.global::System#Collections#Generic#ICollection{T}#CopyTo(`0[],System.Int32)">
            <summary>Задает заглушка ICollection`1.CopyTo(!0[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubICollection`1.global::System#Collections#Generic#ICollection{T}#Remove(`0)">
            <summary>Задает заглушка ICollection`1.Remove(!0 item)</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubICollection`1.global::System#Collections#Generic#IEnumerable{T}#GetEnumerator">
            <summary>Задает заглушка IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubICollection`1.global::System#Collections#IEnumerable#GetEnumerator">
            <summary>Задает заглушка IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.StubICollection`1.global::System#Collections#Generic#ICollection{T}#Count">
            <summary>Задает stub ICollection`1.get_Count()</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.StubICollection`1.global::System#Collections#Generic#ICollection{T}#IsReadOnly">
            <summary>Задает stub ICollection`1.get_IsReadOnly()</summary>
        </member>
        <member name="T:System.Collections.Generic.Fakes.StubIComparer`1">
            <summary>Тип заглушки System.Collections.Generic.IComparer`1</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubIComparer`1.#ctor">
            <summary>Инициализирует новый экземпляр type StubIComparer</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubIComparer`1.CompareT0T0">
            <summary>Задает stub IComparer`1.Compare(!0 x, !0 y)</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubIComparer`1.global::System#Collections#Generic#IComparer{T}#Compare(`0,`0)">
            <summary>Задает заглушка IComparer`1.Compare(!0 x, !0 y)</summary>
        </member>
        <member name="T:System.Collections.Generic.Fakes.StubIDictionary`2">
            <summary>Тип заглушки System.Collections.Generic.IDictionary`2</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubIDictionary`2.#ctor">
            <summary>Инициализирует новый экземпляр type StubIDictionary</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubIDictionary`2.AddKeyValuePairOfT0T1">
            <summary>Задает stub ICollection`1.Add(!0 item)</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubIDictionary`2.AddT0T1">
            <summary>Задает stub IDictionary`2.Add(!0 key, !1 value)</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubIDictionary`2.Clear">
            <summary>Задает stub ICollection`1.Clear()</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubIDictionary`2.ContainsKeyT0">
            <summary>Задает stub IDictionary`2.ContainsKey(!0 key)</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubIDictionary`2.ContainsKeyValuePairOfT0T1">
            <summary>Задает stub ICollection`1.Contains(!0 item)</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubIDictionary`2.CopyToKeyValuePairOfT0T1ArrayInt32">
            <summary>Задает stub ICollection`1.CopyTo(!0[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubIDictionary`2.CountGet">
            <summary>Задает stub ICollection`1.get_Count()</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubIDictionary`2.GetEnumerator">
            <summary>Задает stub IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubIDictionary`2.GetEnumerator01">
            <summary>Задает stub IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubIDictionary`2.IsReadOnlyGet">
            <summary>Задает stub ICollection`1.get_IsReadOnly()</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubIDictionary`2.ItemGetT0">
            <summary>Задает stub IDictionary`2.get_Item(!0 key)</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubIDictionary`2.ItemSetT0T1">
            <summary>Задает stub IDictionary`2.set_Item(!0 key, !1 value)</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubIDictionary`2.KeysGet">
            <summary>Задает stub IDictionary`2.get_Keys()</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubIDictionary`2.RemoveKeyValuePairOfT0T1">
            <summary>Задает stub ICollection`1.Remove(!0 item)</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubIDictionary`2.RemoveT0">
            <summary>Задает stub IDictionary`2.Remove(!0 key)</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubIDictionary`2.global::System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>Задает заглушка ICollection`1.Add(!0 item)</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubIDictionary`2.global::System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#Clear">
            <summary>Задает заглушка ICollection`1.Clear()</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubIDictionary`2.global::System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>Задает заглушка ICollection`1.Contains(!0 item)</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubIDictionary`2.global::System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
            <summary>Задает заглушка ICollection`1.CopyTo(!0[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubIDictionary`2.global::System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>Задает заглушка ICollection`1.Remove(!0 item)</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubIDictionary`2.global::System#Collections#Generic#IDictionary{TKey@TValue}#Add(`0,`1)">
            <summary>Задает заглушка IDictionary`2.Add(!0 key, !1 value)</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubIDictionary`2.global::System#Collections#Generic#IDictionary{TKey@TValue}#ContainsKey(`0)">
            <summary>Задает заглушка IDictionary`2.ContainsKey(!0 key)</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubIDictionary`2.global::System#Collections#Generic#IDictionary{TKey@TValue}#Remove(`0)">
            <summary>Задает заглушка IDictionary`2.Remove(!0 key)</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubIDictionary`2.global::System#Collections#Generic#IDictionary{TKey@TValue}#TryGetValue(`0,`1@)">
            <summary>Задает заглушка IDictionary`2.TryGetValue(!0 key, !1&amp; value)</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubIDictionary`2.global::System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey@TValue}}#GetEnumerator">
            <summary>Задает заглушка IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubIDictionary`2.global::System#Collections#IEnumerable#GetEnumerator">
            <summary>Задает заглушка IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubIDictionary`2.TryGetValueT0T1Out">
            <summary>Задает stub IDictionary`2.TryGetValue(!0 key, !1&amp; value)</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubIDictionary`2.ValuesGet">
            <summary>Задает stub IDictionary`2.get_Values()</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.StubIDictionary`2.global::System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#Count">
            <summary>Задает stub ICollection`1.get_Count()</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.StubIDictionary`2.global::System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#IsReadOnly">
            <summary>Задает stub ICollection`1.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.StubIDictionary`2.System#Collections#Generic#IDictionary{TKey@TValue}#Item(`0)">
            <summary>Задает stub IDictionary`2.get_Item(!0 key)</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.StubIDictionary`2.global::System#Collections#Generic#IDictionary{TKey@TValue}#Keys">
            <summary>Задает stub IDictionary`2.get_Keys()</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.StubIDictionary`2.global::System#Collections#Generic#IDictionary{TKey@TValue}#Values">
            <summary>Задает stub IDictionary`2.get_Values()</summary>
        </member>
        <member name="T:System.Collections.Generic.Fakes.StubIEnumerable`1">
            <summary>Тип заглушки System.Collections.Generic.IEnumerable`1</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubIEnumerable`1.#ctor">
            <summary>Инициализирует новый экземпляр type StubIEnumerable</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubIEnumerable`1.GetEnumerator">
            <summary>Задает stub IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubIEnumerable`1.GetEnumerator01">
            <summary>Задает stub IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubIEnumerable`1.global::System#Collections#Generic#IEnumerable{T}#GetEnumerator">
            <summary>Задает заглушка IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubIEnumerable`1.global::System#Collections#IEnumerable#GetEnumerator">
            <summary>Задает заглушка IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:System.Collections.Generic.Fakes.StubIEnumerator`1">
            <summary>Тип заглушки System.Collections.Generic.IEnumerator`1</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubIEnumerator`1.#ctor">
            <summary>Инициализирует новый экземпляр type StubIEnumerator</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubIEnumerator`1.CurrentGet">
            <summary>Задает stub IEnumerator`1.get_Current()</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubIEnumerator`1.CurrentGet01">
            <summary>Задает stub IEnumerator.get_Current()</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubIEnumerator`1.Dispose">
            <summary>Задает stub IDisposable.Dispose()</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubIEnumerator`1.MoveNext">
            <summary>Задает stub IEnumerator.MoveNext()</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubIEnumerator`1.Reset">
            <summary>Задает stub IEnumerator.Reset()</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubIEnumerator`1.global::System#Collections#IEnumerator#MoveNext">
            <summary>Задает заглушка IEnumerator.MoveNext()</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubIEnumerator`1.global::System#Collections#IEnumerator#Reset">
            <summary>Задает заглушка IEnumerator.Reset()</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubIEnumerator`1.global::System#IDisposable#Dispose">
            <summary>Задает заглушка IDisposable.Dispose()</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.StubIEnumerator`1.global::System#Collections#IEnumerator#Current">
            <summary>Задает stub IEnumerator.get_Current()</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.StubIEnumerator`1.global::System#Collections#Generic#IEnumerator{T}#Current">
            <summary>Задает stub IEnumerator`1.get_Current()</summary>
        </member>
        <member name="T:System.Collections.Generic.Fakes.StubIEqualityComparer`1">
            <summary>Тип заглушки System.Collections.Generic.IEqualityComparer`1</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubIEqualityComparer`1.#ctor">
            <summary>Инициализирует новый экземпляр type StubIEqualityComparer</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubIEqualityComparer`1.EqualsT0T0">
            <summary>Задает stub IEqualityComparer`1.Equals(!0 x, !0 y)</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubIEqualityComparer`1.GetHashCodeT0">
            <summary>Задает stub IEqualityComparer`1.GetHashCode(!0 obj)</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubIEqualityComparer`1.global::System#Collections#Generic#IEqualityComparer{T}#Equals(`0,`0)">
            <summary>Задает заглушка IEqualityComparer`1.Equals(!0 x, !0 y)</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubIEqualityComparer`1.global::System#Collections#Generic#IEqualityComparer{T}#GetHashCode(`0)">
            <summary>Задает заглушка IEqualityComparer`1.GetHashCode(!0 obj)</summary>
        </member>
        <member name="T:System.Collections.Generic.Fakes.StubIList`1">
            <summary>Тип заглушки System.Collections.Generic.IList`1</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubIList`1.#ctor">
            <summary>Инициализирует новый экземпляр type StubIList</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubIList`1.AddT0">
            <summary>Задает stub ICollection`1.Add(!0 item)</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubIList`1.Clear">
            <summary>Задает stub ICollection`1.Clear()</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubIList`1.ContainsT0">
            <summary>Задает stub ICollection`1.Contains(!0 item)</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubIList`1.CopyToT0ArrayInt32">
            <summary>Задает stub ICollection`1.CopyTo(!0[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubIList`1.CountGet">
            <summary>Задает stub ICollection`1.get_Count()</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubIList`1.GetEnumerator">
            <summary>Задает stub IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubIList`1.GetEnumerator01">
            <summary>Задает stub IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubIList`1.IndexOfT0">
            <summary>Задает stub IList`1.IndexOf(!0 item)</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubIList`1.InsertInt32T0">
            <summary>Задает stub IList`1.Insert(Int32 index, !0 item)</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubIList`1.IsReadOnlyGet">
            <summary>Задает stub ICollection`1.get_IsReadOnly()</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubIList`1.ItemGetInt32">
            <summary>Задает stub IList`1.get_Item(Int32 index)</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubIList`1.ItemSetInt32T0">
            <summary>Задает stub IList`1.set_Item(Int32 index, !0 value)</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubIList`1.RemoveAtInt32">
            <summary>Задает stub IList`1.RemoveAt(Int32 index)</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubIList`1.RemoveT0">
            <summary>Задает stub ICollection`1.Remove(!0 item)</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubIList`1.global::System#Collections#Generic#ICollection{T}#Add(`0)">
            <summary>Задает заглушка ICollection`1.Add(!0 item)</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubIList`1.global::System#Collections#Generic#ICollection{T}#Clear">
            <summary>Задает заглушка ICollection`1.Clear()</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubIList`1.global::System#Collections#Generic#ICollection{T}#Contains(`0)">
            <summary>Задает заглушка ICollection`1.Contains(!0 item)</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubIList`1.global::System#Collections#Generic#ICollection{T}#CopyTo(`0[],System.Int32)">
            <summary>Задает заглушка ICollection`1.CopyTo(!0[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubIList`1.global::System#Collections#Generic#ICollection{T}#Remove(`0)">
            <summary>Задает заглушка ICollection`1.Remove(!0 item)</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubIList`1.global::System#Collections#Generic#IEnumerable{T}#GetEnumerator">
            <summary>Задает заглушка IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubIList`1.global::System#Collections#Generic#IList{T}#IndexOf(`0)">
            <summary>Задает заглушка IList`1.IndexOf(!0 item)</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubIList`1.global::System#Collections#Generic#IList{T}#Insert(System.Int32,`0)">
            <summary>Задает заглушка IList`1.Insert(Int32 index, !0 item)</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubIList`1.global::System#Collections#Generic#IList{T}#RemoveAt(System.Int32)">
            <summary>Задает заглушка IList`1.RemoveAt(Int32 index)</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubIList`1.global::System#Collections#IEnumerable#GetEnumerator">
            <summary>Задает заглушка IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.StubIList`1.global::System#Collections#Generic#ICollection{T}#Count">
            <summary>Задает stub ICollection`1.get_Count()</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.StubIList`1.global::System#Collections#Generic#ICollection{T}#IsReadOnly">
            <summary>Задает stub ICollection`1.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.StubIList`1.System#Collections#Generic#IList{T}#Item(System.Int32)">
            <summary>Задает stub IList`1.get_Item(Int32 index)</summary>
        </member>
        <member name="T:System.Collections.Generic.Fakes.StubKeyNotFoundException">
            <summary>Тип заглушки System.Collections.Generic.KeyNotFoundException</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubKeyNotFoundException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubKeyNotFoundException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubKeyNotFoundException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubKeyNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubKeyNotFoundException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubKeyNotFoundException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubKeyNotFoundException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubKeyNotFoundException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubKeyNotFoundException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubKeyNotFoundException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubKeyNotFoundException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubKeyNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubKeyNotFoundException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubKeyNotFoundException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubKeyNotFoundException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubKeyNotFoundException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubKeyNotFoundException</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubKeyNotFoundException.MessageGet">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubKeyNotFoundException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubKeyNotFoundException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubKeyNotFoundException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubKeyNotFoundException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubKeyNotFoundException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.StubKeyNotFoundException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.StubKeyNotFoundException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.StubKeyNotFoundException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.StubKeyNotFoundException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.StubKeyNotFoundException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.StubKeyNotFoundException.Message">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.StubKeyNotFoundException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.StubKeyNotFoundException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Collections.Generic.Fakes.StubList`1">
            <summary>Тип заглушки System.Collections.Generic.List`1</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubList`1.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubList`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubList`1.#ctor(System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubList`1.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubList</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.StubList`1.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.StubList`1.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.StubList`1.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Collections.ObjectModel.Fakes.ShimCollection`1">
            <summary>Тип оболочки совместимости для System.Collections.ObjectModel.Collection`1</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimCollection`1.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimCollection`1.#ctor(System.Collections.ObjectModel.Collection{`0})">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimCollection`1.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimCollection`1.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimCollection`1.Bind(System.Collections.ICollection)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimCollection`1.Bind(System.Collections.IEnumerable)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimCollection`1.Bind(System.Collections.IList)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimCollection`1.Bind(System.Collections.Generic.ICollection{`0})">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimCollection`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimCollection`1.Bind(System.Collections.Generic.IList{`0})">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.AddT0">
            <summary>Задает оболочка совместимости Collection`1.Add(!0 item)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.Clear">
            <summary>Задает оболочка совместимости Collection`1.Clear()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.ClearItems">
            <summary>Задает оболочка совместимости Collection`1.ClearItems()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.Constructor">
            <summary>Задает оболочка совместимости Collection`1.Collection`1()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.ConstructorIListOfT0">
            <summary>Задает оболочка совместимости Collection`1.Collection`1(IList`1&lt;!0&gt; list)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.ContainsT0">
            <summary>Задает оболочка совместимости Collection`1.Contains(!0 item)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.CopyToT0ArrayInt32">
            <summary>Задает оболочка совместимости Collection`1.CopyTo(!0[] array, Int32 index)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.CountGet">
            <summary>Задает оболочка совместимости Collection`1.get_Count()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.GetEnumerator">
            <summary>Задает оболочка совместимости Collection`1.GetEnumerator()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.IndexOfT0">
            <summary>Задает оболочка совместимости Collection`1.IndexOf(!0 item)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.InsertInt32T0">
            <summary>Задает оболочка совместимости Collection`1.Insert(Int32 index, !0 item)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.InsertItemInt32T0">
            <summary>Задает оболочка совместимости Collection`1.InsertItem(Int32 index, !0 item)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.IsCompatibleObjectObject">
            <summary>Задает оболочка совместимости Collection`1.IsCompatibleObject(Object value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.IsFixedSizeSystemCollectionsIListget">
            <summary>Задает оболочка совместимости Collection`1.System.Collections.IList.get_IsFixedSize()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.IsReadOnlySystemCollectionsGenericICollectionTget">
            <summary>Задает оболочка совместимости Collection`1.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.IsReadOnlySystemCollectionsIListget">
            <summary>Задает оболочка совместимости Collection`1.System.Collections.IList.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.IsSynchronizedSystemCollectionsICollectionget">
            <summary>Задает оболочка совместимости Collection`1.System.Collections.ICollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.ItemGetInt32">
            <summary>Задает оболочка совместимости Collection`1.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.ItemSetInt32T0">
            <summary>Задает оболочка совместимости Collection`1.set_Item(Int32 index, !0 value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.ItemSystemCollectionsIListgetInt32">
            <summary>Задает оболочка совместимости Collection`1.System.Collections.IList.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.ItemSystemCollectionsIListsetInt32Object">
            <summary>Задает оболочка совместимости Collection`1.System.Collections.IList.set_Item(Int32 index, Object value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.ItemsGet">
            <summary>Задает оболочка совместимости Collection`1.get_Items()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.RemoveAtInt32">
            <summary>Задает оболочка совместимости Collection`1.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.RemoveItemInt32">
            <summary>Задает оболочка совместимости Collection`1.RemoveItem(Int32 index)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.RemoveT0">
            <summary>Задает оболочка совместимости Collection`1.Remove(!0 item)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.SetItemInt32T0">
            <summary>Задает оболочка совместимости Collection`1.SetItem(Int32 index, !0 item)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.SyncRootSystemCollectionsICollectionget">
            <summary>Задает оболочка совместимости Collection`1.System.Collections.ICollection.get_SyncRoot()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>Задает оболочка совместимости Collection`1.System.Collections.ICollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Задает оболочка совместимости Collection`1.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.SystemCollectionsIListAddObject">
            <summary>Задает оболочка совместимости Collection`1.System.Collections.IList.Add(Object value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.SystemCollectionsIListContainsObject">
            <summary>Задает оболочка совместимости Collection`1.System.Collections.IList.Contains(Object value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.SystemCollectionsIListIndexOfObject">
            <summary>Задает оболочка совместимости Collection`1.System.Collections.IList.IndexOf(Object value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.SystemCollectionsIListInsertInt32Object">
            <summary>Задает оболочка совместимости Collection`1.System.Collections.IList.Insert(Int32 index, Object value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.SystemCollectionsIListRemoveObject">
            <summary>Задает оболочка совместимости Collection`1.System.Collections.IList.Remove(Object value)</summary>
        </member>
        <member name="T:System.Collections.ObjectModel.Fakes.ShimCollection`1.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.AllInstances.AddT0">
            <summary>Задает оболочка совместимости Collection`1.Add(!0 item)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.AllInstances.Clear">
            <summary>Задает оболочка совместимости Collection`1.Clear()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.AllInstances.ClearItems">
            <summary>Задает оболочка совместимости Collection`1.ClearItems()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.AllInstances.ContainsT0">
            <summary>Задает оболочка совместимости Collection`1.Contains(!0 item)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.AllInstances.CopyToT0ArrayInt32">
            <summary>Задает оболочка совместимости Collection`1.CopyTo(!0[] array, Int32 index)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.AllInstances.CountGet">
            <summary>Задает оболочка совместимости Collection`1.get_Count()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.AllInstances.GetEnumerator">
            <summary>Задает оболочка совместимости Collection`1.GetEnumerator()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.AllInstances.IndexOfT0">
            <summary>Задает оболочка совместимости Collection`1.IndexOf(!0 item)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.AllInstances.InsertInt32T0">
            <summary>Задает оболочка совместимости Collection`1.Insert(Int32 index, !0 item)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.AllInstances.InsertItemInt32T0">
            <summary>Задает оболочка совместимости Collection`1.InsertItem(Int32 index, !0 item)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.AllInstances.IsFixedSizeSystemCollectionsIListget">
            <summary>Задает оболочка совместимости Collection`1.System.Collections.IList.get_IsFixedSize()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.AllInstances.IsReadOnlySystemCollectionsGenericICollectionTget">
            <summary>Задает оболочка совместимости Collection`1.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.AllInstances.IsReadOnlySystemCollectionsIListget">
            <summary>Задает оболочка совместимости Collection`1.System.Collections.IList.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.AllInstances.IsSynchronizedSystemCollectionsICollectionget">
            <summary>Задает оболочка совместимости Collection`1.System.Collections.ICollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.AllInstances.ItemGetInt32">
            <summary>Задает оболочка совместимости Collection`1.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.AllInstances.ItemSetInt32T0">
            <summary>Задает оболочка совместимости Collection`1.set_Item(Int32 index, !0 value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.AllInstances.ItemSystemCollectionsIListgetInt32">
            <summary>Задает оболочка совместимости Collection`1.System.Collections.IList.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.AllInstances.ItemSystemCollectionsIListsetInt32Object">
            <summary>Задает оболочка совместимости Collection`1.System.Collections.IList.set_Item(Int32 index, Object value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.AllInstances.ItemsGet">
            <summary>Задает оболочка совместимости Collection`1.get_Items()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.AllInstances.RemoveAtInt32">
            <summary>Задает оболочка совместимости Collection`1.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.AllInstances.RemoveItemInt32">
            <summary>Задает оболочка совместимости Collection`1.RemoveItem(Int32 index)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.AllInstances.RemoveT0">
            <summary>Задает оболочка совместимости Collection`1.Remove(!0 item)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.AllInstances.SetItemInt32T0">
            <summary>Задает оболочка совместимости Collection`1.SetItem(Int32 index, !0 item)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.AllInstances.SyncRootSystemCollectionsICollectionget">
            <summary>Задает оболочка совместимости Collection`1.System.Collections.ICollection.get_SyncRoot()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.AllInstances.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>Задает оболочка совместимости Collection`1.System.Collections.ICollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Задает оболочка совместимости Collection`1.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.AllInstances.SystemCollectionsIListAddObject">
            <summary>Задает оболочка совместимости Collection`1.System.Collections.IList.Add(Object value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.AllInstances.SystemCollectionsIListContainsObject">
            <summary>Задает оболочка совместимости Collection`1.System.Collections.IList.Contains(Object value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.AllInstances.SystemCollectionsIListIndexOfObject">
            <summary>Задает оболочка совместимости Collection`1.System.Collections.IList.IndexOf(Object value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.AllInstances.SystemCollectionsIListInsertInt32Object">
            <summary>Задает оболочка совместимости Collection`1.System.Collections.IList.Insert(Int32 index, Object value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimCollection`1.AllInstances.SystemCollectionsIListRemoveObject">
            <summary>Задает оболочка совместимости Collection`1.System.Collections.IList.Remove(Object value)</summary>
        </member>
        <member name="T:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2">
            <summary>Тип оболочки совместимости для System.Collections.ObjectModel.KeyedCollection`2</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.#ctor(System.Collections.ObjectModel.KeyedCollection{`0,`1})">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.Bind(System.Collections.ICollection)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.Bind(System.Collections.IEnumerable)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.Bind(System.Collections.IList)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.Bind(System.Collections.Generic.ICollection{`1})">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.Bind(System.Collections.Generic.IEnumerable{`1})">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.Bind(System.Collections.Generic.IList{`1})">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.AddKeyT0T1">
            <summary>Задает оболочка совместимости KeyedCollection`2.AddKey(!0 key, !1 item)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.ChangeItemKeyT1T0">
            <summary>Задает оболочка совместимости KeyedCollection`2.ChangeItemKey(!1 item, !0 newKey)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.ClearItems">
            <summary>Задает оболочка совместимости KeyedCollection`2.ClearItems()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.ComparerGet">
            <summary>Задает оболочка совместимости KeyedCollection`2.get_Comparer()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.Constructor">
            <summary>Задает оболочка совместимости KeyedCollection`2.KeyedCollection`2()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.ConstructorIEqualityComparerOfT0">
            <summary>Задает оболочка совместимости KeyedCollection`2.KeyedCollection`2(IEqualityComparer`1&lt;!0&gt; comparer)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.ConstructorIEqualityComparerOfT0Int32">
            <summary>Задает оболочка совместимости KeyedCollection`2.KeyedCollection`2(IEqualityComparer`1&lt;!0&gt; comparer, Int32 dictionaryCreationThreshold)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.ContainsItemT1">
            <summary>Задает оболочка совместимости KeyedCollection`2.ContainsItem(!1 item)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.ContainsT0">
            <summary>Задает оболочка совместимости KeyedCollection`2.Contains(!0 key)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.CreateDictionary">
            <summary>Задает оболочка совместимости KeyedCollection`2.CreateDictionary()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.DictionaryGet">
            <summary>Задает оболочка совместимости KeyedCollection`2.get_Dictionary()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.InsertItemInt32T1">
            <summary>Задает оболочка совместимости KeyedCollection`2.InsertItem(Int32 index, !1 item)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.ItemGetT0">
            <summary>Задает оболочка совместимости KeyedCollection`2.get_Item(!0 key)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.RemoveItemInt32">
            <summary>Задает оболочка совместимости KeyedCollection`2.RemoveItem(Int32 index)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.RemoveKeyT0">
            <summary>Задает оболочка совместимости KeyedCollection`2.RemoveKey(!0 key)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.RemoveT0">
            <summary>Задает оболочка совместимости KeyedCollection`2.Remove(!0 key)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.SetItemInt32T1">
            <summary>Задает оболочка совместимости KeyedCollection`2.SetItem(Int32 index, !1 item)</summary>
        </member>
        <member name="T:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.AllInstances.AddKeyT0T1">
            <summary>Задает оболочка совместимости KeyedCollection`2.AddKey(!0 key, !1 item)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.AllInstances.ChangeItemKeyT1T0">
            <summary>Задает оболочка совместимости KeyedCollection`2.ChangeItemKey(!1 item, !0 newKey)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.AllInstances.ClearItems">
            <summary>Задает оболочка совместимости KeyedCollection`2.ClearItems()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.AllInstances.ComparerGet">
            <summary>Задает оболочка совместимости KeyedCollection`2.get_Comparer()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.AllInstances.ContainsItemT1">
            <summary>Задает оболочка совместимости KeyedCollection`2.ContainsItem(!1 item)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.AllInstances.ContainsT0">
            <summary>Задает оболочка совместимости KeyedCollection`2.Contains(!0 key)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.AllInstances.CreateDictionary">
            <summary>Задает оболочка совместимости KeyedCollection`2.CreateDictionary()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.AllInstances.DictionaryGet">
            <summary>Задает оболочка совместимости KeyedCollection`2.get_Dictionary()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.AllInstances.InsertItemInt32T1">
            <summary>Задает оболочка совместимости KeyedCollection`2.InsertItem(Int32 index, !1 item)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.AllInstances.ItemGetT0">
            <summary>Задает оболочка совместимости KeyedCollection`2.get_Item(!0 key)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.AllInstances.RemoveItemInt32">
            <summary>Задает оболочка совместимости KeyedCollection`2.RemoveItem(Int32 index)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.AllInstances.RemoveKeyT0">
            <summary>Задает оболочка совместимости KeyedCollection`2.RemoveKey(!0 key)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.AllInstances.RemoveT0">
            <summary>Задает оболочка совместимости KeyedCollection`2.Remove(!0 key)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimKeyedCollection`2.AllInstances.SetItemInt32T1">
            <summary>Задает оболочка совместимости KeyedCollection`2.SetItem(Int32 index, !1 item)</summary>
        </member>
        <member name="T:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1">
            <summary>Тип оболочки совместимости для System.Collections.ObjectModel.ReadOnlyCollection`1</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{`0})">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.Bind(System.Collections.ICollection)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.Bind(System.Collections.IEnumerable)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.Bind(System.Collections.IList)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.Bind(System.Collections.Generic.ICollection{`0})">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.Bind(System.Collections.Generic.IList{`0})">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.ConstructorIListOfT0">
            <summary>Задает оболочка совместимости ReadOnlyCollection`1.ReadOnlyCollection`1(IList`1&lt;!0&gt; list)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.ContainsT0">
            <summary>Задает оболочка совместимости ReadOnlyCollection`1.Contains(!0 value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.CopyToT0ArrayInt32">
            <summary>Задает оболочка совместимости ReadOnlyCollection`1.CopyTo(!0[] array, Int32 index)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.CountGet">
            <summary>Задает оболочка совместимости ReadOnlyCollection`1.get_Count()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.GetEnumerator">
            <summary>Задает оболочка совместимости ReadOnlyCollection`1.GetEnumerator()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.IndexOfT0">
            <summary>Задает оболочка совместимости ReadOnlyCollection`1.IndexOf(!0 value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.IsCompatibleObjectObject">
            <summary>Задает оболочка совместимости ReadOnlyCollection`1.IsCompatibleObject(Object value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.IsFixedSizeSystemCollectionsIListget">
            <summary>Задает оболочка совместимости ReadOnlyCollection`1.System.Collections.IList.get_IsFixedSize()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.IsReadOnlySystemCollectionsGenericICollectionTget">
            <summary>Задает оболочка совместимости ReadOnlyCollection`1.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.IsReadOnlySystemCollectionsIListget">
            <summary>Задает оболочка совместимости ReadOnlyCollection`1.System.Collections.IList.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.IsSynchronizedSystemCollectionsICollectionget">
            <summary>Задает оболочка совместимости ReadOnlyCollection`1.System.Collections.ICollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.ItemGetInt32">
            <summary>Задает оболочка совместимости ReadOnlyCollection`1.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.ItemSystemCollectionsGenericIListTgetInt32">
            <summary>Задает оболочка совместимости ReadOnlyCollection`1.System.Collections.Generic.IList&lt;T&gt;.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.ItemSystemCollectionsGenericIListTsetInt32T0">
            <summary>Задает оболочка совместимости ReadOnlyCollection`1.System.Collections.Generic.IList&lt;T&gt;.set_Item(Int32 index, !0 value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.ItemSystemCollectionsIListgetInt32">
            <summary>Задает оболочка совместимости ReadOnlyCollection`1.System.Collections.IList.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.ItemSystemCollectionsIListsetInt32Object">
            <summary>Задает оболочка совместимости ReadOnlyCollection`1.System.Collections.IList.set_Item(Int32 index, Object value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.ItemsGet">
            <summary>Задает оболочка совместимости ReadOnlyCollection`1.get_Items()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.SyncRootSystemCollectionsICollectionget">
            <summary>Задает оболочка совместимости ReadOnlyCollection`1.System.Collections.ICollection.get_SyncRoot()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.SystemCollectionsGenericICollectionTAddT0">
            <summary>Задает оболочка совместимости ReadOnlyCollection`1.System.Collections.Generic.ICollection&lt;T&gt;.Add(!0 value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.SystemCollectionsGenericICollectionTClear">
            <summary>Задает оболочка совместимости ReadOnlyCollection`1.System.Collections.Generic.ICollection&lt;T&gt;.Clear()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.SystemCollectionsGenericICollectionTRemoveT0">
            <summary>Задает оболочка совместимости ReadOnlyCollection`1.System.Collections.Generic.ICollection&lt;T&gt;.Remove(!0 value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.SystemCollectionsGenericIListTInsertInt32T0">
            <summary>Задает оболочка совместимости ReadOnlyCollection`1.System.Collections.Generic.IList&lt;T&gt;.Insert(Int32 index, !0 value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.SystemCollectionsGenericIListTRemoveAtInt32">
            <summary>Задает оболочка совместимости ReadOnlyCollection`1.System.Collections.Generic.IList&lt;T&gt;.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>Задает оболочка совместимости ReadOnlyCollection`1.System.Collections.ICollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Задает оболочка совместимости ReadOnlyCollection`1.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.SystemCollectionsIListAddObject">
            <summary>Задает оболочка совместимости ReadOnlyCollection`1.System.Collections.IList.Add(Object value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.SystemCollectionsIListClear">
            <summary>Задает оболочка совместимости ReadOnlyCollection`1.System.Collections.IList.Clear()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.SystemCollectionsIListContainsObject">
            <summary>Задает оболочка совместимости ReadOnlyCollection`1.System.Collections.IList.Contains(Object value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.SystemCollectionsIListIndexOfObject">
            <summary>Задает оболочка совместимости ReadOnlyCollection`1.System.Collections.IList.IndexOf(Object value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.SystemCollectionsIListInsertInt32Object">
            <summary>Задает оболочка совместимости ReadOnlyCollection`1.System.Collections.IList.Insert(Int32 index, Object value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.SystemCollectionsIListRemoveAtInt32">
            <summary>Задает оболочка совместимости ReadOnlyCollection`1.System.Collections.IList.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.SystemCollectionsIListRemoveObject">
            <summary>Задает оболочка совместимости ReadOnlyCollection`1.System.Collections.IList.Remove(Object value)</summary>
        </member>
        <member name="T:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.AllInstances.ContainsT0">
            <summary>Задает оболочка совместимости ReadOnlyCollection`1.Contains(!0 value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.AllInstances.CopyToT0ArrayInt32">
            <summary>Задает оболочка совместимости ReadOnlyCollection`1.CopyTo(!0[] array, Int32 index)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.AllInstances.CountGet">
            <summary>Задает оболочка совместимости ReadOnlyCollection`1.get_Count()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.AllInstances.GetEnumerator">
            <summary>Задает оболочка совместимости ReadOnlyCollection`1.GetEnumerator()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.AllInstances.IndexOfT0">
            <summary>Задает оболочка совместимости ReadOnlyCollection`1.IndexOf(!0 value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.AllInstances.IsFixedSizeSystemCollectionsIListget">
            <summary>Задает оболочка совместимости ReadOnlyCollection`1.System.Collections.IList.get_IsFixedSize()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.AllInstances.IsReadOnlySystemCollectionsGenericICollectionTget">
            <summary>Задает оболочка совместимости ReadOnlyCollection`1.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.AllInstances.IsReadOnlySystemCollectionsIListget">
            <summary>Задает оболочка совместимости ReadOnlyCollection`1.System.Collections.IList.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.AllInstances.IsSynchronizedSystemCollectionsICollectionget">
            <summary>Задает оболочка совместимости ReadOnlyCollection`1.System.Collections.ICollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.AllInstances.ItemGetInt32">
            <summary>Задает оболочка совместимости ReadOnlyCollection`1.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.AllInstances.ItemSystemCollectionsGenericIListTgetInt32">
            <summary>Задает оболочка совместимости ReadOnlyCollection`1.System.Collections.Generic.IList&lt;T&gt;.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.AllInstances.ItemSystemCollectionsGenericIListTsetInt32T0">
            <summary>Задает оболочка совместимости ReadOnlyCollection`1.System.Collections.Generic.IList&lt;T&gt;.set_Item(Int32 index, !0 value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.AllInstances.ItemSystemCollectionsIListgetInt32">
            <summary>Задает оболочка совместимости ReadOnlyCollection`1.System.Collections.IList.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.AllInstances.ItemSystemCollectionsIListsetInt32Object">
            <summary>Задает оболочка совместимости ReadOnlyCollection`1.System.Collections.IList.set_Item(Int32 index, Object value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.AllInstances.ItemsGet">
            <summary>Задает оболочка совместимости ReadOnlyCollection`1.get_Items()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.AllInstances.SyncRootSystemCollectionsICollectionget">
            <summary>Задает оболочка совместимости ReadOnlyCollection`1.System.Collections.ICollection.get_SyncRoot()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.AllInstances.SystemCollectionsGenericICollectionTAddT0">
            <summary>Задает оболочка совместимости ReadOnlyCollection`1.System.Collections.Generic.ICollection&lt;T&gt;.Add(!0 value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.AllInstances.SystemCollectionsGenericICollectionTClear">
            <summary>Задает оболочка совместимости ReadOnlyCollection`1.System.Collections.Generic.ICollection&lt;T&gt;.Clear()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.AllInstances.SystemCollectionsGenericICollectionTRemoveT0">
            <summary>Задает оболочка совместимости ReadOnlyCollection`1.System.Collections.Generic.ICollection&lt;T&gt;.Remove(!0 value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.AllInstances.SystemCollectionsGenericIListTInsertInt32T0">
            <summary>Задает оболочка совместимости ReadOnlyCollection`1.System.Collections.Generic.IList&lt;T&gt;.Insert(Int32 index, !0 value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.AllInstances.SystemCollectionsGenericIListTRemoveAtInt32">
            <summary>Задает оболочка совместимости ReadOnlyCollection`1.System.Collections.Generic.IList&lt;T&gt;.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.AllInstances.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>Задает оболочка совместимости ReadOnlyCollection`1.System.Collections.ICollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Задает оболочка совместимости ReadOnlyCollection`1.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.AllInstances.SystemCollectionsIListAddObject">
            <summary>Задает оболочка совместимости ReadOnlyCollection`1.System.Collections.IList.Add(Object value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.AllInstances.SystemCollectionsIListClear">
            <summary>Задает оболочка совместимости ReadOnlyCollection`1.System.Collections.IList.Clear()</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.AllInstances.SystemCollectionsIListContainsObject">
            <summary>Задает оболочка совместимости ReadOnlyCollection`1.System.Collections.IList.Contains(Object value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.AllInstances.SystemCollectionsIListIndexOfObject">
            <summary>Задает оболочка совместимости ReadOnlyCollection`1.System.Collections.IList.IndexOf(Object value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.AllInstances.SystemCollectionsIListInsertInt32Object">
            <summary>Задает оболочка совместимости ReadOnlyCollection`1.System.Collections.IList.Insert(Int32 index, Object value)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.AllInstances.SystemCollectionsIListRemoveAtInt32">
            <summary>Задает оболочка совместимости ReadOnlyCollection`1.System.Collections.IList.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.ShimReadOnlyCollection`1.AllInstances.SystemCollectionsIListRemoveObject">
            <summary>Задает оболочка совместимости ReadOnlyCollection`1.System.Collections.IList.Remove(Object value)</summary>
        </member>
        <member name="T:System.Collections.ObjectModel.Fakes.StubCollection`1">
            <summary>Тип заглушки System.Collections.ObjectModel.Collection`1</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.StubCollection`1.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.StubCollection`1.#ctor(System.Collections.Generic.IList{`0})">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.StubCollection`1.ClearItems">
            <summary>Задает заглушка Collection`1.ClearItems()</summary>
        </member>
        <member name="F:System.Collections.ObjectModel.Fakes.StubCollection`1.ClearItems01">
            <summary>Задает stub Collection`1.ClearItems()</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.StubCollection`1.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCollection</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.StubCollection`1.InsertItem(System.Int32,`0)">
            <summary>Задает заглушка Collection`1.InsertItem(Int32 index, !0 item)</summary>
        </member>
        <member name="F:System.Collections.ObjectModel.Fakes.StubCollection`1.InsertItemInt32T0">
            <summary>Задает stub Collection`1.InsertItem(Int32 index, !0 item)</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.StubCollection`1.RemoveItem(System.Int32)">
            <summary>Задает заглушка Collection`1.RemoveItem(Int32 index)</summary>
        </member>
        <member name="F:System.Collections.ObjectModel.Fakes.StubCollection`1.RemoveItemInt32">
            <summary>Задает stub Collection`1.RemoveItem(Int32 index)</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.StubCollection`1.SetItem(System.Int32,`0)">
            <summary>Задает заглушка Collection`1.SetItem(Int32 index, !0 item)</summary>
        </member>
        <member name="F:System.Collections.ObjectModel.Fakes.StubCollection`1.SetItemInt32T0">
            <summary>Задает stub Collection`1.SetItem(Int32 index, !0 item)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.StubCollection`1.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.StubCollection`1.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.StubCollection`1.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Collections.ObjectModel.Fakes.StubKeyedCollection`2">
            <summary>Тип заглушки System.Collections.ObjectModel.KeyedCollection`2</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.StubKeyedCollection`2.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.StubKeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.StubKeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.StubKeyedCollection`2.ClearItems">
            <summary>Задает заглушка KeyedCollection`2.ClearItems()</summary>
        </member>
        <member name="F:System.Collections.ObjectModel.Fakes.StubKeyedCollection`2.ClearItems01">
            <summary>Задает stub KeyedCollection`2.ClearItems()</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.StubKeyedCollection`2.GetKeyForItem(`1)">
            <summary>Задает заглушка KeyedCollection`2.GetKeyForItem(!1 item)</summary>
        </member>
        <member name="F:System.Collections.ObjectModel.Fakes.StubKeyedCollection`2.GetKeyForItemT1">
            <summary>Задает stub KeyedCollection`2.GetKeyForItem(!1 item)</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.StubKeyedCollection`2.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubKeyedCollection</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.StubKeyedCollection`2.InsertItem(System.Int32,`1)">
            <summary>Задает заглушка KeyedCollection`2.InsertItem(Int32 index, !1 item)</summary>
        </member>
        <member name="F:System.Collections.ObjectModel.Fakes.StubKeyedCollection`2.InsertItemInt32T1">
            <summary>Задает stub KeyedCollection`2.InsertItem(Int32 index, !1 item)</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.StubKeyedCollection`2.RemoveItem(System.Int32)">
            <summary>Задает заглушка KeyedCollection`2.RemoveItem(Int32 index)</summary>
        </member>
        <member name="F:System.Collections.ObjectModel.Fakes.StubKeyedCollection`2.RemoveItemInt32">
            <summary>Задает stub KeyedCollection`2.RemoveItem(Int32 index)</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.StubKeyedCollection`2.SetItem(System.Int32,`1)">
            <summary>Задает заглушка KeyedCollection`2.SetItem(Int32 index, !1 item)</summary>
        </member>
        <member name="F:System.Collections.ObjectModel.Fakes.StubKeyedCollection`2.SetItemInt32T1">
            <summary>Задает stub KeyedCollection`2.SetItem(Int32 index, !1 item)</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.StubKeyedCollection`2.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.StubKeyedCollection`2.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.StubKeyedCollection`2.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Collections.ObjectModel.Fakes.StubReadOnlyCollection`1">
            <summary>Тип заглушки System.Collections.ObjectModel.ReadOnlyCollection`1</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.StubReadOnlyCollection`1.#ctor(System.Collections.Generic.IList{`0})">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Collections.ObjectModel.Fakes.StubReadOnlyCollection`1.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubReadOnlyCollection</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.StubReadOnlyCollection`1.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.StubReadOnlyCollection`1.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Collections.ObjectModel.Fakes.StubReadOnlyCollection`1.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Diagnostics.Fakes.StubStackFrame">
            <summary>Тип заглушки System.Diagnostics.StackFrame</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubStackFrame.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubStackFrame.#ctor(System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubStackFrame.#ctor(System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubStackFrame.#ctor(System.Int32,System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubStackFrame.#ctor(System.String,System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubStackFrame.#ctor(System.String,System.Int32,System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubStackFrame.GetFileColumnNumber">
            <summary>Задает заглушка StackFrame.GetFileColumnNumber()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubStackFrame.GetFileColumnNumber01">
            <summary>Задает stub StackFrame.GetFileColumnNumber()</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubStackFrame.GetFileLineNumber">
            <summary>Задает заглушка StackFrame.GetFileLineNumber()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubStackFrame.GetFileLineNumber01">
            <summary>Задает stub StackFrame.GetFileLineNumber()</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubStackFrame.GetFileName">
            <summary>Задает заглушка StackFrame.GetFileName()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubStackFrame.GetFileName01">
            <summary>Задает stub StackFrame.GetFileName()</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubStackFrame.GetILOffset">
            <summary>Задает заглушка StackFrame.GetILOffset()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubStackFrame.GetILOffset01">
            <summary>Задает stub StackFrame.GetILOffset()</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubStackFrame.GetMethod">
            <summary>Задает заглушка StackFrame.GetMethod()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubStackFrame.GetMethod01">
            <summary>Задает stub StackFrame.GetMethod()</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubStackFrame.GetNativeOffset">
            <summary>Задает заглушка StackFrame.GetNativeOffset()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubStackFrame.GetNativeOffset01">
            <summary>Задает stub StackFrame.GetNativeOffset()</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubStackFrame.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubStackFrame</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubStackFrame.ToString">
            <summary>Задает заглушка StackFrame.ToString()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubStackFrame.ToString01">
            <summary>Задает stub StackFrame.ToString()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubStackFrame.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubStackFrame.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubStackFrame.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Diagnostics.Fakes.StubStackTrace">
            <summary>Тип заглушки System.Diagnostics.StackTrace</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubStackTrace.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubStackTrace.#ctor(System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubStackTrace.#ctor(System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubStackTrace.#ctor(System.Diagnostics.StackFrame)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubStackTrace.#ctor(System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubStackTrace.#ctor(System.Int32,System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubStackTrace.#ctor(System.Exception,System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubStackTrace.#ctor(System.Exception,System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubStackTrace.#ctor(System.Threading.Thread,System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubStackTrace.#ctor(System.Exception,System.Int32,System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubStackTrace.FrameCountGet">
            <summary>Задает stub StackTrace.get_FrameCount()</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubStackTrace.GetFrame(System.Int32)">
            <summary>Задает заглушка StackTrace.GetFrame(Int32 index)</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubStackTrace.GetFrameInt32">
            <summary>Задает stub StackTrace.GetFrame(Int32 index)</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubStackTrace.GetFrames">
            <summary>Задает заглушка StackTrace.GetFrames()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubStackTrace.GetFrames01">
            <summary>Задает stub StackTrace.GetFrames()</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubStackTrace.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubStackTrace</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.StubStackTrace.ToString">
            <summary>Задает заглушка StackTrace.ToString()</summary>
        </member>
        <member name="F:System.Diagnostics.Fakes.StubStackTrace.ToString01">
            <summary>Задает stub StackTrace.ToString()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubStackTrace.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubStackTrace.FrameCount">
            <summary>Задает stub StackTrace.get_FrameCount()</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubStackTrace.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.StubStackTrace.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Diagnostics.SymbolStore.Fakes.StubISymbolBinder">
            <summary>Тип заглушки System.Diagnostics.SymbolStore.ISymbolBinder</summary>
        </member>
        <member name="M:System.Diagnostics.SymbolStore.Fakes.StubISymbolBinder.#ctor">
            <summary>Инициализирует новый экземпляр type StubISymbolBinder</summary>
        </member>
        <member name="F:System.Diagnostics.SymbolStore.Fakes.StubISymbolBinder.GetReaderInt32StringString">
            <summary>Задает stub ISymbolBinder.GetReader(Int32 importer, String filename, String searchPath)</summary>
        </member>
        <member name="M:System.Diagnostics.SymbolStore.Fakes.StubISymbolBinder.global::System#Diagnostics#SymbolStore#ISymbolBinder#GetReader(System.Int32,System.String,System.String)">
            <summary>Задает заглушка ISymbolBinder.GetReader(Int32 importer, String filename, String searchPath)</summary>
        </member>
        <member name="T:System.Diagnostics.SymbolStore.Fakes.StubISymbolBinder1">
            <summary>Тип заглушки System.Diagnostics.SymbolStore.ISymbolBinder1</summary>
        </member>
        <member name="M:System.Diagnostics.SymbolStore.Fakes.StubISymbolBinder1.#ctor">
            <summary>Инициализирует новый экземпляр type StubISymbolBinder1</summary>
        </member>
        <member name="F:System.Diagnostics.SymbolStore.Fakes.StubISymbolBinder1.GetReaderIntPtrStringString">
            <summary>Задает stub ISymbolBinder1.GetReader(IntPtr importer, String filename, String searchPath)</summary>
        </member>
        <member name="M:System.Diagnostics.SymbolStore.Fakes.StubISymbolBinder1.global::System#Diagnostics#SymbolStore#ISymbolBinder1#GetReader(System.IntPtr,System.String,System.String)">
            <summary>Задает заглушка ISymbolBinder1.GetReader(IntPtr importer, String filename, String searchPath)</summary>
        </member>
        <member name="T:System.Diagnostics.SymbolStore.Fakes.StubISymbolDocument">
            <summary>Тип заглушки System.Diagnostics.SymbolStore.ISymbolDocument</summary>
        </member>
        <member name="M:System.Diagnostics.SymbolStore.Fakes.StubISymbolDocument.#ctor">
            <summary>Инициализирует новый экземпляр type StubISymbolDocument</summary>
        </member>
        <member name="F:System.Diagnostics.SymbolStore.Fakes.StubISymbolDocument.CheckSumAlgorithmIdGet">
            <summary>Задает stub ISymbolDocument.get_CheckSumAlgorithmId()</summary>
        </member>
        <member name="F:System.Diagnostics.SymbolStore.Fakes.StubISymbolDocument.DocumentTypeGet">
            <summary>Задает stub ISymbolDocument.get_DocumentType()</summary>
        </member>
        <member name="F:System.Diagnostics.SymbolStore.Fakes.StubISymbolDocument.FindClosestLineInt32">
            <summary>Задает stub ISymbolDocument.FindClosestLine(Int32 line)</summary>
        </member>
        <member name="F:System.Diagnostics.SymbolStore.Fakes.StubISymbolDocument.GetCheckSum">
            <summary>Задает stub ISymbolDocument.GetCheckSum()</summary>
        </member>
        <member name="F:System.Diagnostics.SymbolStore.Fakes.StubISymbolDocument.GetSourceRangeInt32Int32Int32Int32">
            <summary>Задает stub ISymbolDocument.GetSourceRange(Int32 startLine, Int32 startColumn, Int32 endLine, Int32 endColumn)</summary>
        </member>
        <member name="F:System.Diagnostics.SymbolStore.Fakes.StubISymbolDocument.HasEmbeddedSourceGet">
            <summary>Задает stub ISymbolDocument.get_HasEmbeddedSource()</summary>
        </member>
        <member name="F:System.Diagnostics.SymbolStore.Fakes.StubISymbolDocument.LanguageGet">
            <summary>Задает stub ISymbolDocument.get_Language()</summary>
        </member>
        <member name="F:System.Diagnostics.SymbolStore.Fakes.StubISymbolDocument.LanguageVendorGet">
            <summary>Задает stub ISymbolDocument.get_LanguageVendor()</summary>
        </member>
        <member name="F:System.Diagnostics.SymbolStore.Fakes.StubISymbolDocument.SourceLengthGet">
            <summary>Задает stub ISymbolDocument.get_SourceLength()</summary>
        </member>
        <member name="M:System.Diagnostics.SymbolStore.Fakes.StubISymbolDocument.global::System#Diagnostics#SymbolStore#ISymbolDocument#FindClosestLine(System.Int32)">
            <summary>Задает заглушка ISymbolDocument.FindClosestLine(Int32 line)</summary>
        </member>
        <member name="M:System.Diagnostics.SymbolStore.Fakes.StubISymbolDocument.global::System#Diagnostics#SymbolStore#ISymbolDocument#GetCheckSum">
            <summary>Задает заглушка ISymbolDocument.GetCheckSum()</summary>
        </member>
        <member name="M:System.Diagnostics.SymbolStore.Fakes.StubISymbolDocument.global::System#Diagnostics#SymbolStore#ISymbolDocument#GetSourceRange(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>Задает заглушка ISymbolDocument.GetSourceRange(Int32 startLine, Int32 startColumn, Int32 endLine, Int32 endColumn)</summary>
        </member>
        <member name="F:System.Diagnostics.SymbolStore.Fakes.StubISymbolDocument.URLGet">
            <summary>Задает stub ISymbolDocument.get_URL()</summary>
        </member>
        <member name="P:System.Diagnostics.SymbolStore.Fakes.StubISymbolDocument.global::System#Diagnostics#SymbolStore#ISymbolDocument#CheckSumAlgorithmId">
            <summary>Задает stub ISymbolDocument.get_CheckSumAlgorithmId()</summary>
        </member>
        <member name="P:System.Diagnostics.SymbolStore.Fakes.StubISymbolDocument.global::System#Diagnostics#SymbolStore#ISymbolDocument#DocumentType">
            <summary>Задает stub ISymbolDocument.get_DocumentType()</summary>
        </member>
        <member name="P:System.Diagnostics.SymbolStore.Fakes.StubISymbolDocument.global::System#Diagnostics#SymbolStore#ISymbolDocument#HasEmbeddedSource">
            <summary>Задает stub ISymbolDocument.get_HasEmbeddedSource()</summary>
        </member>
        <member name="P:System.Diagnostics.SymbolStore.Fakes.StubISymbolDocument.global::System#Diagnostics#SymbolStore#ISymbolDocument#Language">
            <summary>Задает stub ISymbolDocument.get_Language()</summary>
        </member>
        <member name="P:System.Diagnostics.SymbolStore.Fakes.StubISymbolDocument.global::System#Diagnostics#SymbolStore#ISymbolDocument#LanguageVendor">
            <summary>Задает stub ISymbolDocument.get_LanguageVendor()</summary>
        </member>
        <member name="P:System.Diagnostics.SymbolStore.Fakes.StubISymbolDocument.global::System#Diagnostics#SymbolStore#ISymbolDocument#SourceLength">
            <summary>Задает stub ISymbolDocument.get_SourceLength()</summary>
        </member>
        <member name="P:System.Diagnostics.SymbolStore.Fakes.StubISymbolDocument.global::System#Diagnostics#SymbolStore#ISymbolDocument#URL">
            <summary>Задает stub ISymbolDocument.get_URL()</summary>
        </member>
        <member name="T:System.Diagnostics.SymbolStore.Fakes.StubISymbolDocumentWriter">
            <summary>Тип заглушки System.Diagnostics.SymbolStore.ISymbolDocumentWriter</summary>
        </member>
        <member name="M:System.Diagnostics.SymbolStore.Fakes.StubISymbolDocumentWriter.#ctor">
            <summary>Инициализирует новый экземпляр type StubISymbolDocumentWriter</summary>
        </member>
        <member name="F:System.Diagnostics.SymbolStore.Fakes.StubISymbolDocumentWriter.SetCheckSumGuidByteArray">
            <summary>Задает stub ISymbolDocumentWriter.SetCheckSum(Guid algorithmId, Byte[] checkSum)</summary>
        </member>
        <member name="F:System.Diagnostics.SymbolStore.Fakes.StubISymbolDocumentWriter.SetSourceByteArray">
            <summary>Задает stub ISymbolDocumentWriter.SetSource(Byte[] source)</summary>
        </member>
        <member name="M:System.Diagnostics.SymbolStore.Fakes.StubISymbolDocumentWriter.global::System#Diagnostics#SymbolStore#ISymbolDocumentWriter#SetCheckSum(System.Guid,System.Byte[])">
            <summary>Задает заглушка ISymbolDocumentWriter.SetCheckSum(Guid algorithmId, Byte[] checkSum)</summary>
        </member>
        <member name="M:System.Diagnostics.SymbolStore.Fakes.StubISymbolDocumentWriter.global::System#Diagnostics#SymbolStore#ISymbolDocumentWriter#SetSource(System.Byte[])">
            <summary>Задает заглушка ISymbolDocumentWriter.SetSource(Byte[] source)</summary>
        </member>
        <member name="T:System.Diagnostics.SymbolStore.Fakes.StubISymbolMethod">
            <summary>Тип заглушки System.Diagnostics.SymbolStore.ISymbolMethod</summary>
        </member>
        <member name="M:System.Diagnostics.SymbolStore.Fakes.StubISymbolMethod.#ctor">
            <summary>Инициализирует новый экземпляр type StubISymbolMethod</summary>
        </member>
        <member name="F:System.Diagnostics.SymbolStore.Fakes.StubISymbolMethod.GetNamespace">
            <summary>Задает stub ISymbolMethod.GetNamespace()</summary>
        </member>
        <member name="F:System.Diagnostics.SymbolStore.Fakes.StubISymbolMethod.GetOffsetISymbolDocumentInt32Int32">
            <summary>Задает stub ISymbolMethod.GetOffset(ISymbolDocument document, Int32 line, Int32 column)</summary>
        </member>
        <member name="F:System.Diagnostics.SymbolStore.Fakes.StubISymbolMethod.GetParameters">
            <summary>Задает stub ISymbolMethod.GetParameters()</summary>
        </member>
        <member name="F:System.Diagnostics.SymbolStore.Fakes.StubISymbolMethod.GetRangesISymbolDocumentInt32Int32">
            <summary>Задает stub ISymbolMethod.GetRanges(ISymbolDocument document, Int32 line, Int32 column)</summary>
        </member>
        <member name="F:System.Diagnostics.SymbolStore.Fakes.StubISymbolMethod.GetScopeInt32">
            <summary>Задает stub ISymbolMethod.GetScope(Int32 offset)</summary>
        </member>
        <member name="F:System.Diagnostics.SymbolStore.Fakes.StubISymbolMethod.GetSequencePointsInt32ArrayISymbolDocumentArrayInt32ArrayInt32ArrayInt32ArrayInt32Array">
            <summary>Задает stub ISymbolMethod.GetSequencePoints(Int32[] offsets, ISymbolDocument[] documents, Int32[] lines, Int32[] columns, Int32[] endLines, Int32[] endColumns)</summary>
        </member>
        <member name="F:System.Diagnostics.SymbolStore.Fakes.StubISymbolMethod.GetSourceStartEndISymbolDocumentArrayInt32ArrayInt32Array">
            <summary>Задает stub ISymbolMethod.GetSourceStartEnd(ISymbolDocument[] docs, Int32[] lines, Int32[] columns)</summary>
        </member>
        <member name="F:System.Diagnostics.SymbolStore.Fakes.StubISymbolMethod.RootScopeGet">
            <summary>Задает stub ISymbolMethod.get_RootScope()</summary>
        </member>
        <member name="F:System.Diagnostics.SymbolStore.Fakes.StubISymbolMethod.SequencePointCountGet">
            <summary>Задает stub ISymbolMethod.get_SequencePointCount()</summary>
        </member>
        <member name="M:System.Diagnostics.SymbolStore.Fakes.StubISymbolMethod.global::System#Diagnostics#SymbolStore#ISymbolMethod#GetNamespace">
            <summary>Задает заглушка ISymbolMethod.GetNamespace()</summary>
        </member>
        <member name="M:System.Diagnostics.SymbolStore.Fakes.StubISymbolMethod.global::System#Diagnostics#SymbolStore#ISymbolMethod#GetOffset(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)">
            <summary>Задает заглушка ISymbolMethod.GetOffset(ISymbolDocument document, Int32 line, Int32 column)</summary>
        </member>
        <member name="M:System.Diagnostics.SymbolStore.Fakes.StubISymbolMethod.global::System#Diagnostics#SymbolStore#ISymbolMethod#GetParameters">
            <summary>Задает заглушка ISymbolMethod.GetParameters()</summary>
        </member>
        <member name="M:System.Diagnostics.SymbolStore.Fakes.StubISymbolMethod.global::System#Diagnostics#SymbolStore#ISymbolMethod#GetRanges(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)">
            <summary>Задает заглушка ISymbolMethod.GetRanges(ISymbolDocument document, Int32 line, Int32 column)</summary>
        </member>
        <member name="M:System.Diagnostics.SymbolStore.Fakes.StubISymbolMethod.global::System#Diagnostics#SymbolStore#ISymbolMethod#GetScope(System.Int32)">
            <summary>Задает заглушка ISymbolMethod.GetScope(Int32 offset)</summary>
        </member>
        <member name="M:System.Diagnostics.SymbolStore.Fakes.StubISymbolMethod.global::System#Diagnostics#SymbolStore#ISymbolMethod#GetSequencePoints(System.Int32[],System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])">
            <summary>Задает заглушка ISymbolMethod.GetSequencePoints(Int32[] offsets, ISymbolDocument[] documents, Int32[] lines, Int32[] columns, Int32[] endLines, Int32[] endColumns)</summary>
        </member>
        <member name="M:System.Diagnostics.SymbolStore.Fakes.StubISymbolMethod.global::System#Diagnostics#SymbolStore#ISymbolMethod#GetSourceStartEnd(System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[])">
            <summary>Задает заглушка ISymbolMethod.GetSourceStartEnd(ISymbolDocument[] docs, Int32[] lines, Int32[] columns)</summary>
        </member>
        <member name="F:System.Diagnostics.SymbolStore.Fakes.StubISymbolMethod.TokenGet">
            <summary>Задает stub ISymbolMethod.get_Token()</summary>
        </member>
        <member name="P:System.Diagnostics.SymbolStore.Fakes.StubISymbolMethod.global::System#Diagnostics#SymbolStore#ISymbolMethod#RootScope">
            <summary>Задает stub ISymbolMethod.get_RootScope()</summary>
        </member>
        <member name="P:System.Diagnostics.SymbolStore.Fakes.StubISymbolMethod.global::System#Diagnostics#SymbolStore#ISymbolMethod#SequencePointCount">
            <summary>Задает stub ISymbolMethod.get_SequencePointCount()</summary>
        </member>
        <member name="P:System.Diagnostics.SymbolStore.Fakes.StubISymbolMethod.global::System#Diagnostics#SymbolStore#ISymbolMethod#Token">
            <summary>Задает stub ISymbolMethod.get_Token()</summary>
        </member>
        <member name="T:System.Diagnostics.SymbolStore.Fakes.StubISymbolNamespace">
            <summary>Тип заглушки System.Diagnostics.SymbolStore.ISymbolNamespace</summary>
        </member>
        <member name="M:System.Diagnostics.SymbolStore.Fakes.StubISymbolNamespace.#ctor">
            <summary>Инициализирует новый экземпляр type StubISymbolNamespace</summary>
        </member>
        <member name="F:System.Diagnostics.SymbolStore.Fakes.StubISymbolNamespace.GetNamespaces">
            <summary>Задает stub ISymbolNamespace.GetNamespaces()</summary>
        </member>
        <member name="F:System.Diagnostics.SymbolStore.Fakes.StubISymbolNamespace.GetVariables">
            <summary>Задает stub ISymbolNamespace.GetVariables()</summary>
        </member>
        <member name="F:System.Diagnostics.SymbolStore.Fakes.StubISymbolNamespace.NameGet">
            <summary>Задает stub ISymbolNamespace.get_Name()</summary>
        </member>
        <member name="M:System.Diagnostics.SymbolStore.Fakes.StubISymbolNamespace.global::System#Diagnostics#SymbolStore#ISymbolNamespace#GetNamespaces">
            <summary>Задает заглушка ISymbolNamespace.GetNamespaces()</summary>
        </member>
        <member name="M:System.Diagnostics.SymbolStore.Fakes.StubISymbolNamespace.global::System#Diagnostics#SymbolStore#ISymbolNamespace#GetVariables">
            <summary>Задает заглушка ISymbolNamespace.GetVariables()</summary>
        </member>
        <member name="P:System.Diagnostics.SymbolStore.Fakes.StubISymbolNamespace.global::System#Diagnostics#SymbolStore#ISymbolNamespace#Name">
            <summary>Задает stub ISymbolNamespace.get_Name()</summary>
        </member>
        <member name="T:System.Diagnostics.SymbolStore.Fakes.StubISymbolReader">
            <summary>Тип заглушки System.Diagnostics.SymbolStore.ISymbolReader</summary>
        </member>
        <member name="M:System.Diagnostics.SymbolStore.Fakes.StubISymbolReader.#ctor">
            <summary>Инициализирует новый экземпляр type StubISymbolReader</summary>
        </member>
        <member name="F:System.Diagnostics.SymbolStore.Fakes.StubISymbolReader.GetDocumentStringGuidGuidGuid">
            <summary>Задает stub ISymbolReader.GetDocument(String url, Guid language, Guid languageVendor, Guid documentType)</summary>
        </member>
        <member name="F:System.Diagnostics.SymbolStore.Fakes.StubISymbolReader.GetDocuments">
            <summary>Задает stub ISymbolReader.GetDocuments()</summary>
        </member>
        <member name="F:System.Diagnostics.SymbolStore.Fakes.StubISymbolReader.GetGlobalVariables">
            <summary>Задает stub ISymbolReader.GetGlobalVariables()</summary>
        </member>
        <member name="F:System.Diagnostics.SymbolStore.Fakes.StubISymbolReader.GetMethodFromDocumentPositionISymbolDocumentInt32Int32">
            <summary>Задает stub ISymbolReader.GetMethodFromDocumentPosition(ISymbolDocument document, Int32 line, Int32 column)</summary>
        </member>
        <member name="F:System.Diagnostics.SymbolStore.Fakes.StubISymbolReader.GetMethodSymbolToken">
            <summary>Задает stub ISymbolReader.GetMethod(SymbolToken method)</summary>
        </member>
        <member name="F:System.Diagnostics.SymbolStore.Fakes.StubISymbolReader.GetMethodSymbolTokenInt32">
            <summary>Задает stub ISymbolReader.GetMethod(SymbolToken method, Int32 version)</summary>
        </member>
        <member name="F:System.Diagnostics.SymbolStore.Fakes.StubISymbolReader.GetNamespaces">
            <summary>Задает stub ISymbolReader.GetNamespaces()</summary>
        </member>
        <member name="F:System.Diagnostics.SymbolStore.Fakes.StubISymbolReader.GetSymAttributeSymbolTokenString">
            <summary>Задает stub ISymbolReader.GetSymAttribute(SymbolToken parent, String name)</summary>
        </member>
        <member name="F:System.Diagnostics.SymbolStore.Fakes.StubISymbolReader.GetVariablesSymbolToken">
            <summary>Задает stub ISymbolReader.GetVariables(SymbolToken parent)</summary>
        </member>
        <member name="M:System.Diagnostics.SymbolStore.Fakes.StubISymbolReader.global::System#Diagnostics#SymbolStore#ISymbolReader#GetDocument(System.String,System.Guid,System.Guid,System.Guid)">
            <summary>Задает заглушка ISymbolReader.GetDocument(String url, Guid language, Guid languageVendor, Guid documentType)</summary>
        </member>
        <member name="M:System.Diagnostics.SymbolStore.Fakes.StubISymbolReader.global::System#Diagnostics#SymbolStore#ISymbolReader#GetDocuments">
            <summary>Задает заглушка ISymbolReader.GetDocuments()</summary>
        </member>
        <member name="M:System.Diagnostics.SymbolStore.Fakes.StubISymbolReader.global::System#Diagnostics#SymbolStore#ISymbolReader#GetGlobalVariables">
            <summary>Задает заглушка ISymbolReader.GetGlobalVariables()</summary>
        </member>
        <member name="M:System.Diagnostics.SymbolStore.Fakes.StubISymbolReader.global::System#Diagnostics#SymbolStore#ISymbolReader#GetMethod(System.Diagnostics.SymbolStore.SymbolToken)">
            <summary>Задает заглушка ISymbolReader.GetMethod(SymbolToken method)</summary>
        </member>
        <member name="M:System.Diagnostics.SymbolStore.Fakes.StubISymbolReader.global::System#Diagnostics#SymbolStore#ISymbolReader#GetMethod(System.Diagnostics.SymbolStore.SymbolToken,System.Int32)">
            <summary>Задает заглушка ISymbolReader.GetMethod(SymbolToken method, Int32 version)</summary>
        </member>
        <member name="M:System.Diagnostics.SymbolStore.Fakes.StubISymbolReader.global::System#Diagnostics#SymbolStore#ISymbolReader#GetMethodFromDocumentPosition(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)">
            <summary>Задает заглушка ISymbolReader.GetMethodFromDocumentPosition(ISymbolDocument document, Int32 line, Int32 column)</summary>
        </member>
        <member name="M:System.Diagnostics.SymbolStore.Fakes.StubISymbolReader.global::System#Diagnostics#SymbolStore#ISymbolReader#GetNamespaces">
            <summary>Задает заглушка ISymbolReader.GetNamespaces()</summary>
        </member>
        <member name="M:System.Diagnostics.SymbolStore.Fakes.StubISymbolReader.global::System#Diagnostics#SymbolStore#ISymbolReader#GetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String)">
            <summary>Задает заглушка ISymbolReader.GetSymAttribute(SymbolToken parent, String name)</summary>
        </member>
        <member name="M:System.Diagnostics.SymbolStore.Fakes.StubISymbolReader.global::System#Diagnostics#SymbolStore#ISymbolReader#GetVariables(System.Diagnostics.SymbolStore.SymbolToken)">
            <summary>Задает заглушка ISymbolReader.GetVariables(SymbolToken parent)</summary>
        </member>
        <member name="F:System.Diagnostics.SymbolStore.Fakes.StubISymbolReader.UserEntryPointGet">
            <summary>Задает stub ISymbolReader.get_UserEntryPoint()</summary>
        </member>
        <member name="P:System.Diagnostics.SymbolStore.Fakes.StubISymbolReader.global::System#Diagnostics#SymbolStore#ISymbolReader#UserEntryPoint">
            <summary>Задает stub ISymbolReader.get_UserEntryPoint()</summary>
        </member>
        <member name="T:System.Diagnostics.SymbolStore.Fakes.StubISymbolScope">
            <summary>Тип заглушки System.Diagnostics.SymbolStore.ISymbolScope</summary>
        </member>
        <member name="M:System.Diagnostics.SymbolStore.Fakes.StubISymbolScope.#ctor">
            <summary>Инициализирует новый экземпляр type StubISymbolScope</summary>
        </member>
        <member name="F:System.Diagnostics.SymbolStore.Fakes.StubISymbolScope.EndOffsetGet">
            <summary>Задает stub ISymbolScope.get_EndOffset()</summary>
        </member>
        <member name="F:System.Diagnostics.SymbolStore.Fakes.StubISymbolScope.GetChildren">
            <summary>Задает stub ISymbolScope.GetChildren()</summary>
        </member>
        <member name="F:System.Diagnostics.SymbolStore.Fakes.StubISymbolScope.GetLocals">
            <summary>Задает stub ISymbolScope.GetLocals()</summary>
        </member>
        <member name="F:System.Diagnostics.SymbolStore.Fakes.StubISymbolScope.GetNamespaces">
            <summary>Задает stub ISymbolScope.GetNamespaces()</summary>
        </member>
        <member name="F:System.Diagnostics.SymbolStore.Fakes.StubISymbolScope.MethodGet">
            <summary>Задает stub ISymbolScope.get_Method()</summary>
        </member>
        <member name="F:System.Diagnostics.SymbolStore.Fakes.StubISymbolScope.ParentGet">
            <summary>Задает stub ISymbolScope.get_Parent()</summary>
        </member>
        <member name="F:System.Diagnostics.SymbolStore.Fakes.StubISymbolScope.StartOffsetGet">
            <summary>Задает stub ISymbolScope.get_StartOffset()</summary>
        </member>
        <member name="M:System.Diagnostics.SymbolStore.Fakes.StubISymbolScope.global::System#Diagnostics#SymbolStore#ISymbolScope#GetChildren">
            <summary>Задает заглушка ISymbolScope.GetChildren()</summary>
        </member>
        <member name="M:System.Diagnostics.SymbolStore.Fakes.StubISymbolScope.global::System#Diagnostics#SymbolStore#ISymbolScope#GetLocals">
            <summary>Задает заглушка ISymbolScope.GetLocals()</summary>
        </member>
        <member name="M:System.Diagnostics.SymbolStore.Fakes.StubISymbolScope.global::System#Diagnostics#SymbolStore#ISymbolScope#GetNamespaces">
            <summary>Задает заглушка ISymbolScope.GetNamespaces()</summary>
        </member>
        <member name="P:System.Diagnostics.SymbolStore.Fakes.StubISymbolScope.global::System#Diagnostics#SymbolStore#ISymbolScope#EndOffset">
            <summary>Задает stub ISymbolScope.get_EndOffset()</summary>
        </member>
        <member name="P:System.Diagnostics.SymbolStore.Fakes.StubISymbolScope.global::System#Diagnostics#SymbolStore#ISymbolScope#Method">
            <summary>Задает stub ISymbolScope.get_Method()</summary>
        </member>
        <member name="P:System.Diagnostics.SymbolStore.Fakes.StubISymbolScope.global::System#Diagnostics#SymbolStore#ISymbolScope#Parent">
            <summary>Задает stub ISymbolScope.get_Parent()</summary>
        </member>
        <member name="P:System.Diagnostics.SymbolStore.Fakes.StubISymbolScope.global::System#Diagnostics#SymbolStore#ISymbolScope#StartOffset">
            <summary>Задает stub ISymbolScope.get_StartOffset()</summary>
        </member>
        <member name="T:System.Diagnostics.SymbolStore.Fakes.StubISymbolVariable">
            <summary>Тип заглушки System.Diagnostics.SymbolStore.ISymbolVariable</summary>
        </member>
        <member name="M:System.Diagnostics.SymbolStore.Fakes.StubISymbolVariable.#ctor">
            <summary>Инициализирует новый экземпляр type StubISymbolVariable</summary>
        </member>
        <member name="F:System.Diagnostics.SymbolStore.Fakes.StubISymbolVariable.AddressField1Get">
            <summary>Задает stub ISymbolVariable.get_AddressField1()</summary>
        </member>
        <member name="F:System.Diagnostics.SymbolStore.Fakes.StubISymbolVariable.AddressField2Get">
            <summary>Задает stub ISymbolVariable.get_AddressField2()</summary>
        </member>
        <member name="F:System.Diagnostics.SymbolStore.Fakes.StubISymbolVariable.AddressField3Get">
            <summary>Задает stub ISymbolVariable.get_AddressField3()</summary>
        </member>
        <member name="F:System.Diagnostics.SymbolStore.Fakes.StubISymbolVariable.AddressKindGet">
            <summary>Задает stub ISymbolVariable.get_AddressKind()</summary>
        </member>
        <member name="F:System.Diagnostics.SymbolStore.Fakes.StubISymbolVariable.AttributesGet">
            <summary>Задает stub ISymbolVariable.get_Attributes()</summary>
        </member>
        <member name="F:System.Diagnostics.SymbolStore.Fakes.StubISymbolVariable.EndOffsetGet">
            <summary>Задает stub ISymbolVariable.get_EndOffset()</summary>
        </member>
        <member name="F:System.Diagnostics.SymbolStore.Fakes.StubISymbolVariable.GetSignature">
            <summary>Задает stub ISymbolVariable.GetSignature()</summary>
        </member>
        <member name="F:System.Diagnostics.SymbolStore.Fakes.StubISymbolVariable.NameGet">
            <summary>Задает stub ISymbolVariable.get_Name()</summary>
        </member>
        <member name="F:System.Diagnostics.SymbolStore.Fakes.StubISymbolVariable.StartOffsetGet">
            <summary>Задает stub ISymbolVariable.get_StartOffset()</summary>
        </member>
        <member name="M:System.Diagnostics.SymbolStore.Fakes.StubISymbolVariable.global::System#Diagnostics#SymbolStore#ISymbolVariable#GetSignature">
            <summary>Задает заглушка ISymbolVariable.GetSignature()</summary>
        </member>
        <member name="P:System.Diagnostics.SymbolStore.Fakes.StubISymbolVariable.global::System#Diagnostics#SymbolStore#ISymbolVariable#AddressField1">
            <summary>Задает stub ISymbolVariable.get_AddressField1()</summary>
        </member>
        <member name="P:System.Diagnostics.SymbolStore.Fakes.StubISymbolVariable.global::System#Diagnostics#SymbolStore#ISymbolVariable#AddressField2">
            <summary>Задает stub ISymbolVariable.get_AddressField2()</summary>
        </member>
        <member name="P:System.Diagnostics.SymbolStore.Fakes.StubISymbolVariable.global::System#Diagnostics#SymbolStore#ISymbolVariable#AddressField3">
            <summary>Задает stub ISymbolVariable.get_AddressField3()</summary>
        </member>
        <member name="P:System.Diagnostics.SymbolStore.Fakes.StubISymbolVariable.global::System#Diagnostics#SymbolStore#ISymbolVariable#AddressKind">
            <summary>Задает stub ISymbolVariable.get_AddressKind()</summary>
        </member>
        <member name="P:System.Diagnostics.SymbolStore.Fakes.StubISymbolVariable.global::System#Diagnostics#SymbolStore#ISymbolVariable#Attributes">
            <summary>Задает stub ISymbolVariable.get_Attributes()</summary>
        </member>
        <member name="P:System.Diagnostics.SymbolStore.Fakes.StubISymbolVariable.global::System#Diagnostics#SymbolStore#ISymbolVariable#EndOffset">
            <summary>Задает stub ISymbolVariable.get_EndOffset()</summary>
        </member>
        <member name="P:System.Diagnostics.SymbolStore.Fakes.StubISymbolVariable.global::System#Diagnostics#SymbolStore#ISymbolVariable#Name">
            <summary>Задает stub ISymbolVariable.get_Name()</summary>
        </member>
        <member name="P:System.Diagnostics.SymbolStore.Fakes.StubISymbolVariable.global::System#Diagnostics#SymbolStore#ISymbolVariable#StartOffset">
            <summary>Задает stub ISymbolVariable.get_StartOffset()</summary>
        </member>
        <member name="T:System.Diagnostics.SymbolStore.Fakes.StubISymbolWriter">
            <summary>Тип заглушки System.Diagnostics.SymbolStore.ISymbolWriter</summary>
        </member>
        <member name="M:System.Diagnostics.SymbolStore.Fakes.StubISymbolWriter.#ctor">
            <summary>Инициализирует новый экземпляр type StubISymbolWriter</summary>
        </member>
        <member name="F:System.Diagnostics.SymbolStore.Fakes.StubISymbolWriter.Close">
            <summary>Задает stub ISymbolWriter.Close()</summary>
        </member>
        <member name="F:System.Diagnostics.SymbolStore.Fakes.StubISymbolWriter.CloseMethod">
            <summary>Задает stub ISymbolWriter.CloseMethod()</summary>
        </member>
        <member name="F:System.Diagnostics.SymbolStore.Fakes.StubISymbolWriter.CloseNamespace">
            <summary>Задает stub ISymbolWriter.CloseNamespace()</summary>
        </member>
        <member name="F:System.Diagnostics.SymbolStore.Fakes.StubISymbolWriter.CloseScopeInt32">
            <summary>Задает stub ISymbolWriter.CloseScope(Int32 endOffset)</summary>
        </member>
        <member name="F:System.Diagnostics.SymbolStore.Fakes.StubISymbolWriter.DefineDocumentStringGuidGuidGuid">
            <summary>Задает stub ISymbolWriter.DefineDocument(String url, Guid language, Guid languageVendor, Guid documentType)</summary>
        </member>
        <member name="F:System.Diagnostics.SymbolStore.Fakes.StubISymbolWriter.DefineFieldSymbolTokenStringFieldAttributesByteArraySymAddressKindInt32Int32Int32">
            <summary>Задает stub ISymbolWriter.DefineField(SymbolToken parent, String name, FieldAttributes attributes, Byte[] signature, SymAddressKind addrKind, Int32 addr1, Int32 addr2, Int32 addr3)</summary>
        </member>
        <member name="F:System.Diagnostics.SymbolStore.Fakes.StubISymbolWriter.DefineGlobalVariableStringFieldAttributesByteArraySymAddressKindInt32Int32Int32">
            <summary>Задает stub ISymbolWriter.DefineGlobalVariable(String name, FieldAttributes attributes, Byte[] signature, SymAddressKind addrKind, Int32 addr1, Int32 addr2, Int32 addr3)</summary>
        </member>
        <member name="F:System.Diagnostics.SymbolStore.Fakes.StubISymbolWriter.DefineLocalVariableStringFieldAttributesByteArraySymAddressKindInt32Int32Int32Int32Int32">
            <summary>Задает stub ISymbolWriter.DefineLocalVariable(String name, FieldAttributes attributes, Byte[] signature, SymAddressKind addrKind, Int32 addr1, Int32 addr2, Int32 addr3, Int32 startOffset, Int32 endOffset)</summary>
        </member>
        <member name="F:System.Diagnostics.SymbolStore.Fakes.StubISymbolWriter.DefineParameterStringParameterAttributesInt32SymAddressKindInt32Int32Int32">
            <summary>Задает stub ISymbolWriter.DefineParameter(String name, ParameterAttributes attributes, Int32 sequence, SymAddressKind addrKind, Int32 addr1, Int32 addr2, Int32 addr3)</summary>
        </member>
        <member name="F:System.Diagnostics.SymbolStore.Fakes.StubISymbolWriter.DefineSequencePointsISymbolDocumentWriterInt32ArrayInt32ArrayInt32ArrayInt32ArrayInt32Array">
            <summary>Задает stub ISymbolWriter.DefineSequencePoints(ISymbolDocumentWriter document, Int32[] offsets, Int32[] lines, Int32[] columns, Int32[] endLines, Int32[] endColumns)</summary>
        </member>
        <member name="F:System.Diagnostics.SymbolStore.Fakes.StubISymbolWriter.InitializeIntPtrStringBoolean">
            <summary>Задает stub ISymbolWriter.Initialize(IntPtr emitter, String filename, Boolean fFullBuild)</summary>
        </member>
        <member name="F:System.Diagnostics.SymbolStore.Fakes.StubISymbolWriter.OpenMethodSymbolToken">
            <summary>Задает stub ISymbolWriter.OpenMethod(SymbolToken method)</summary>
        </member>
        <member name="F:System.Diagnostics.SymbolStore.Fakes.StubISymbolWriter.OpenNamespaceString">
            <summary>Задает stub ISymbolWriter.OpenNamespace(String name)</summary>
        </member>
        <member name="F:System.Diagnostics.SymbolStore.Fakes.StubISymbolWriter.OpenScopeInt32">
            <summary>Задает stub ISymbolWriter.OpenScope(Int32 startOffset)</summary>
        </member>
        <member name="F:System.Diagnostics.SymbolStore.Fakes.StubISymbolWriter.SetMethodSourceRangeISymbolDocumentWriterInt32Int32ISymbolDocumentWriterInt32Int32">
            <summary>Задает stub ISymbolWriter.SetMethodSourceRange(ISymbolDocumentWriter startDoc, Int32 startLine, Int32 startColumn, ISymbolDocumentWriter endDoc, Int32 endLine, Int32 endColumn)</summary>
        </member>
        <member name="F:System.Diagnostics.SymbolStore.Fakes.StubISymbolWriter.SetScopeRangeInt32Int32Int32">
            <summary>Задает stub ISymbolWriter.SetScopeRange(Int32 scopeID, Int32 startOffset, Int32 endOffset)</summary>
        </member>
        <member name="F:System.Diagnostics.SymbolStore.Fakes.StubISymbolWriter.SetSymAttributeSymbolTokenStringByteArray">
            <summary>Задает stub ISymbolWriter.SetSymAttribute(SymbolToken parent, String name, Byte[] data)</summary>
        </member>
        <member name="F:System.Diagnostics.SymbolStore.Fakes.StubISymbolWriter.SetUnderlyingWriterIntPtr">
            <summary>Задает stub ISymbolWriter.SetUnderlyingWriter(IntPtr underlyingWriter)</summary>
        </member>
        <member name="F:System.Diagnostics.SymbolStore.Fakes.StubISymbolWriter.SetUserEntryPointSymbolToken">
            <summary>Задает stub ISymbolWriter.SetUserEntryPoint(SymbolToken entryMethod)</summary>
        </member>
        <member name="M:System.Diagnostics.SymbolStore.Fakes.StubISymbolWriter.global::System#Diagnostics#SymbolStore#ISymbolWriter#Close">
            <summary>Задает заглушка ISymbolWriter.Close()</summary>
        </member>
        <member name="M:System.Diagnostics.SymbolStore.Fakes.StubISymbolWriter.global::System#Diagnostics#SymbolStore#ISymbolWriter#CloseMethod">
            <summary>Задает заглушка ISymbolWriter.CloseMethod()</summary>
        </member>
        <member name="M:System.Diagnostics.SymbolStore.Fakes.StubISymbolWriter.global::System#Diagnostics#SymbolStore#ISymbolWriter#CloseNamespace">
            <summary>Задает заглушка ISymbolWriter.CloseNamespace()</summary>
        </member>
        <member name="M:System.Diagnostics.SymbolStore.Fakes.StubISymbolWriter.global::System#Diagnostics#SymbolStore#ISymbolWriter#CloseScope(System.Int32)">
            <summary>Задает заглушка ISymbolWriter.CloseScope(Int32 endOffset)</summary>
        </member>
        <member name="M:System.Diagnostics.SymbolStore.Fakes.StubISymbolWriter.global::System#Diagnostics#SymbolStore#ISymbolWriter#DefineDocument(System.String,System.Guid,System.Guid,System.Guid)">
            <summary>Задает заглушка ISymbolWriter.DefineDocument(String url, Guid language, Guid languageVendor, Guid documentType)</summary>
        </member>
        <member name="M:System.Diagnostics.SymbolStore.Fakes.StubISymbolWriter.global::System#Diagnostics#SymbolStore#ISymbolWriter#DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
            <summary>Задает заглушка ISymbolWriter.DefineField(SymbolToken parent, String name, FieldAttributes attributes, Byte[] signature, SymAddressKind addrKind, Int32 addr1, Int32 addr2, Int32 addr3)</summary>
        </member>
        <member name="M:System.Diagnostics.SymbolStore.Fakes.StubISymbolWriter.global::System#Diagnostics#SymbolStore#ISymbolWriter#DefineGlobalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
            <summary>Задает заглушка ISymbolWriter.DefineGlobalVariable(String name, FieldAttributes attributes, Byte[] signature, SymAddressKind addrKind, Int32 addr1, Int32 addr2, Int32 addr3)</summary>
        </member>
        <member name="M:System.Diagnostics.SymbolStore.Fakes.StubISymbolWriter.global::System#Diagnostics#SymbolStore#ISymbolWriter#DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>Задает заглушка ISymbolWriter.DefineLocalVariable(String name, FieldAttributes attributes, Byte[] signature, SymAddressKind addrKind, Int32 addr1, Int32 addr2, Int32 addr3, Int32 startOffset, Int32 endOffset)</summary>
        </member>
        <member name="M:System.Diagnostics.SymbolStore.Fakes.StubISymbolWriter.global::System#Diagnostics#SymbolStore#ISymbolWriter#DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
            <summary>Задает заглушка ISymbolWriter.DefineParameter(String name, ParameterAttributes attributes, Int32 sequence, SymAddressKind addrKind, Int32 addr1, Int32 addr2, Int32 addr3)</summary>
        </member>
        <member name="M:System.Diagnostics.SymbolStore.Fakes.StubISymbolWriter.global::System#Diagnostics#SymbolStore#ISymbolWriter#DefineSequencePoints(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])">
            <summary>Задает заглушка ISymbolWriter.DefineSequencePoints(ISymbolDocumentWriter document, Int32[] offsets, Int32[] lines, Int32[] columns, Int32[] endLines, Int32[] endColumns)</summary>
        </member>
        <member name="M:System.Diagnostics.SymbolStore.Fakes.StubISymbolWriter.global::System#Diagnostics#SymbolStore#ISymbolWriter#Initialize(System.IntPtr,System.String,System.Boolean)">
            <summary>Задает заглушка ISymbolWriter.Initialize(IntPtr emitter, String filename, Boolean fFullBuild)</summary>
        </member>
        <member name="M:System.Diagnostics.SymbolStore.Fakes.StubISymbolWriter.global::System#Diagnostics#SymbolStore#ISymbolWriter#OpenMethod(System.Diagnostics.SymbolStore.SymbolToken)">
            <summary>Задает заглушка ISymbolWriter.OpenMethod(SymbolToken method)</summary>
        </member>
        <member name="M:System.Diagnostics.SymbolStore.Fakes.StubISymbolWriter.global::System#Diagnostics#SymbolStore#ISymbolWriter#OpenNamespace(System.String)">
            <summary>Задает заглушка ISymbolWriter.OpenNamespace(String name)</summary>
        </member>
        <member name="M:System.Diagnostics.SymbolStore.Fakes.StubISymbolWriter.global::System#Diagnostics#SymbolStore#ISymbolWriter#OpenScope(System.Int32)">
            <summary>Задает заглушка ISymbolWriter.OpenScope(Int32 startOffset)</summary>
        </member>
        <member name="M:System.Diagnostics.SymbolStore.Fakes.StubISymbolWriter.global::System#Diagnostics#SymbolStore#ISymbolWriter#SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)">
            <summary>Задает заглушка ISymbolWriter.SetMethodSourceRange(ISymbolDocumentWriter startDoc, Int32 startLine, Int32 startColumn, ISymbolDocumentWriter endDoc, Int32 endLine, Int32 endColumn)</summary>
        </member>
        <member name="M:System.Diagnostics.SymbolStore.Fakes.StubISymbolWriter.global::System#Diagnostics#SymbolStore#ISymbolWriter#SetScopeRange(System.Int32,System.Int32,System.Int32)">
            <summary>Задает заглушка ISymbolWriter.SetScopeRange(Int32 scopeID, Int32 startOffset, Int32 endOffset)</summary>
        </member>
        <member name="M:System.Diagnostics.SymbolStore.Fakes.StubISymbolWriter.global::System#Diagnostics#SymbolStore#ISymbolWriter#SetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Byte[])">
            <summary>Задает заглушка ISymbolWriter.SetSymAttribute(SymbolToken parent, String name, Byte[] data)</summary>
        </member>
        <member name="M:System.Diagnostics.SymbolStore.Fakes.StubISymbolWriter.global::System#Diagnostics#SymbolStore#ISymbolWriter#SetUnderlyingWriter(System.IntPtr)">
            <summary>Задает заглушка ISymbolWriter.SetUnderlyingWriter(IntPtr underlyingWriter)</summary>
        </member>
        <member name="M:System.Diagnostics.SymbolStore.Fakes.StubISymbolWriter.global::System#Diagnostics#SymbolStore#ISymbolWriter#SetUserEntryPoint(System.Diagnostics.SymbolStore.SymbolToken)">
            <summary>Задает заглушка ISymbolWriter.SetUserEntryPoint(SymbolToken entryMethod)</summary>
        </member>
        <member name="M:System.Diagnostics.SymbolStore.Fakes.StubISymbolWriter.global::System#Diagnostics#SymbolStore#ISymbolWriter#UsingNamespace(System.String)">
            <summary>Задает заглушка ISymbolWriter.UsingNamespace(String fullName)</summary>
        </member>
        <member name="F:System.Diagnostics.SymbolStore.Fakes.StubISymbolWriter.UsingNamespaceString">
            <summary>Задает stub ISymbolWriter.UsingNamespace(String fullName)</summary>
        </member>
        <member name="T:System.Diagnostics.SymbolStore.Fakes.StubSymDocumentType">
            <summary>Тип заглушки System.Diagnostics.SymbolStore.SymDocumentType</summary>
        </member>
        <member name="M:System.Diagnostics.SymbolStore.Fakes.StubSymDocumentType.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Diagnostics.SymbolStore.Fakes.StubSymDocumentType.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubSymDocumentType</summary>
        </member>
        <member name="P:System.Diagnostics.SymbolStore.Fakes.StubSymDocumentType.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Diagnostics.SymbolStore.Fakes.StubSymDocumentType.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Diagnostics.SymbolStore.Fakes.StubSymDocumentType.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Diagnostics.SymbolStore.Fakes.StubSymLanguageType">
            <summary>Тип заглушки System.Diagnostics.SymbolStore.SymLanguageType</summary>
        </member>
        <member name="M:System.Diagnostics.SymbolStore.Fakes.StubSymLanguageType.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Diagnostics.SymbolStore.Fakes.StubSymLanguageType.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubSymLanguageType</summary>
        </member>
        <member name="P:System.Diagnostics.SymbolStore.Fakes.StubSymLanguageType.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Diagnostics.SymbolStore.Fakes.StubSymLanguageType.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Diagnostics.SymbolStore.Fakes.StubSymLanguageType.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Diagnostics.SymbolStore.Fakes.StubSymLanguageVendor">
            <summary>Тип заглушки System.Diagnostics.SymbolStore.SymLanguageVendor</summary>
        </member>
        <member name="M:System.Diagnostics.SymbolStore.Fakes.StubSymLanguageVendor.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Diagnostics.SymbolStore.Fakes.StubSymLanguageVendor.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubSymLanguageVendor</summary>
        </member>
        <member name="P:System.Diagnostics.SymbolStore.Fakes.StubSymLanguageVendor.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Diagnostics.SymbolStore.Fakes.StubSymLanguageVendor.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Diagnostics.SymbolStore.Fakes.StubSymLanguageVendor.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Fakes.ShimDateTime">
            <summary>Тип оболочки совместимости для System.DateTime</summary>
        </member>
        <member name="M:System.Fakes.ShimDateTime.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:System.Fakes.ShimDateTime.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:System.Fakes.ShimDateTime.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:System.Fakes.ShimDateTime.AdditionOpDateTimeTimeSpan">
            <summary>Задает оболочка совместимости DateTime.op_Addition(DateTime d, TimeSpan t)</summary>
        </member>
        <member name="P:System.Fakes.ShimDateTime.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:System.Fakes.ShimDateTime.CompareDateTimeDateTime">
            <summary>Задает оболочка совместимости DateTime.Compare(DateTime t1, DateTime t2)</summary>
        </member>
        <member name="P:System.Fakes.ShimDateTime.DateToTicksInt32Int32Int32">
            <summary>Задает оболочка совместимости DateTime.DateToTicks(Int32 year, Int32 month, Int32 day)</summary>
        </member>
        <member name="P:System.Fakes.ShimDateTime.DaysInMonthInt32Int32">
            <summary>Задает оболочка совместимости DateTime.DaysInMonth(Int32 year, Int32 month)</summary>
        </member>
        <member name="P:System.Fakes.ShimDateTime.DoubleDateToTicksDouble">
            <summary>Задает оболочка совместимости DateTime.DoubleDateToTicks(Double value)</summary>
        </member>
        <member name="P:System.Fakes.ShimDateTime.EqualityOpDateTimeDateTime">
            <summary>Задает оболочка совместимости DateTime.op_Equality(DateTime d1, DateTime d2)</summary>
        </member>
        <member name="P:System.Fakes.ShimDateTime.EqualsDateTimeDateTime">
            <summary>Задает оболочка совместимости DateTime.Equals(DateTime t1, DateTime t2)</summary>
        </member>
        <member name="P:System.Fakes.ShimDateTime.FromBinaryInt64">
            <summary>Задает оболочка совместимости DateTime.FromBinary(Int64 dateData)</summary>
        </member>
        <member name="P:System.Fakes.ShimDateTime.FromBinaryRawInt64">
            <summary>Задает оболочка совместимости DateTime.FromBinaryRaw(Int64 dateData)</summary>
        </member>
        <member name="P:System.Fakes.ShimDateTime.FromFileTimeInt64">
            <summary>Задает оболочка совместимости DateTime.FromFileTime(Int64 fileTime)</summary>
        </member>
        <member name="P:System.Fakes.ShimDateTime.FromFileTimeUtcInt64">
            <summary>Задает оболочка совместимости DateTime.FromFileTimeUtc(Int64 fileTime)</summary>
        </member>
        <member name="P:System.Fakes.ShimDateTime.FromOADateDouble">
            <summary>Задает оболочка совместимости DateTime.FromOADate(Double d)</summary>
        </member>
        <member name="P:System.Fakes.ShimDateTime.GreaterThanOpDateTimeDateTime">
            <summary>Задает оболочка совместимости DateTime.op_GreaterThan(DateTime t1, DateTime t2)</summary>
        </member>
        <member name="P:System.Fakes.ShimDateTime.GreaterThanOrEqualOpDateTimeDateTime">
            <summary>Задает оболочка совместимости DateTime.op_GreaterThanOrEqual(DateTime t1, DateTime t2)</summary>
        </member>
        <member name="P:System.Fakes.ShimDateTime.InequalityOpDateTimeDateTime">
            <summary>Задает оболочка совместимости DateTime.op_Inequality(DateTime d1, DateTime d2)</summary>
        </member>
        <member name="P:System.Fakes.ShimDateTime.IsLeapYearInt32">
            <summary>Задает оболочка совместимости DateTime.IsLeapYear(Int32 year)</summary>
        </member>
        <member name="P:System.Fakes.ShimDateTime.LessThanOpDateTimeDateTime">
            <summary>Задает оболочка совместимости DateTime.op_LessThan(DateTime t1, DateTime t2)</summary>
        </member>
        <member name="P:System.Fakes.ShimDateTime.LessThanOrEqualOpDateTimeDateTime">
            <summary>Задает оболочка совместимости DateTime.op_LessThanOrEqual(DateTime t1, DateTime t2)</summary>
        </member>
        <member name="P:System.Fakes.ShimDateTime.NowGet">
            <summary>Задает оболочка совместимости DateTime.get_Now()</summary>
        </member>
        <member name="P:System.Fakes.ShimDateTime.ParseExactStringStringIFormatProvider">
            <summary>Задает оболочка совместимости DateTime.ParseExact(String s, String format, IFormatProvider provider)</summary>
        </member>
        <member name="P:System.Fakes.ShimDateTime.ParseString">
            <summary>Задает оболочка совместимости DateTime.Parse(String s)</summary>
        </member>
        <member name="P:System.Fakes.ShimDateTime.ParseStringIFormatProvider">
            <summary>Задает оболочка совместимости DateTime.Parse(String s, IFormatProvider provider)</summary>
        </member>
        <member name="P:System.Fakes.ShimDateTime.SpecifyKindDateTimeDateTimeKind">
            <summary>Задает оболочка совместимости DateTime.SpecifyKind(DateTime value, DateTimeKind kind)</summary>
        </member>
        <member name="P:System.Fakes.ShimDateTime.StaticConstructor">
            <summary>Задает оболочка совместимости DateTime.DateTime()</summary>
        </member>
        <member name="P:System.Fakes.ShimDateTime.SubtractionOpDateTimeDateTime">
            <summary>Задает оболочка совместимости DateTime.op_Subtraction(DateTime d1, DateTime d2)</summary>
        </member>
        <member name="P:System.Fakes.ShimDateTime.SubtractionOpDateTimeTimeSpan">
            <summary>Задает оболочка совместимости DateTime.op_Subtraction(DateTime d, TimeSpan t)</summary>
        </member>
        <member name="P:System.Fakes.ShimDateTime.TicksToOADateInt64">
            <summary>Задает оболочка совместимости DateTime.TicksToOADate(Int64 value)</summary>
        </member>
        <member name="P:System.Fakes.ShimDateTime.TimeToTicksInt32Int32Int32">
            <summary>Задает оболочка совместимости DateTime.TimeToTicks(Int32 hour, Int32 minute, Int32 second)</summary>
        </member>
        <member name="P:System.Fakes.ShimDateTime.TodayGet">
            <summary>Задает оболочка совместимости DateTime.get_Today()</summary>
        </member>
        <member name="P:System.Fakes.ShimDateTime.TryCreateInt32Int32Int32Int32Int32Int32Int32DateTimeOut">
            <summary>Задает оболочка совместимости DateTime.TryCreate(Int32 year, Int32 month, Int32 day, Int32 hour, Int32 minute, Int32 second, Int32 millisecond, DateTime&amp; result)</summary>
        </member>
        <member name="P:System.Fakes.ShimDateTime.TryParseStringDateTimeOut">
            <summary>Задает оболочка совместимости DateTime.TryParse(String s, DateTime&amp; result)</summary>
        </member>
        <member name="P:System.Fakes.ShimDateTime.UtcNowGet">
            <summary>Задает оболочка совместимости DateTime.get_UtcNow()</summary>
        </member>
        <member name="T:System.Fakes.ShimDateTime.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="T:System.Fakes.ShimGuid">
            <summary>Тип оболочки совместимости для System.Guid</summary>
        </member>
        <member name="M:System.Fakes.ShimGuid.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:System.Fakes.ShimGuid.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:System.Fakes.ShimGuid.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:System.Fakes.ShimGuid.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:System.Fakes.ShimGuid.EatAllWhitespaceString">
            <summary>Задает оболочка совместимости Guid.EatAllWhitespace(String str)</summary>
        </member>
        <member name="P:System.Fakes.ShimGuid.EqualityOpGuidGuid">
            <summary>Задает оболочка совместимости Guid.op_Equality(Guid a, Guid b)</summary>
        </member>
        <member name="P:System.Fakes.ShimGuid.HexToCharInt32">
            <summary>Задает оболочка совместимости Guid.HexToChar(Int32 a)</summary>
        </member>
        <member name="P:System.Fakes.ShimGuid.HexsToCharsCharArrayInt32Int32Int32">
            <summary>Задает оболочка совместимости Guid.HexsToChars(Char[] guidChars, Int32 offset, Int32 a, Int32 b)</summary>
        </member>
        <member name="P:System.Fakes.ShimGuid.HexsToCharsCharArrayInt32Int32Int32Boolean">
            <summary>Задает оболочка совместимости Guid.HexsToChars(Char[] guidChars, Int32 offset, Int32 a, Int32 b, Boolean hex)</summary>
        </member>
        <member name="P:System.Fakes.ShimGuid.InequalityOpGuidGuid">
            <summary>Задает оболочка совместимости Guid.op_Inequality(Guid a, Guid b)</summary>
        </member>
        <member name="P:System.Fakes.ShimGuid.IsHexPrefixStringInt32">
            <summary>Задает оболочка совместимости Guid.IsHexPrefix(String str, Int32 i)</summary>
        </member>
        <member name="P:System.Fakes.ShimGuid.NewGuid">
            <summary>Задает оболочка совместимости Guid.NewGuid()</summary>
        </member>
        <member name="P:System.Fakes.ShimGuid.ParseExactStringString">
            <summary>Задает оболочка совместимости Guid.ParseExact(String input, String format)</summary>
        </member>
        <member name="P:System.Fakes.ShimGuid.ParseString">
            <summary>Задает оболочка совместимости Guid.Parse(String input)</summary>
        </member>
        <member name="P:System.Fakes.ShimGuid.StaticConstructor">
            <summary>Задает оболочка совместимости Guid.Guid()</summary>
        </member>
        <member name="P:System.Fakes.ShimGuid.TryParseExactStringStringGuidOut">
            <summary>Задает оболочка совместимости Guid.TryParseExact(String input, String format, Guid&amp; result)</summary>
        </member>
        <member name="P:System.Fakes.ShimGuid.TryParseStringGuidOut">
            <summary>Задает оболочка совместимости Guid.TryParse(String input, Guid&amp; result)</summary>
        </member>
        <member name="T:System.Fakes.ShimGuid.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="T:System.Fakes.StubAccessViolationException">
            <summary>Тип заглушки System.AccessViolationException</summary>
        </member>
        <member name="M:System.Fakes.StubAccessViolationException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubAccessViolationException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubAccessViolationException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubAccessViolationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubAccessViolationException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubAccessViolationException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Fakes.StubAccessViolationException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubAccessViolationException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Fakes.StubAccessViolationException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.Fakes.StubAccessViolationException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Fakes.StubAccessViolationException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Fakes.StubAccessViolationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubAccessViolationException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubAccessViolationException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Fakes.StubAccessViolationException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Fakes.StubAccessViolationException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubAccessViolationException</summary>
        </member>
        <member name="F:System.Fakes.StubAccessViolationException.MessageGet">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="F:System.Fakes.StubAccessViolationException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Fakes.StubAccessViolationException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Fakes.StubAccessViolationException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Fakes.StubAccessViolationException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.Fakes.StubAccessViolationException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="P:System.Fakes.StubAccessViolationException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Fakes.StubAccessViolationException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="P:System.Fakes.StubAccessViolationException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Fakes.StubAccessViolationException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubAccessViolationException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubAccessViolationException.Message">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="P:System.Fakes.StubAccessViolationException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="P:System.Fakes.StubAccessViolationException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Fakes.StubAggregateException">
            <summary>Тип заглушки System.AggregateException</summary>
        </member>
        <member name="M:System.Fakes.StubAggregateException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubAggregateException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubAggregateException.#ctor(System.Collections.Generic.IEnumerable{System.Exception})">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubAggregateException.#ctor(System.Exception[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubAggregateException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubAggregateException.#ctor(System.String,System.Exception[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubAggregateException.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Exception})">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubAggregateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubAggregateException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubAggregateException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Fakes.StubAggregateException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubAggregateException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Fakes.StubAggregateException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.Fakes.StubAggregateException.GetBaseException">
            <summary>Задает заглушка AggregateException.GetBaseException()</summary>
        </member>
        <member name="F:System.Fakes.StubAggregateException.GetBaseException01">
            <summary>Задает stub AggregateException.GetBaseException()</summary>
        </member>
        <member name="M:System.Fakes.StubAggregateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка AggregateException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubAggregateException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub AggregateException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubAggregateException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Fakes.StubAggregateException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Fakes.StubAggregateException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubAggregateException</summary>
        </member>
        <member name="F:System.Fakes.StubAggregateException.MessageGet">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="F:System.Fakes.StubAggregateException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Fakes.StubAggregateException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Fakes.StubAggregateException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Fakes.StubAggregateException.ToString">
            <summary>Задает заглушка AggregateException.ToString()</summary>
        </member>
        <member name="F:System.Fakes.StubAggregateException.ToString01">
            <summary>Задает stub AggregateException.ToString()</summary>
        </member>
        <member name="P:System.Fakes.StubAggregateException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Fakes.StubAggregateException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="P:System.Fakes.StubAggregateException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Fakes.StubAggregateException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubAggregateException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubAggregateException.Message">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="P:System.Fakes.StubAggregateException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="P:System.Fakes.StubAggregateException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Fakes.StubAppDomainManager">
            <summary>Тип заглушки System.AppDomainManager</summary>
        </member>
        <member name="M:System.Fakes.StubAppDomainManager.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="F:System.Fakes.StubAppDomainManager.ApplicationActivatorGet">
            <summary>Задает stub AppDomainManager.get_ApplicationActivator()</summary>
        </member>
        <member name="M:System.Fakes.StubAppDomainManager.CheckSecuritySettings(System.Security.SecurityState)">
            <summary>Задает заглушка AppDomainManager.CheckSecuritySettings(SecurityState state)</summary>
        </member>
        <member name="F:System.Fakes.StubAppDomainManager.CheckSecuritySettingsSecurityState">
            <summary>Задает stub AppDomainManager.CheckSecuritySettings(SecurityState state)</summary>
        </member>
        <member name="M:System.Fakes.StubAppDomainManager.CreateDomain(System.String,System.Security.Policy.Evidence,System.AppDomainSetup)">
            <summary>Задает заглушка AppDomainManager.CreateDomain(String friendlyName, Evidence securityInfo, AppDomainSetup appDomainInfo)</summary>
        </member>
        <member name="F:System.Fakes.StubAppDomainManager.CreateDomainStringEvidenceAppDomainSetup">
            <summary>Задает stub AppDomainManager.CreateDomain(String friendlyName, Evidence securityInfo, AppDomainSetup appDomainInfo)</summary>
        </member>
        <member name="F:System.Fakes.StubAppDomainManager.EntryAssemblyGet">
            <summary>Задает stub AppDomainManager.get_EntryAssembly()</summary>
        </member>
        <member name="F:System.Fakes.StubAppDomainManager.HostSecurityManagerGet">
            <summary>Задает stub AppDomainManager.get_HostSecurityManager()</summary>
        </member>
        <member name="M:System.Fakes.StubAppDomainManager.InitializeNewDomain(System.AppDomainSetup)">
            <summary>Задает заглушка AppDomainManager.InitializeNewDomain(AppDomainSetup appDomainInfo)</summary>
        </member>
        <member name="F:System.Fakes.StubAppDomainManager.InitializeNewDomainAppDomainSetup">
            <summary>Задает stub AppDomainManager.InitializeNewDomain(AppDomainSetup appDomainInfo)</summary>
        </member>
        <member name="M:System.Fakes.StubAppDomainManager.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubAppDomainManager</summary>
        </member>
        <member name="P:System.Fakes.StubAppDomainManager.ApplicationActivator">
            <summary>Задает stub AppDomainManager.get_ApplicationActivator()</summary>
        </member>
        <member name="P:System.Fakes.StubAppDomainManager.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Fakes.StubAppDomainManager.EntryAssembly">
            <summary>Задает stub AppDomainManager.get_EntryAssembly()</summary>
        </member>
        <member name="P:System.Fakes.StubAppDomainManager.HostSecurityManager">
            <summary>Задает stub AppDomainManager.get_HostSecurityManager()</summary>
        </member>
        <member name="P:System.Fakes.StubAppDomainManager.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubAppDomainManager.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Fakes.StubAppDomainUnloadedException">
            <summary>Тип заглушки System.AppDomainUnloadedException</summary>
        </member>
        <member name="M:System.Fakes.StubAppDomainUnloadedException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubAppDomainUnloadedException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubAppDomainUnloadedException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubAppDomainUnloadedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubAppDomainUnloadedException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubAppDomainUnloadedException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Fakes.StubAppDomainUnloadedException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubAppDomainUnloadedException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Fakes.StubAppDomainUnloadedException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.Fakes.StubAppDomainUnloadedException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Fakes.StubAppDomainUnloadedException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Fakes.StubAppDomainUnloadedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubAppDomainUnloadedException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubAppDomainUnloadedException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Fakes.StubAppDomainUnloadedException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Fakes.StubAppDomainUnloadedException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubAppDomainUnloadedException</summary>
        </member>
        <member name="F:System.Fakes.StubAppDomainUnloadedException.MessageGet">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="F:System.Fakes.StubAppDomainUnloadedException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Fakes.StubAppDomainUnloadedException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Fakes.StubAppDomainUnloadedException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Fakes.StubAppDomainUnloadedException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.Fakes.StubAppDomainUnloadedException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="P:System.Fakes.StubAppDomainUnloadedException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Fakes.StubAppDomainUnloadedException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="P:System.Fakes.StubAppDomainUnloadedException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Fakes.StubAppDomainUnloadedException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubAppDomainUnloadedException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubAppDomainUnloadedException.Message">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="P:System.Fakes.StubAppDomainUnloadedException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="P:System.Fakes.StubAppDomainUnloadedException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Fakes.StubApplicationException">
            <summary>Тип заглушки System.ApplicationException</summary>
        </member>
        <member name="M:System.Fakes.StubApplicationException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubApplicationException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubApplicationException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubApplicationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubApplicationException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubApplicationException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Fakes.StubApplicationException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubApplicationException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Fakes.StubApplicationException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.Fakes.StubApplicationException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Fakes.StubApplicationException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Fakes.StubApplicationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubApplicationException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubApplicationException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Fakes.StubApplicationException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Fakes.StubApplicationException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubApplicationException</summary>
        </member>
        <member name="F:System.Fakes.StubApplicationException.MessageGet">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="F:System.Fakes.StubApplicationException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Fakes.StubApplicationException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Fakes.StubApplicationException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Fakes.StubApplicationException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.Fakes.StubApplicationException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="P:System.Fakes.StubApplicationException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Fakes.StubApplicationException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="P:System.Fakes.StubApplicationException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Fakes.StubApplicationException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubApplicationException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubApplicationException.Message">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="P:System.Fakes.StubApplicationException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="P:System.Fakes.StubApplicationException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Fakes.StubArgumentException">
            <summary>Тип заглушки System.ArgumentException</summary>
        </member>
        <member name="M:System.Fakes.StubArgumentException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubArgumentException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubArgumentException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubArgumentException.#ctor(System.String,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubArgumentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubArgumentException.#ctor(System.String,System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubArgumentException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubArgumentException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Fakes.StubArgumentException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubArgumentException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Fakes.StubArgumentException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.Fakes.StubArgumentException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Fakes.StubArgumentException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Fakes.StubArgumentException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка ArgumentException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubArgumentException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub ArgumentException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubArgumentException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Fakes.StubArgumentException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Fakes.StubArgumentException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubArgumentException</summary>
        </member>
        <member name="F:System.Fakes.StubArgumentException.MessageGet">
            <summary>Задает stub ArgumentException.get_Message()</summary>
        </member>
        <member name="F:System.Fakes.StubArgumentException.ParamNameGet">
            <summary>Задает stub ArgumentException.get_ParamName()</summary>
        </member>
        <member name="F:System.Fakes.StubArgumentException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Fakes.StubArgumentException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Fakes.StubArgumentException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Fakes.StubArgumentException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.Fakes.StubArgumentException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="P:System.Fakes.StubArgumentException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Fakes.StubArgumentException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="P:System.Fakes.StubArgumentException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Fakes.StubArgumentException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubArgumentException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubArgumentException.Message">
            <summary>Задает stub ArgumentException.get_Message()</summary>
        </member>
        <member name="P:System.Fakes.StubArgumentException.ParamName">
            <summary>Задает stub ArgumentException.get_ParamName()</summary>
        </member>
        <member name="P:System.Fakes.StubArgumentException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="P:System.Fakes.StubArgumentException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Fakes.StubArgumentNullException">
            <summary>Тип заглушки System.ArgumentNullException</summary>
        </member>
        <member name="M:System.Fakes.StubArgumentNullException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubArgumentNullException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubArgumentNullException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubArgumentNullException.#ctor(System.String,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubArgumentNullException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubArgumentNullException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubArgumentNullException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Fakes.StubArgumentNullException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubArgumentNullException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Fakes.StubArgumentNullException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.Fakes.StubArgumentNullException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Fakes.StubArgumentNullException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Fakes.StubArgumentNullException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка ArgumentException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubArgumentNullException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub ArgumentException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubArgumentNullException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Fakes.StubArgumentNullException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Fakes.StubArgumentNullException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubArgumentNullException</summary>
        </member>
        <member name="F:System.Fakes.StubArgumentNullException.MessageGet">
            <summary>Задает stub ArgumentException.get_Message()</summary>
        </member>
        <member name="F:System.Fakes.StubArgumentNullException.ParamNameGet">
            <summary>Задает stub ArgumentException.get_ParamName()</summary>
        </member>
        <member name="F:System.Fakes.StubArgumentNullException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Fakes.StubArgumentNullException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Fakes.StubArgumentNullException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Fakes.StubArgumentNullException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.Fakes.StubArgumentNullException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="P:System.Fakes.StubArgumentNullException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Fakes.StubArgumentNullException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="P:System.Fakes.StubArgumentNullException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Fakes.StubArgumentNullException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubArgumentNullException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubArgumentNullException.Message">
            <summary>Задает stub ArgumentException.get_Message()</summary>
        </member>
        <member name="P:System.Fakes.StubArgumentNullException.ParamName">
            <summary>Задает stub ArgumentException.get_ParamName()</summary>
        </member>
        <member name="P:System.Fakes.StubArgumentNullException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="P:System.Fakes.StubArgumentNullException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Fakes.StubArgumentOutOfRangeException">
            <summary>Тип заглушки System.ArgumentOutOfRangeException</summary>
        </member>
        <member name="M:System.Fakes.StubArgumentOutOfRangeException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubArgumentOutOfRangeException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubArgumentOutOfRangeException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubArgumentOutOfRangeException.#ctor(System.String,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubArgumentOutOfRangeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubArgumentOutOfRangeException.#ctor(System.String,System.Object,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="F:System.Fakes.StubArgumentOutOfRangeException.ActualValueGet">
            <summary>Задает stub ArgumentOutOfRangeException.get_ActualValue()</summary>
        </member>
        <member name="M:System.Fakes.StubArgumentOutOfRangeException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubArgumentOutOfRangeException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Fakes.StubArgumentOutOfRangeException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubArgumentOutOfRangeException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Fakes.StubArgumentOutOfRangeException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.Fakes.StubArgumentOutOfRangeException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Fakes.StubArgumentOutOfRangeException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Fakes.StubArgumentOutOfRangeException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка ArgumentOutOfRangeException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubArgumentOutOfRangeException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub ArgumentOutOfRangeException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubArgumentOutOfRangeException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Fakes.StubArgumentOutOfRangeException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Fakes.StubArgumentOutOfRangeException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubArgumentOutOfRangeException</summary>
        </member>
        <member name="F:System.Fakes.StubArgumentOutOfRangeException.MessageGet">
            <summary>Задает stub ArgumentOutOfRangeException.get_Message()</summary>
        </member>
        <member name="F:System.Fakes.StubArgumentOutOfRangeException.ParamNameGet">
            <summary>Задает stub ArgumentException.get_ParamName()</summary>
        </member>
        <member name="F:System.Fakes.StubArgumentOutOfRangeException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Fakes.StubArgumentOutOfRangeException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Fakes.StubArgumentOutOfRangeException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Fakes.StubArgumentOutOfRangeException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.Fakes.StubArgumentOutOfRangeException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="P:System.Fakes.StubArgumentOutOfRangeException.ActualValue">
            <summary>Задает stub ArgumentOutOfRangeException.get_ActualValue()</summary>
        </member>
        <member name="P:System.Fakes.StubArgumentOutOfRangeException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Fakes.StubArgumentOutOfRangeException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="P:System.Fakes.StubArgumentOutOfRangeException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Fakes.StubArgumentOutOfRangeException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubArgumentOutOfRangeException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubArgumentOutOfRangeException.Message">
            <summary>Задает stub ArgumentOutOfRangeException.get_Message()</summary>
        </member>
        <member name="P:System.Fakes.StubArgumentOutOfRangeException.ParamName">
            <summary>Задает stub ArgumentException.get_ParamName()</summary>
        </member>
        <member name="P:System.Fakes.StubArgumentOutOfRangeException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="P:System.Fakes.StubArgumentOutOfRangeException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Fakes.StubArithmeticException">
            <summary>Тип заглушки System.ArithmeticException</summary>
        </member>
        <member name="M:System.Fakes.StubArithmeticException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubArithmeticException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubArithmeticException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubArithmeticException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubArithmeticException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubArithmeticException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Fakes.StubArithmeticException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubArithmeticException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Fakes.StubArithmeticException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.Fakes.StubArithmeticException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Fakes.StubArithmeticException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Fakes.StubArithmeticException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubArithmeticException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubArithmeticException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Fakes.StubArithmeticException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Fakes.StubArithmeticException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubArithmeticException</summary>
        </member>
        <member name="F:System.Fakes.StubArithmeticException.MessageGet">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="F:System.Fakes.StubArithmeticException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Fakes.StubArithmeticException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Fakes.StubArithmeticException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Fakes.StubArithmeticException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.Fakes.StubArithmeticException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="P:System.Fakes.StubArithmeticException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Fakes.StubArithmeticException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="P:System.Fakes.StubArithmeticException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Fakes.StubArithmeticException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubArithmeticException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubArithmeticException.Message">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="P:System.Fakes.StubArithmeticException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="P:System.Fakes.StubArithmeticException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Fakes.StubArrayTypeMismatchException">
            <summary>Тип заглушки System.ArrayTypeMismatchException</summary>
        </member>
        <member name="M:System.Fakes.StubArrayTypeMismatchException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubArrayTypeMismatchException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubArrayTypeMismatchException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubArrayTypeMismatchException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubArrayTypeMismatchException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubArrayTypeMismatchException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Fakes.StubArrayTypeMismatchException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubArrayTypeMismatchException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Fakes.StubArrayTypeMismatchException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.Fakes.StubArrayTypeMismatchException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Fakes.StubArrayTypeMismatchException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Fakes.StubArrayTypeMismatchException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubArrayTypeMismatchException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubArrayTypeMismatchException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Fakes.StubArrayTypeMismatchException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Fakes.StubArrayTypeMismatchException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubArrayTypeMismatchException</summary>
        </member>
        <member name="F:System.Fakes.StubArrayTypeMismatchException.MessageGet">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="F:System.Fakes.StubArrayTypeMismatchException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Fakes.StubArrayTypeMismatchException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Fakes.StubArrayTypeMismatchException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Fakes.StubArrayTypeMismatchException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.Fakes.StubArrayTypeMismatchException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="P:System.Fakes.StubArrayTypeMismatchException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Fakes.StubArrayTypeMismatchException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="P:System.Fakes.StubArrayTypeMismatchException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Fakes.StubArrayTypeMismatchException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubArrayTypeMismatchException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubArrayTypeMismatchException.Message">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="P:System.Fakes.StubArrayTypeMismatchException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="P:System.Fakes.StubArrayTypeMismatchException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Fakes.StubAssemblyLoadEventArgs">
            <summary>Тип заглушки System.AssemblyLoadEventArgs</summary>
        </member>
        <member name="M:System.Fakes.StubAssemblyLoadEventArgs.#ctor(System.Reflection.Assembly)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubAssemblyLoadEventArgs.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubAssemblyLoadEventArgs</summary>
        </member>
        <member name="P:System.Fakes.StubAssemblyLoadEventArgs.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Fakes.StubAssemblyLoadEventArgs.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubAssemblyLoadEventArgs.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Fakes.StubAttribute">
            <summary>Тип заглушки System.Attribute</summary>
        </member>
        <member name="M:System.Fakes.StubAttribute.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubAttribute.Equals(System.Object)">
            <summary>Задает заглушка Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:System.Fakes.StubAttribute.EqualsObject">
            <summary>Задает stub Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:System.Fakes.StubAttribute.GetHashCode">
            <summary>Задает заглушка Attribute.GetHashCode()</summary>
        </member>
        <member name="F:System.Fakes.StubAttribute.GetHashCode01">
            <summary>Задает stub Attribute.GetHashCode()</summary>
        </member>
        <member name="M:System.Fakes.StubAttribute.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubAttribute</summary>
        </member>
        <member name="M:System.Fakes.StubAttribute.IsDefaultAttribute">
            <summary>Задает заглушка Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:System.Fakes.StubAttribute.IsDefaultAttribute01">
            <summary>Задает stub Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:System.Fakes.StubAttribute.Match(System.Object)">
            <summary>Задает заглушка Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.Fakes.StubAttribute.MatchObject">
            <summary>Задает stub Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.Fakes.StubAttribute.TypeIdGet">
            <summary>Задает stub Attribute.get_TypeId()</summary>
        </member>
        <member name="P:System.Fakes.StubAttribute.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Fakes.StubAttribute.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubAttribute.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubAttribute.TypeId">
            <summary>Задает stub Attribute.get_TypeId()</summary>
        </member>
        <member name="T:System.Fakes.StubBadImageFormatException">
            <summary>Тип заглушки System.BadImageFormatException</summary>
        </member>
        <member name="M:System.Fakes.StubBadImageFormatException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubBadImageFormatException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubBadImageFormatException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubBadImageFormatException.#ctor(System.String,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubBadImageFormatException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubBadImageFormatException.#ctor(System.String,System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubBadImageFormatException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubBadImageFormatException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Fakes.StubBadImageFormatException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubBadImageFormatException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Fakes.StubBadImageFormatException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.Fakes.StubBadImageFormatException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Fakes.StubBadImageFormatException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Fakes.StubBadImageFormatException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка BadImageFormatException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubBadImageFormatException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub BadImageFormatException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubBadImageFormatException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Fakes.StubBadImageFormatException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Fakes.StubBadImageFormatException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubBadImageFormatException</summary>
        </member>
        <member name="F:System.Fakes.StubBadImageFormatException.MessageGet">
            <summary>Задает stub BadImageFormatException.get_Message()</summary>
        </member>
        <member name="F:System.Fakes.StubBadImageFormatException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Fakes.StubBadImageFormatException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Fakes.StubBadImageFormatException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Fakes.StubBadImageFormatException.ToString">
            <summary>Задает заглушка BadImageFormatException.ToString()</summary>
        </member>
        <member name="F:System.Fakes.StubBadImageFormatException.ToString01">
            <summary>Задает stub BadImageFormatException.ToString()</summary>
        </member>
        <member name="P:System.Fakes.StubBadImageFormatException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Fakes.StubBadImageFormatException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="P:System.Fakes.StubBadImageFormatException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Fakes.StubBadImageFormatException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubBadImageFormatException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubBadImageFormatException.Message">
            <summary>Задает stub BadImageFormatException.get_Message()</summary>
        </member>
        <member name="P:System.Fakes.StubBadImageFormatException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="P:System.Fakes.StubBadImageFormatException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Fakes.StubCannotUnloadAppDomainException">
            <summary>Тип заглушки System.CannotUnloadAppDomainException</summary>
        </member>
        <member name="M:System.Fakes.StubCannotUnloadAppDomainException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubCannotUnloadAppDomainException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubCannotUnloadAppDomainException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubCannotUnloadAppDomainException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubCannotUnloadAppDomainException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubCannotUnloadAppDomainException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Fakes.StubCannotUnloadAppDomainException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubCannotUnloadAppDomainException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Fakes.StubCannotUnloadAppDomainException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.Fakes.StubCannotUnloadAppDomainException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Fakes.StubCannotUnloadAppDomainException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Fakes.StubCannotUnloadAppDomainException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubCannotUnloadAppDomainException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubCannotUnloadAppDomainException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Fakes.StubCannotUnloadAppDomainException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Fakes.StubCannotUnloadAppDomainException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCannotUnloadAppDomainException</summary>
        </member>
        <member name="F:System.Fakes.StubCannotUnloadAppDomainException.MessageGet">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="F:System.Fakes.StubCannotUnloadAppDomainException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Fakes.StubCannotUnloadAppDomainException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Fakes.StubCannotUnloadAppDomainException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Fakes.StubCannotUnloadAppDomainException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.Fakes.StubCannotUnloadAppDomainException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="P:System.Fakes.StubCannotUnloadAppDomainException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Fakes.StubCannotUnloadAppDomainException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="P:System.Fakes.StubCannotUnloadAppDomainException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Fakes.StubCannotUnloadAppDomainException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubCannotUnloadAppDomainException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubCannotUnloadAppDomainException.Message">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="P:System.Fakes.StubCannotUnloadAppDomainException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="P:System.Fakes.StubCannotUnloadAppDomainException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Fakes.StubContextBoundObject">
            <summary>Тип заглушки System.ContextBoundObject</summary>
        </member>
        <member name="M:System.Fakes.StubContextBoundObject.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubContextBoundObject.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubContextBoundObject</summary>
        </member>
        <member name="P:System.Fakes.StubContextBoundObject.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Fakes.StubContextBoundObject.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubContextBoundObject.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Fakes.StubContextMarshalException">
            <summary>Тип заглушки System.ContextMarshalException</summary>
        </member>
        <member name="M:System.Fakes.StubContextMarshalException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubContextMarshalException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubContextMarshalException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubContextMarshalException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubContextMarshalException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubContextMarshalException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Fakes.StubContextMarshalException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubContextMarshalException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Fakes.StubContextMarshalException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.Fakes.StubContextMarshalException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Fakes.StubContextMarshalException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Fakes.StubContextMarshalException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubContextMarshalException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubContextMarshalException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Fakes.StubContextMarshalException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Fakes.StubContextMarshalException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubContextMarshalException</summary>
        </member>
        <member name="F:System.Fakes.StubContextMarshalException.MessageGet">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="F:System.Fakes.StubContextMarshalException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Fakes.StubContextMarshalException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Fakes.StubContextMarshalException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Fakes.StubContextMarshalException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.Fakes.StubContextMarshalException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="P:System.Fakes.StubContextMarshalException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Fakes.StubContextMarshalException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="P:System.Fakes.StubContextMarshalException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Fakes.StubContextMarshalException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubContextMarshalException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubContextMarshalException.Message">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="P:System.Fakes.StubContextMarshalException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="P:System.Fakes.StubContextMarshalException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Fakes.StubContextStaticAttribute">
            <summary>Тип заглушки System.ContextStaticAttribute</summary>
        </member>
        <member name="M:System.Fakes.StubContextStaticAttribute.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubContextStaticAttribute.Equals(System.Object)">
            <summary>Задает заглушка Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:System.Fakes.StubContextStaticAttribute.EqualsObject">
            <summary>Задает stub Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:System.Fakes.StubContextStaticAttribute.GetHashCode">
            <summary>Задает заглушка Attribute.GetHashCode()</summary>
        </member>
        <member name="F:System.Fakes.StubContextStaticAttribute.GetHashCode01">
            <summary>Задает stub Attribute.GetHashCode()</summary>
        </member>
        <member name="M:System.Fakes.StubContextStaticAttribute.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubContextStaticAttribute</summary>
        </member>
        <member name="M:System.Fakes.StubContextStaticAttribute.IsDefaultAttribute">
            <summary>Задает заглушка Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:System.Fakes.StubContextStaticAttribute.IsDefaultAttribute01">
            <summary>Задает stub Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:System.Fakes.StubContextStaticAttribute.Match(System.Object)">
            <summary>Задает заглушка Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.Fakes.StubContextStaticAttribute.MatchObject">
            <summary>Задает stub Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.Fakes.StubContextStaticAttribute.TypeIdGet">
            <summary>Задает stub Attribute.get_TypeId()</summary>
        </member>
        <member name="P:System.Fakes.StubContextStaticAttribute.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Fakes.StubContextStaticAttribute.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubContextStaticAttribute.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubContextStaticAttribute.TypeId">
            <summary>Задает stub Attribute.get_TypeId()</summary>
        </member>
        <member name="T:System.Fakes.StubDivideByZeroException">
            <summary>Тип заглушки System.DivideByZeroException</summary>
        </member>
        <member name="M:System.Fakes.StubDivideByZeroException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubDivideByZeroException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubDivideByZeroException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubDivideByZeroException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubDivideByZeroException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubDivideByZeroException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Fakes.StubDivideByZeroException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubDivideByZeroException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Fakes.StubDivideByZeroException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.Fakes.StubDivideByZeroException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Fakes.StubDivideByZeroException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Fakes.StubDivideByZeroException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubDivideByZeroException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubDivideByZeroException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Fakes.StubDivideByZeroException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Fakes.StubDivideByZeroException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubDivideByZeroException</summary>
        </member>
        <member name="F:System.Fakes.StubDivideByZeroException.MessageGet">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="F:System.Fakes.StubDivideByZeroException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Fakes.StubDivideByZeroException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Fakes.StubDivideByZeroException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Fakes.StubDivideByZeroException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.Fakes.StubDivideByZeroException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="P:System.Fakes.StubDivideByZeroException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Fakes.StubDivideByZeroException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="P:System.Fakes.StubDivideByZeroException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Fakes.StubDivideByZeroException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubDivideByZeroException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubDivideByZeroException.Message">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="P:System.Fakes.StubDivideByZeroException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="P:System.Fakes.StubDivideByZeroException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Fakes.StubDllNotFoundException">
            <summary>Тип заглушки System.DllNotFoundException</summary>
        </member>
        <member name="M:System.Fakes.StubDllNotFoundException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubDllNotFoundException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubDllNotFoundException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubDllNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubDllNotFoundException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubDllNotFoundException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Fakes.StubDllNotFoundException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubDllNotFoundException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Fakes.StubDllNotFoundException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.Fakes.StubDllNotFoundException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Fakes.StubDllNotFoundException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Fakes.StubDllNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка TypeLoadException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubDllNotFoundException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub TypeLoadException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubDllNotFoundException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Fakes.StubDllNotFoundException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Fakes.StubDllNotFoundException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubDllNotFoundException</summary>
        </member>
        <member name="F:System.Fakes.StubDllNotFoundException.MessageGet">
            <summary>Задает stub TypeLoadException.get_Message()</summary>
        </member>
        <member name="F:System.Fakes.StubDllNotFoundException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Fakes.StubDllNotFoundException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Fakes.StubDllNotFoundException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Fakes.StubDllNotFoundException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.Fakes.StubDllNotFoundException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="P:System.Fakes.StubDllNotFoundException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Fakes.StubDllNotFoundException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="P:System.Fakes.StubDllNotFoundException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Fakes.StubDllNotFoundException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubDllNotFoundException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubDllNotFoundException.Message">
            <summary>Задает stub TypeLoadException.get_Message()</summary>
        </member>
        <member name="P:System.Fakes.StubDllNotFoundException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="P:System.Fakes.StubDllNotFoundException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Fakes.StubDuplicateWaitObjectException">
            <summary>Тип заглушки System.DuplicateWaitObjectException</summary>
        </member>
        <member name="M:System.Fakes.StubDuplicateWaitObjectException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubDuplicateWaitObjectException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubDuplicateWaitObjectException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubDuplicateWaitObjectException.#ctor(System.String,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubDuplicateWaitObjectException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubDuplicateWaitObjectException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubDuplicateWaitObjectException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Fakes.StubDuplicateWaitObjectException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubDuplicateWaitObjectException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Fakes.StubDuplicateWaitObjectException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.Fakes.StubDuplicateWaitObjectException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Fakes.StubDuplicateWaitObjectException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Fakes.StubDuplicateWaitObjectException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка ArgumentException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubDuplicateWaitObjectException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub ArgumentException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubDuplicateWaitObjectException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Fakes.StubDuplicateWaitObjectException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Fakes.StubDuplicateWaitObjectException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubDuplicateWaitObjectException</summary>
        </member>
        <member name="F:System.Fakes.StubDuplicateWaitObjectException.MessageGet">
            <summary>Задает stub ArgumentException.get_Message()</summary>
        </member>
        <member name="F:System.Fakes.StubDuplicateWaitObjectException.ParamNameGet">
            <summary>Задает stub ArgumentException.get_ParamName()</summary>
        </member>
        <member name="F:System.Fakes.StubDuplicateWaitObjectException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Fakes.StubDuplicateWaitObjectException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Fakes.StubDuplicateWaitObjectException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Fakes.StubDuplicateWaitObjectException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.Fakes.StubDuplicateWaitObjectException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="P:System.Fakes.StubDuplicateWaitObjectException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Fakes.StubDuplicateWaitObjectException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="P:System.Fakes.StubDuplicateWaitObjectException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Fakes.StubDuplicateWaitObjectException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubDuplicateWaitObjectException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubDuplicateWaitObjectException.Message">
            <summary>Задает stub ArgumentException.get_Message()</summary>
        </member>
        <member name="P:System.Fakes.StubDuplicateWaitObjectException.ParamName">
            <summary>Задает stub ArgumentException.get_ParamName()</summary>
        </member>
        <member name="P:System.Fakes.StubDuplicateWaitObjectException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="P:System.Fakes.StubDuplicateWaitObjectException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Fakes.StubEntryPointNotFoundException">
            <summary>Тип заглушки System.EntryPointNotFoundException</summary>
        </member>
        <member name="M:System.Fakes.StubEntryPointNotFoundException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubEntryPointNotFoundException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubEntryPointNotFoundException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubEntryPointNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubEntryPointNotFoundException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubEntryPointNotFoundException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Fakes.StubEntryPointNotFoundException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubEntryPointNotFoundException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Fakes.StubEntryPointNotFoundException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.Fakes.StubEntryPointNotFoundException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Fakes.StubEntryPointNotFoundException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Fakes.StubEntryPointNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка TypeLoadException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubEntryPointNotFoundException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub TypeLoadException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubEntryPointNotFoundException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Fakes.StubEntryPointNotFoundException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Fakes.StubEntryPointNotFoundException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubEntryPointNotFoundException</summary>
        </member>
        <member name="F:System.Fakes.StubEntryPointNotFoundException.MessageGet">
            <summary>Задает stub TypeLoadException.get_Message()</summary>
        </member>
        <member name="F:System.Fakes.StubEntryPointNotFoundException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Fakes.StubEntryPointNotFoundException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Fakes.StubEntryPointNotFoundException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Fakes.StubEntryPointNotFoundException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.Fakes.StubEntryPointNotFoundException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="P:System.Fakes.StubEntryPointNotFoundException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Fakes.StubEntryPointNotFoundException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="P:System.Fakes.StubEntryPointNotFoundException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Fakes.StubEntryPointNotFoundException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubEntryPointNotFoundException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubEntryPointNotFoundException.Message">
            <summary>Задает stub TypeLoadException.get_Message()</summary>
        </member>
        <member name="P:System.Fakes.StubEntryPointNotFoundException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="P:System.Fakes.StubEntryPointNotFoundException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Fakes.StubEventArgs">
            <summary>Тип заглушки System.EventArgs</summary>
        </member>
        <member name="M:System.Fakes.StubEventArgs.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubEventArgs.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubEventArgs</summary>
        </member>
        <member name="P:System.Fakes.StubEventArgs.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Fakes.StubEventArgs.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubEventArgs.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Fakes.StubException">
            <summary>Тип заглушки System.Exception</summary>
        </member>
        <member name="M:System.Fakes.StubException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Fakes.StubException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Fakes.StubException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.Fakes.StubException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Fakes.StubException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Fakes.StubException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Fakes.StubException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Fakes.StubException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubException</summary>
        </member>
        <member name="F:System.Fakes.StubException.MessageGet">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="F:System.Fakes.StubException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Fakes.StubException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Fakes.StubException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Fakes.StubException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.Fakes.StubException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="P:System.Fakes.StubException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Fakes.StubException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="P:System.Fakes.StubException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Fakes.StubException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubException.Message">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="P:System.Fakes.StubException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="P:System.Fakes.StubException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Fakes.StubFieldAccessException">
            <summary>Тип заглушки System.FieldAccessException</summary>
        </member>
        <member name="M:System.Fakes.StubFieldAccessException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubFieldAccessException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubFieldAccessException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubFieldAccessException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubFieldAccessException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubFieldAccessException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Fakes.StubFieldAccessException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubFieldAccessException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Fakes.StubFieldAccessException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.Fakes.StubFieldAccessException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Fakes.StubFieldAccessException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Fakes.StubFieldAccessException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubFieldAccessException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubFieldAccessException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Fakes.StubFieldAccessException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Fakes.StubFieldAccessException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubFieldAccessException</summary>
        </member>
        <member name="F:System.Fakes.StubFieldAccessException.MessageGet">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="F:System.Fakes.StubFieldAccessException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Fakes.StubFieldAccessException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Fakes.StubFieldAccessException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Fakes.StubFieldAccessException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.Fakes.StubFieldAccessException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="P:System.Fakes.StubFieldAccessException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Fakes.StubFieldAccessException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="P:System.Fakes.StubFieldAccessException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Fakes.StubFieldAccessException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubFieldAccessException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubFieldAccessException.Message">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="P:System.Fakes.StubFieldAccessException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="P:System.Fakes.StubFieldAccessException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Fakes.StubFlagsAttribute">
            <summary>Тип заглушки System.FlagsAttribute</summary>
        </member>
        <member name="M:System.Fakes.StubFlagsAttribute.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubFlagsAttribute.Equals(System.Object)">
            <summary>Задает заглушка Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:System.Fakes.StubFlagsAttribute.EqualsObject">
            <summary>Задает stub Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:System.Fakes.StubFlagsAttribute.GetHashCode">
            <summary>Задает заглушка Attribute.GetHashCode()</summary>
        </member>
        <member name="F:System.Fakes.StubFlagsAttribute.GetHashCode01">
            <summary>Задает stub Attribute.GetHashCode()</summary>
        </member>
        <member name="M:System.Fakes.StubFlagsAttribute.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubFlagsAttribute</summary>
        </member>
        <member name="M:System.Fakes.StubFlagsAttribute.IsDefaultAttribute">
            <summary>Задает заглушка Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:System.Fakes.StubFlagsAttribute.IsDefaultAttribute01">
            <summary>Задает stub Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:System.Fakes.StubFlagsAttribute.Match(System.Object)">
            <summary>Задает заглушка Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.Fakes.StubFlagsAttribute.MatchObject">
            <summary>Задает stub Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.Fakes.StubFlagsAttribute.TypeIdGet">
            <summary>Задает stub Attribute.get_TypeId()</summary>
        </member>
        <member name="P:System.Fakes.StubFlagsAttribute.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Fakes.StubFlagsAttribute.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubFlagsAttribute.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubFlagsAttribute.TypeId">
            <summary>Задает stub Attribute.get_TypeId()</summary>
        </member>
        <member name="T:System.Fakes.StubFormatException">
            <summary>Тип заглушки System.FormatException</summary>
        </member>
        <member name="M:System.Fakes.StubFormatException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubFormatException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubFormatException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubFormatException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubFormatException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubFormatException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Fakes.StubFormatException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubFormatException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Fakes.StubFormatException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.Fakes.StubFormatException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Fakes.StubFormatException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Fakes.StubFormatException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubFormatException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubFormatException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Fakes.StubFormatException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Fakes.StubFormatException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubFormatException</summary>
        </member>
        <member name="F:System.Fakes.StubFormatException.MessageGet">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="F:System.Fakes.StubFormatException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Fakes.StubFormatException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Fakes.StubFormatException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Fakes.StubFormatException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.Fakes.StubFormatException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="P:System.Fakes.StubFormatException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Fakes.StubFormatException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="P:System.Fakes.StubFormatException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Fakes.StubFormatException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubFormatException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubFormatException.Message">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="P:System.Fakes.StubFormatException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="P:System.Fakes.StubFormatException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Fakes.StubIAppDomainSetup">
            <summary>Тип заглушки System.IAppDomainSetup</summary>
        </member>
        <member name="M:System.Fakes.StubIAppDomainSetup.#ctor">
            <summary>Инициализирует новый экземпляр type StubIAppDomainSetup</summary>
        </member>
        <member name="F:System.Fakes.StubIAppDomainSetup.ApplicationBaseGet">
            <summary>Задает stub IAppDomainSetup.get_ApplicationBase()</summary>
        </member>
        <member name="F:System.Fakes.StubIAppDomainSetup.ApplicationBaseSetString">
            <summary>Задает stub IAppDomainSetup.set_ApplicationBase(String value)</summary>
        </member>
        <member name="F:System.Fakes.StubIAppDomainSetup.ApplicationNameGet">
            <summary>Задает stub IAppDomainSetup.get_ApplicationName()</summary>
        </member>
        <member name="F:System.Fakes.StubIAppDomainSetup.ApplicationNameSetString">
            <summary>Задает stub IAppDomainSetup.set_ApplicationName(String value)</summary>
        </member>
        <member name="M:System.Fakes.StubIAppDomainSetup.AttachBackingFieldToApplicationBase">
            <summary>Присоединение делегатов для эмуляции StubIAppDomainSetup.ApplicationBase как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Fakes.StubIAppDomainSetup.AttachBackingFieldToApplicationName">
            <summary>Присоединение делегатов для эмуляции StubIAppDomainSetup.ApplicationName как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Fakes.StubIAppDomainSetup.AttachBackingFieldToCachePath">
            <summary>Присоединение делегатов для эмуляции StubIAppDomainSetup.CachePath как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Fakes.StubIAppDomainSetup.AttachBackingFieldToConfigurationFile">
            <summary>Присоединение делегатов для эмуляции StubIAppDomainSetup.ConfigurationFile как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Fakes.StubIAppDomainSetup.AttachBackingFieldToDynamicBase">
            <summary>Присоединение делегатов для эмуляции StubIAppDomainSetup.DynamicBase как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Fakes.StubIAppDomainSetup.AttachBackingFieldToLicenseFile">
            <summary>Присоединение делегатов для эмуляции StubIAppDomainSetup.LicenseFile как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Fakes.StubIAppDomainSetup.AttachBackingFieldToPrivateBinPath">
            <summary>Присоединение делегатов для эмуляции StubIAppDomainSetup.PrivateBinPath как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Fakes.StubIAppDomainSetup.AttachBackingFieldToPrivateBinPathProbe">
            <summary>Присоединение делегатов для эмуляции StubIAppDomainSetup.PrivateBinPathProbe как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Fakes.StubIAppDomainSetup.AttachBackingFieldToShadowCopyDirectories">
            <summary>Присоединение делегатов для эмуляции StubIAppDomainSetup.ShadowCopyDirectories как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Fakes.StubIAppDomainSetup.AttachBackingFieldToShadowCopyFiles">
            <summary>Присоединение делегатов для эмуляции StubIAppDomainSetup.ShadowCopyFiles как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Fakes.StubIAppDomainSetup.CachePathGet">
            <summary>Задает stub IAppDomainSetup.get_CachePath()</summary>
        </member>
        <member name="F:System.Fakes.StubIAppDomainSetup.CachePathSetString">
            <summary>Задает stub IAppDomainSetup.set_CachePath(String value)</summary>
        </member>
        <member name="F:System.Fakes.StubIAppDomainSetup.ConfigurationFileGet">
            <summary>Задает stub IAppDomainSetup.get_ConfigurationFile()</summary>
        </member>
        <member name="F:System.Fakes.StubIAppDomainSetup.ConfigurationFileSetString">
            <summary>Задает stub IAppDomainSetup.set_ConfigurationFile(String value)</summary>
        </member>
        <member name="F:System.Fakes.StubIAppDomainSetup.DynamicBaseGet">
            <summary>Задает stub IAppDomainSetup.get_DynamicBase()</summary>
        </member>
        <member name="F:System.Fakes.StubIAppDomainSetup.DynamicBaseSetString">
            <summary>Задает stub IAppDomainSetup.set_DynamicBase(String value)</summary>
        </member>
        <member name="F:System.Fakes.StubIAppDomainSetup.LicenseFileGet">
            <summary>Задает stub IAppDomainSetup.get_LicenseFile()</summary>
        </member>
        <member name="F:System.Fakes.StubIAppDomainSetup.LicenseFileSetString">
            <summary>Задает stub IAppDomainSetup.set_LicenseFile(String value)</summary>
        </member>
        <member name="F:System.Fakes.StubIAppDomainSetup.PrivateBinPathGet">
            <summary>Задает stub IAppDomainSetup.get_PrivateBinPath()</summary>
        </member>
        <member name="F:System.Fakes.StubIAppDomainSetup.PrivateBinPathProbeGet">
            <summary>Задает stub IAppDomainSetup.get_PrivateBinPathProbe()</summary>
        </member>
        <member name="F:System.Fakes.StubIAppDomainSetup.PrivateBinPathProbeSetString">
            <summary>Задает stub IAppDomainSetup.set_PrivateBinPathProbe(String value)</summary>
        </member>
        <member name="F:System.Fakes.StubIAppDomainSetup.PrivateBinPathSetString">
            <summary>Задает stub IAppDomainSetup.set_PrivateBinPath(String value)</summary>
        </member>
        <member name="F:System.Fakes.StubIAppDomainSetup.ShadowCopyDirectoriesGet">
            <summary>Задает stub IAppDomainSetup.get_ShadowCopyDirectories()</summary>
        </member>
        <member name="F:System.Fakes.StubIAppDomainSetup.ShadowCopyDirectoriesSetString">
            <summary>Задает stub IAppDomainSetup.set_ShadowCopyDirectories(String value)</summary>
        </member>
        <member name="F:System.Fakes.StubIAppDomainSetup.ShadowCopyFilesGet">
            <summary>Задает stub IAppDomainSetup.get_ShadowCopyFiles()</summary>
        </member>
        <member name="F:System.Fakes.StubIAppDomainSetup.ShadowCopyFilesSetString">
            <summary>Задает stub IAppDomainSetup.set_ShadowCopyFiles(String value)</summary>
        </member>
        <member name="P:System.Fakes.StubIAppDomainSetup.global::System#IAppDomainSetup#ApplicationBase">
            <summary>Задает stub IAppDomainSetup.get_ApplicationBase()</summary>
        </member>
        <member name="P:System.Fakes.StubIAppDomainSetup.global::System#IAppDomainSetup#ApplicationName">
            <summary>Задает stub IAppDomainSetup.get_ApplicationName()</summary>
        </member>
        <member name="P:System.Fakes.StubIAppDomainSetup.global::System#IAppDomainSetup#CachePath">
            <summary>Задает stub IAppDomainSetup.get_CachePath()</summary>
        </member>
        <member name="P:System.Fakes.StubIAppDomainSetup.global::System#IAppDomainSetup#ConfigurationFile">
            <summary>Задает stub IAppDomainSetup.get_ConfigurationFile()</summary>
        </member>
        <member name="P:System.Fakes.StubIAppDomainSetup.global::System#IAppDomainSetup#DynamicBase">
            <summary>Задает stub IAppDomainSetup.get_DynamicBase()</summary>
        </member>
        <member name="P:System.Fakes.StubIAppDomainSetup.global::System#IAppDomainSetup#LicenseFile">
            <summary>Задает stub IAppDomainSetup.get_LicenseFile()</summary>
        </member>
        <member name="P:System.Fakes.StubIAppDomainSetup.global::System#IAppDomainSetup#PrivateBinPath">
            <summary>Задает stub IAppDomainSetup.get_PrivateBinPath()</summary>
        </member>
        <member name="P:System.Fakes.StubIAppDomainSetup.global::System#IAppDomainSetup#PrivateBinPathProbe">
            <summary>Задает stub IAppDomainSetup.get_PrivateBinPathProbe()</summary>
        </member>
        <member name="P:System.Fakes.StubIAppDomainSetup.global::System#IAppDomainSetup#ShadowCopyDirectories">
            <summary>Задает stub IAppDomainSetup.get_ShadowCopyDirectories()</summary>
        </member>
        <member name="P:System.Fakes.StubIAppDomainSetup.global::System#IAppDomainSetup#ShadowCopyFiles">
            <summary>Задает stub IAppDomainSetup.get_ShadowCopyFiles()</summary>
        </member>
        <member name="T:System.Fakes.StubICloneable">
            <summary>Тип заглушки System.ICloneable</summary>
        </member>
        <member name="M:System.Fakes.StubICloneable.#ctor">
            <summary>Инициализирует новый экземпляр type StubICloneable</summary>
        </member>
        <member name="F:System.Fakes.StubICloneable.Clone">
            <summary>Задает stub ICloneable.Clone()</summary>
        </member>
        <member name="M:System.Fakes.StubICloneable.global::System#ICloneable#Clone">
            <summary>Задает заглушка ICloneable.Clone()</summary>
        </member>
        <member name="T:System.Fakes.StubIComparable">
            <summary>Тип заглушки System.IComparable</summary>
        </member>
        <member name="M:System.Fakes.StubIComparable.#ctor">
            <summary>Инициализирует новый экземпляр type StubIComparable</summary>
        </member>
        <member name="F:System.Fakes.StubIComparable.CompareToObject">
            <summary>Задает stub IComparable.CompareTo(Object obj)</summary>
        </member>
        <member name="M:System.Fakes.StubIComparable.global::System#IComparable#CompareTo(System.Object)">
            <summary>Задает заглушка IComparable.CompareTo(Object obj)</summary>
        </member>
        <member name="T:System.Fakes.StubIComparable`1">
            <summary>Тип заглушки System.IComparable`1</summary>
        </member>
        <member name="M:System.Fakes.StubIComparable`1.#ctor">
            <summary>Инициализирует новый экземпляр type StubIComparable</summary>
        </member>
        <member name="F:System.Fakes.StubIComparable`1.CompareToT0">
            <summary>Задает stub IComparable`1.CompareTo(!0 other)</summary>
        </member>
        <member name="M:System.Fakes.StubIComparable`1.global::System#IComparable{T}#CompareTo(`0)">
            <summary>Задает заглушка IComparable`1.CompareTo(!0 other)</summary>
        </member>
        <member name="T:System.Fakes.StubIConvertible">
            <summary>Тип заглушки System.IConvertible</summary>
        </member>
        <member name="M:System.Fakes.StubIConvertible.#ctor">
            <summary>Инициализирует новый экземпляр type StubIConvertible</summary>
        </member>
        <member name="F:System.Fakes.StubIConvertible.GetTypeCode">
            <summary>Задает stub IConvertible.GetTypeCode()</summary>
        </member>
        <member name="M:System.Fakes.StubIConvertible.global::System#IConvertible#GetTypeCode">
            <summary>Задает заглушка IConvertible.GetTypeCode()</summary>
        </member>
        <member name="M:System.Fakes.StubIConvertible.global::System#IConvertible#ToBoolean(System.IFormatProvider)">
            <summary>Задает заглушка IConvertible.ToBoolean(IFormatProvider provider)</summary>
        </member>
        <member name="M:System.Fakes.StubIConvertible.global::System#IConvertible#ToByte(System.IFormatProvider)">
            <summary>Задает заглушка IConvertible.ToByte(IFormatProvider provider)</summary>
        </member>
        <member name="M:System.Fakes.StubIConvertible.global::System#IConvertible#ToChar(System.IFormatProvider)">
            <summary>Задает заглушка IConvertible.ToChar(IFormatProvider provider)</summary>
        </member>
        <member name="M:System.Fakes.StubIConvertible.global::System#IConvertible#ToDateTime(System.IFormatProvider)">
            <summary>Задает заглушка IConvertible.ToDateTime(IFormatProvider provider)</summary>
        </member>
        <member name="M:System.Fakes.StubIConvertible.global::System#IConvertible#ToDecimal(System.IFormatProvider)">
            <summary>Задает заглушка IConvertible.ToDecimal(IFormatProvider provider)</summary>
        </member>
        <member name="M:System.Fakes.StubIConvertible.global::System#IConvertible#ToDouble(System.IFormatProvider)">
            <summary>Задает заглушка IConvertible.ToDouble(IFormatProvider provider)</summary>
        </member>
        <member name="M:System.Fakes.StubIConvertible.global::System#IConvertible#ToInt16(System.IFormatProvider)">
            <summary>Задает заглушка IConvertible.ToInt16(IFormatProvider provider)</summary>
        </member>
        <member name="M:System.Fakes.StubIConvertible.global::System#IConvertible#ToInt32(System.IFormatProvider)">
            <summary>Задает заглушка IConvertible.ToInt32(IFormatProvider provider)</summary>
        </member>
        <member name="M:System.Fakes.StubIConvertible.global::System#IConvertible#ToInt64(System.IFormatProvider)">
            <summary>Задает заглушка IConvertible.ToInt64(IFormatProvider provider)</summary>
        </member>
        <member name="M:System.Fakes.StubIConvertible.global::System#IConvertible#ToSByte(System.IFormatProvider)">
            <summary>Задает заглушка IConvertible.ToSByte(IFormatProvider provider)</summary>
        </member>
        <member name="M:System.Fakes.StubIConvertible.global::System#IConvertible#ToSingle(System.IFormatProvider)">
            <summary>Задает заглушка IConvertible.ToSingle(IFormatProvider provider)</summary>
        </member>
        <member name="M:System.Fakes.StubIConvertible.global::System#IConvertible#ToString(System.IFormatProvider)">
            <summary>Задает заглушка IConvertible.ToString(IFormatProvider provider)</summary>
        </member>
        <member name="M:System.Fakes.StubIConvertible.global::System#IConvertible#ToType(System.Type,System.IFormatProvider)">
            <summary>Задает заглушка IConvertible.ToType(Type conversionType, IFormatProvider provider)</summary>
        </member>
        <member name="M:System.Fakes.StubIConvertible.global::System#IConvertible#ToUInt16(System.IFormatProvider)">
            <summary>Задает заглушка IConvertible.ToUInt16(IFormatProvider provider)</summary>
        </member>
        <member name="M:System.Fakes.StubIConvertible.global::System#IConvertible#ToUInt32(System.IFormatProvider)">
            <summary>Задает заглушка IConvertible.ToUInt32(IFormatProvider provider)</summary>
        </member>
        <member name="M:System.Fakes.StubIConvertible.global::System#IConvertible#ToUInt64(System.IFormatProvider)">
            <summary>Задает заглушка IConvertible.ToUInt64(IFormatProvider provider)</summary>
        </member>
        <member name="F:System.Fakes.StubIConvertible.ToBooleanIFormatProvider">
            <summary>Задает stub IConvertible.ToBoolean(IFormatProvider provider)</summary>
        </member>
        <member name="F:System.Fakes.StubIConvertible.ToByteIFormatProvider">
            <summary>Задает stub IConvertible.ToByte(IFormatProvider provider)</summary>
        </member>
        <member name="F:System.Fakes.StubIConvertible.ToCharIFormatProvider">
            <summary>Задает stub IConvertible.ToChar(IFormatProvider provider)</summary>
        </member>
        <member name="F:System.Fakes.StubIConvertible.ToDateTimeIFormatProvider">
            <summary>Задает stub IConvertible.ToDateTime(IFormatProvider provider)</summary>
        </member>
        <member name="F:System.Fakes.StubIConvertible.ToDecimalIFormatProvider">
            <summary>Задает stub IConvertible.ToDecimal(IFormatProvider provider)</summary>
        </member>
        <member name="F:System.Fakes.StubIConvertible.ToDoubleIFormatProvider">
            <summary>Задает stub IConvertible.ToDouble(IFormatProvider provider)</summary>
        </member>
        <member name="F:System.Fakes.StubIConvertible.ToInt16IFormatProvider">
            <summary>Задает stub IConvertible.ToInt16(IFormatProvider provider)</summary>
        </member>
        <member name="F:System.Fakes.StubIConvertible.ToInt32IFormatProvider">
            <summary>Задает stub IConvertible.ToInt32(IFormatProvider provider)</summary>
        </member>
        <member name="F:System.Fakes.StubIConvertible.ToInt64IFormatProvider">
            <summary>Задает stub IConvertible.ToInt64(IFormatProvider provider)</summary>
        </member>
        <member name="F:System.Fakes.StubIConvertible.ToSByteIFormatProvider">
            <summary>Задает stub IConvertible.ToSByte(IFormatProvider provider)</summary>
        </member>
        <member name="F:System.Fakes.StubIConvertible.ToSingleIFormatProvider">
            <summary>Задает stub IConvertible.ToSingle(IFormatProvider provider)</summary>
        </member>
        <member name="F:System.Fakes.StubIConvertible.ToStringIFormatProvider">
            <summary>Задает stub IConvertible.ToString(IFormatProvider provider)</summary>
        </member>
        <member name="F:System.Fakes.StubIConvertible.ToTypeTypeIFormatProvider">
            <summary>Задает stub IConvertible.ToType(Type conversionType, IFormatProvider provider)</summary>
        </member>
        <member name="F:System.Fakes.StubIConvertible.ToUInt16IFormatProvider">
            <summary>Задает stub IConvertible.ToUInt16(IFormatProvider provider)</summary>
        </member>
        <member name="F:System.Fakes.StubIConvertible.ToUInt32IFormatProvider">
            <summary>Задает stub IConvertible.ToUInt32(IFormatProvider provider)</summary>
        </member>
        <member name="F:System.Fakes.StubIConvertible.ToUInt64IFormatProvider">
            <summary>Задает stub IConvertible.ToUInt64(IFormatProvider provider)</summary>
        </member>
        <member name="T:System.Fakes.StubICustomFormatter">
            <summary>Тип заглушки System.ICustomFormatter</summary>
        </member>
        <member name="M:System.Fakes.StubICustomFormatter.#ctor">
            <summary>Инициализирует новый экземпляр type StubICustomFormatter</summary>
        </member>
        <member name="F:System.Fakes.StubICustomFormatter.FormatStringObjectIFormatProvider">
            <summary>Задает stub ICustomFormatter.Format(String format, Object arg, IFormatProvider formatProvider)</summary>
        </member>
        <member name="M:System.Fakes.StubICustomFormatter.global::System#ICustomFormatter#Format(System.String,System.Object,System.IFormatProvider)">
            <summary>Задает заглушка ICustomFormatter.Format(String format, Object arg, IFormatProvider formatProvider)</summary>
        </member>
        <member name="T:System.Fakes.StubIDisposable">
            <summary>Тип заглушки System.IDisposable</summary>
        </member>
        <member name="M:System.Fakes.StubIDisposable.#ctor">
            <summary>Инициализирует новый экземпляр type StubIDisposable</summary>
        </member>
        <member name="F:System.Fakes.StubIDisposable.Dispose">
            <summary>Задает stub IDisposable.Dispose()</summary>
        </member>
        <member name="M:System.Fakes.StubIDisposable.global::System#IDisposable#Dispose">
            <summary>Задает заглушка IDisposable.Dispose()</summary>
        </member>
        <member name="T:System.Fakes.StubIEquatable`1">
            <summary>Тип заглушки System.IEquatable`1</summary>
        </member>
        <member name="M:System.Fakes.StubIEquatable`1.#ctor">
            <summary>Инициализирует новый экземпляр type StubIEquatable</summary>
        </member>
        <member name="F:System.Fakes.StubIEquatable`1.EqualsT0">
            <summary>Задает stub IEquatable`1.Equals(!0 other)</summary>
        </member>
        <member name="M:System.Fakes.StubIEquatable`1.global::System#IEquatable{T}#Equals(`0)">
            <summary>Задает заглушка IEquatable`1.Equals(!0 other)</summary>
        </member>
        <member name="T:System.Fakes.StubIFormatProvider">
            <summary>Тип заглушки System.IFormatProvider</summary>
        </member>
        <member name="M:System.Fakes.StubIFormatProvider.#ctor">
            <summary>Инициализирует новый экземпляр type StubIFormatProvider</summary>
        </member>
        <member name="F:System.Fakes.StubIFormatProvider.GetFormatType">
            <summary>Задает stub IFormatProvider.GetFormat(Type formatType)</summary>
        </member>
        <member name="M:System.Fakes.StubIFormatProvider.global::System#IFormatProvider#GetFormat(System.Type)">
            <summary>Задает заглушка IFormatProvider.GetFormat(Type formatType)</summary>
        </member>
        <member name="T:System.Fakes.StubIFormattable">
            <summary>Тип заглушки System.IFormattable</summary>
        </member>
        <member name="M:System.Fakes.StubIFormattable.#ctor">
            <summary>Инициализирует новый экземпляр type StubIFormattable</summary>
        </member>
        <member name="M:System.Fakes.StubIFormattable.global::System#IFormattable#ToString(System.String,System.IFormatProvider)">
            <summary>Задает заглушка IFormattable.ToString(String format, IFormatProvider formatProvider)</summary>
        </member>
        <member name="F:System.Fakes.StubIFormattable.ToStringStringIFormatProvider">
            <summary>Задает stub IFormattable.ToString(String format, IFormatProvider formatProvider)</summary>
        </member>
        <member name="T:System.Fakes.StubIObservable`1">
            <summary>Тип заглушки System.IObservable`1</summary>
        </member>
        <member name="M:System.Fakes.StubIObservable`1.#ctor">
            <summary>Инициализирует новый экземпляр type StubIObservable</summary>
        </member>
        <member name="F:System.Fakes.StubIObservable`1.SubscribeIObserverOfT0">
            <summary>Задает stub IObservable`1.Subscribe(IObserver`1&lt;!0&gt; observer)</summary>
        </member>
        <member name="M:System.Fakes.StubIObservable`1.global::System#IObservable{T}#Subscribe(System.IObserver{`0})">
            <summary>Задает заглушка IObservable`1.Subscribe(IObserver`1&lt;!0&gt; observer)</summary>
        </member>
        <member name="T:System.Fakes.StubIObserver`1">
            <summary>Тип заглушки System.IObserver`1</summary>
        </member>
        <member name="M:System.Fakes.StubIObserver`1.#ctor">
            <summary>Инициализирует новый экземпляр type StubIObserver</summary>
        </member>
        <member name="F:System.Fakes.StubIObserver`1.OnCompleted">
            <summary>Задает stub IObserver`1.OnCompleted()</summary>
        </member>
        <member name="F:System.Fakes.StubIObserver`1.OnErrorException">
            <summary>Задает stub IObserver`1.OnError(Exception error)</summary>
        </member>
        <member name="F:System.Fakes.StubIObserver`1.OnNextT0">
            <summary>Задает stub IObserver`1.OnNext(!0 value)</summary>
        </member>
        <member name="M:System.Fakes.StubIObserver`1.global::System#IObserver{T}#OnCompleted">
            <summary>Задает заглушка IObserver`1.OnCompleted()</summary>
        </member>
        <member name="M:System.Fakes.StubIObserver`1.global::System#IObserver{T}#OnError(System.Exception)">
            <summary>Задает заглушка IObserver`1.OnError(Exception error)</summary>
        </member>
        <member name="M:System.Fakes.StubIObserver`1.global::System#IObserver{T}#OnNext(`0)">
            <summary>Задает заглушка IObserver`1.OnNext(!0 value)</summary>
        </member>
        <member name="T:System.Fakes.StubIServiceProvider">
            <summary>Тип заглушки System.IServiceProvider</summary>
        </member>
        <member name="M:System.Fakes.StubIServiceProvider.#ctor">
            <summary>Инициализирует новый экземпляр type StubIServiceProvider</summary>
        </member>
        <member name="F:System.Fakes.StubIServiceProvider.GetServiceType">
            <summary>Задает stub IServiceProvider.GetService(Type serviceType)</summary>
        </member>
        <member name="M:System.Fakes.StubIServiceProvider.global::System#IServiceProvider#GetService(System.Type)">
            <summary>Задает заглушка IServiceProvider.GetService(Type serviceType)</summary>
        </member>
        <member name="T:System.Fakes.StubInvalidCastException">
            <summary>Тип заглушки System.InvalidCastException</summary>
        </member>
        <member name="M:System.Fakes.StubInvalidCastException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubInvalidCastException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubInvalidCastException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubInvalidCastException.#ctor(System.String,System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubInvalidCastException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubInvalidCastException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubInvalidCastException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Fakes.StubInvalidCastException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubInvalidCastException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Fakes.StubInvalidCastException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.Fakes.StubInvalidCastException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Fakes.StubInvalidCastException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Fakes.StubInvalidCastException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubInvalidCastException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubInvalidCastException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Fakes.StubInvalidCastException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Fakes.StubInvalidCastException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubInvalidCastException</summary>
        </member>
        <member name="F:System.Fakes.StubInvalidCastException.MessageGet">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="F:System.Fakes.StubInvalidCastException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Fakes.StubInvalidCastException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Fakes.StubInvalidCastException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Fakes.StubInvalidCastException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.Fakes.StubInvalidCastException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="P:System.Fakes.StubInvalidCastException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Fakes.StubInvalidCastException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="P:System.Fakes.StubInvalidCastException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Fakes.StubInvalidCastException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubInvalidCastException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubInvalidCastException.Message">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="P:System.Fakes.StubInvalidCastException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="P:System.Fakes.StubInvalidCastException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Fakes.StubInvalidOperationException">
            <summary>Тип заглушки System.InvalidOperationException</summary>
        </member>
        <member name="M:System.Fakes.StubInvalidOperationException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubInvalidOperationException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubInvalidOperationException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubInvalidOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubInvalidOperationException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubInvalidOperationException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Fakes.StubInvalidOperationException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubInvalidOperationException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Fakes.StubInvalidOperationException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.Fakes.StubInvalidOperationException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Fakes.StubInvalidOperationException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Fakes.StubInvalidOperationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubInvalidOperationException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubInvalidOperationException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Fakes.StubInvalidOperationException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Fakes.StubInvalidOperationException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubInvalidOperationException</summary>
        </member>
        <member name="F:System.Fakes.StubInvalidOperationException.MessageGet">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="F:System.Fakes.StubInvalidOperationException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Fakes.StubInvalidOperationException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Fakes.StubInvalidOperationException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Fakes.StubInvalidOperationException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.Fakes.StubInvalidOperationException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="P:System.Fakes.StubInvalidOperationException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Fakes.StubInvalidOperationException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="P:System.Fakes.StubInvalidOperationException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Fakes.StubInvalidOperationException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubInvalidOperationException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubInvalidOperationException.Message">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="P:System.Fakes.StubInvalidOperationException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="P:System.Fakes.StubInvalidOperationException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Fakes.StubInvalidTimeZoneException">
            <summary>Тип заглушки System.InvalidTimeZoneException</summary>
        </member>
        <member name="M:System.Fakes.StubInvalidTimeZoneException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubInvalidTimeZoneException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubInvalidTimeZoneException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubInvalidTimeZoneException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubInvalidTimeZoneException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubInvalidTimeZoneException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Fakes.StubInvalidTimeZoneException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubInvalidTimeZoneException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Fakes.StubInvalidTimeZoneException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.Fakes.StubInvalidTimeZoneException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Fakes.StubInvalidTimeZoneException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Fakes.StubInvalidTimeZoneException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubInvalidTimeZoneException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubInvalidTimeZoneException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Fakes.StubInvalidTimeZoneException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Fakes.StubInvalidTimeZoneException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubInvalidTimeZoneException</summary>
        </member>
        <member name="F:System.Fakes.StubInvalidTimeZoneException.MessageGet">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="F:System.Fakes.StubInvalidTimeZoneException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Fakes.StubInvalidTimeZoneException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Fakes.StubInvalidTimeZoneException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Fakes.StubInvalidTimeZoneException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.Fakes.StubInvalidTimeZoneException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="P:System.Fakes.StubInvalidTimeZoneException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Fakes.StubInvalidTimeZoneException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="P:System.Fakes.StubInvalidTimeZoneException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Fakes.StubInvalidTimeZoneException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubInvalidTimeZoneException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubInvalidTimeZoneException.Message">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="P:System.Fakes.StubInvalidTimeZoneException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="P:System.Fakes.StubInvalidTimeZoneException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Fakes.StubLazy`1">
            <summary>Тип заглушки System.Lazy`1</summary>
        </member>
        <member name="M:System.Fakes.StubLazy`1.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubLazy`1.#ctor(System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubLazy`1.#ctor(System.Func{`0})">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubLazy`1.#ctor(System.Threading.LazyThreadSafetyMode)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubLazy`1.#ctor(System.Func{`0},System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubLazy`1.#ctor(System.Func{`0},System.Threading.LazyThreadSafetyMode)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubLazy`1.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubLazy</summary>
        </member>
        <member name="M:System.Fakes.StubLazy`1.ToString">
            <summary>Задает заглушка Lazy`1.ToString()</summary>
        </member>
        <member name="F:System.Fakes.StubLazy`1.ToString01">
            <summary>Задает stub Lazy`1.ToString()</summary>
        </member>
        <member name="P:System.Fakes.StubLazy`1.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Fakes.StubLazy`1.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubLazy`1.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Fakes.StubMarshalByRefObject">
            <summary>Тип заглушки System.MarshalByRefObject</summary>
        </member>
        <member name="M:System.Fakes.StubMarshalByRefObject.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubMarshalByRefObject.CreateObjRef(System.Type)">
            <summary>Задает заглушка MarshalByRefObject.CreateObjRef(Type requestedType)</summary>
        </member>
        <member name="F:System.Fakes.StubMarshalByRefObject.CreateObjRefType">
            <summary>Задает stub MarshalByRefObject.CreateObjRef(Type requestedType)</summary>
        </member>
        <member name="M:System.Fakes.StubMarshalByRefObject.InitializeLifetimeService">
            <summary>Задает заглушка MarshalByRefObject.InitializeLifetimeService()</summary>
        </member>
        <member name="F:System.Fakes.StubMarshalByRefObject.InitializeLifetimeService01">
            <summary>Задает stub MarshalByRefObject.InitializeLifetimeService()</summary>
        </member>
        <member name="M:System.Fakes.StubMarshalByRefObject.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubMarshalByRefObject</summary>
        </member>
        <member name="P:System.Fakes.StubMarshalByRefObject.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Fakes.StubMarshalByRefObject.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubMarshalByRefObject.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Fakes.StubMemberAccessException">
            <summary>Тип заглушки System.MemberAccessException</summary>
        </member>
        <member name="M:System.Fakes.StubMemberAccessException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubMemberAccessException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubMemberAccessException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubMemberAccessException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubMemberAccessException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubMemberAccessException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Fakes.StubMemberAccessException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubMemberAccessException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Fakes.StubMemberAccessException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.Fakes.StubMemberAccessException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Fakes.StubMemberAccessException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Fakes.StubMemberAccessException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubMemberAccessException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubMemberAccessException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Fakes.StubMemberAccessException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Fakes.StubMemberAccessException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubMemberAccessException</summary>
        </member>
        <member name="F:System.Fakes.StubMemberAccessException.MessageGet">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="F:System.Fakes.StubMemberAccessException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Fakes.StubMemberAccessException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Fakes.StubMemberAccessException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Fakes.StubMemberAccessException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.Fakes.StubMemberAccessException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="P:System.Fakes.StubMemberAccessException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Fakes.StubMemberAccessException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="P:System.Fakes.StubMemberAccessException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Fakes.StubMemberAccessException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubMemberAccessException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubMemberAccessException.Message">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="P:System.Fakes.StubMemberAccessException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="P:System.Fakes.StubMemberAccessException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Fakes.StubMethodAccessException">
            <summary>Тип заглушки System.MethodAccessException</summary>
        </member>
        <member name="M:System.Fakes.StubMethodAccessException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubMethodAccessException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubMethodAccessException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubMethodAccessException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubMethodAccessException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubMethodAccessException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Fakes.StubMethodAccessException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubMethodAccessException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Fakes.StubMethodAccessException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.Fakes.StubMethodAccessException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Fakes.StubMethodAccessException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Fakes.StubMethodAccessException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubMethodAccessException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubMethodAccessException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Fakes.StubMethodAccessException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Fakes.StubMethodAccessException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubMethodAccessException</summary>
        </member>
        <member name="F:System.Fakes.StubMethodAccessException.MessageGet">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="F:System.Fakes.StubMethodAccessException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Fakes.StubMethodAccessException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Fakes.StubMethodAccessException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Fakes.StubMethodAccessException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.Fakes.StubMethodAccessException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="P:System.Fakes.StubMethodAccessException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Fakes.StubMethodAccessException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="P:System.Fakes.StubMethodAccessException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Fakes.StubMethodAccessException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubMethodAccessException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubMethodAccessException.Message">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="P:System.Fakes.StubMethodAccessException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="P:System.Fakes.StubMethodAccessException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Fakes.StubMissingFieldException">
            <summary>Тип заглушки System.MissingFieldException</summary>
        </member>
        <member name="M:System.Fakes.StubMissingFieldException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubMissingFieldException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubMissingFieldException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubMissingFieldException.#ctor(System.String,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubMissingFieldException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubMissingFieldException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubMissingFieldException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Fakes.StubMissingFieldException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubMissingFieldException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Fakes.StubMissingFieldException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.Fakes.StubMissingFieldException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Fakes.StubMissingFieldException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Fakes.StubMissingFieldException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка MissingMemberException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubMissingFieldException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub MissingMemberException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubMissingFieldException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Fakes.StubMissingFieldException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Fakes.StubMissingFieldException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubMissingFieldException</summary>
        </member>
        <member name="F:System.Fakes.StubMissingFieldException.MessageGet">
            <summary>Задает stub MissingFieldException.get_Message()</summary>
        </member>
        <member name="F:System.Fakes.StubMissingFieldException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Fakes.StubMissingFieldException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Fakes.StubMissingFieldException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Fakes.StubMissingFieldException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.Fakes.StubMissingFieldException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="P:System.Fakes.StubMissingFieldException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Fakes.StubMissingFieldException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="P:System.Fakes.StubMissingFieldException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Fakes.StubMissingFieldException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubMissingFieldException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubMissingFieldException.Message">
            <summary>Задает stub MissingFieldException.get_Message()</summary>
        </member>
        <member name="P:System.Fakes.StubMissingFieldException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="P:System.Fakes.StubMissingFieldException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Fakes.StubMissingMemberException">
            <summary>Тип заглушки System.MissingMemberException</summary>
        </member>
        <member name="M:System.Fakes.StubMissingMemberException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubMissingMemberException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubMissingMemberException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubMissingMemberException.#ctor(System.String,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubMissingMemberException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubMissingMemberException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubMissingMemberException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Fakes.StubMissingMemberException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubMissingMemberException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Fakes.StubMissingMemberException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.Fakes.StubMissingMemberException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Fakes.StubMissingMemberException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Fakes.StubMissingMemberException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка MissingMemberException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubMissingMemberException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub MissingMemberException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubMissingMemberException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Fakes.StubMissingMemberException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Fakes.StubMissingMemberException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubMissingMemberException</summary>
        </member>
        <member name="F:System.Fakes.StubMissingMemberException.MessageGet">
            <summary>Задает stub MissingMemberException.get_Message()</summary>
        </member>
        <member name="F:System.Fakes.StubMissingMemberException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Fakes.StubMissingMemberException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Fakes.StubMissingMemberException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Fakes.StubMissingMemberException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.Fakes.StubMissingMemberException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="P:System.Fakes.StubMissingMemberException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Fakes.StubMissingMemberException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="P:System.Fakes.StubMissingMemberException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Fakes.StubMissingMemberException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubMissingMemberException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubMissingMemberException.Message">
            <summary>Задает stub MissingMemberException.get_Message()</summary>
        </member>
        <member name="P:System.Fakes.StubMissingMemberException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="P:System.Fakes.StubMissingMemberException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Fakes.StubMissingMethodException">
            <summary>Тип заглушки System.MissingMethodException</summary>
        </member>
        <member name="M:System.Fakes.StubMissingMethodException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubMissingMethodException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubMissingMethodException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubMissingMethodException.#ctor(System.String,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubMissingMethodException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubMissingMethodException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubMissingMethodException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Fakes.StubMissingMethodException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubMissingMethodException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Fakes.StubMissingMethodException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.Fakes.StubMissingMethodException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Fakes.StubMissingMethodException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Fakes.StubMissingMethodException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка MissingMemberException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubMissingMethodException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub MissingMemberException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubMissingMethodException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Fakes.StubMissingMethodException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Fakes.StubMissingMethodException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubMissingMethodException</summary>
        </member>
        <member name="F:System.Fakes.StubMissingMethodException.MessageGet">
            <summary>Задает stub MissingMethodException.get_Message()</summary>
        </member>
        <member name="F:System.Fakes.StubMissingMethodException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Fakes.StubMissingMethodException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Fakes.StubMissingMethodException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Fakes.StubMissingMethodException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.Fakes.StubMissingMethodException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="P:System.Fakes.StubMissingMethodException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Fakes.StubMissingMethodException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="P:System.Fakes.StubMissingMethodException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Fakes.StubMissingMethodException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubMissingMethodException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubMissingMethodException.Message">
            <summary>Задает stub MissingMethodException.get_Message()</summary>
        </member>
        <member name="P:System.Fakes.StubMissingMethodException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="P:System.Fakes.StubMissingMethodException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Fakes.StubNotFiniteNumberException">
            <summary>Тип заглушки System.NotFiniteNumberException</summary>
        </member>
        <member name="M:System.Fakes.StubNotFiniteNumberException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubNotFiniteNumberException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubNotFiniteNumberException.#ctor(System.Double)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubNotFiniteNumberException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubNotFiniteNumberException.#ctor(System.String,System.Double)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubNotFiniteNumberException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubNotFiniteNumberException.#ctor(System.String,System.Double,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubNotFiniteNumberException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubNotFiniteNumberException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Fakes.StubNotFiniteNumberException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubNotFiniteNumberException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Fakes.StubNotFiniteNumberException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.Fakes.StubNotFiniteNumberException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Fakes.StubNotFiniteNumberException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Fakes.StubNotFiniteNumberException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка NotFiniteNumberException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubNotFiniteNumberException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub NotFiniteNumberException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubNotFiniteNumberException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Fakes.StubNotFiniteNumberException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Fakes.StubNotFiniteNumberException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubNotFiniteNumberException</summary>
        </member>
        <member name="F:System.Fakes.StubNotFiniteNumberException.MessageGet">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="F:System.Fakes.StubNotFiniteNumberException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Fakes.StubNotFiniteNumberException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Fakes.StubNotFiniteNumberException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Fakes.StubNotFiniteNumberException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.Fakes.StubNotFiniteNumberException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="P:System.Fakes.StubNotFiniteNumberException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Fakes.StubNotFiniteNumberException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="P:System.Fakes.StubNotFiniteNumberException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Fakes.StubNotFiniteNumberException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubNotFiniteNumberException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubNotFiniteNumberException.Message">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="P:System.Fakes.StubNotFiniteNumberException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="P:System.Fakes.StubNotFiniteNumberException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Fakes.StubNotImplementedException">
            <summary>Тип заглушки System.NotImplementedException</summary>
        </member>
        <member name="M:System.Fakes.StubNotImplementedException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubNotImplementedException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubNotImplementedException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubNotImplementedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubNotImplementedException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubNotImplementedException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Fakes.StubNotImplementedException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubNotImplementedException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Fakes.StubNotImplementedException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.Fakes.StubNotImplementedException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Fakes.StubNotImplementedException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Fakes.StubNotImplementedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubNotImplementedException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubNotImplementedException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Fakes.StubNotImplementedException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Fakes.StubNotImplementedException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubNotImplementedException</summary>
        </member>
        <member name="F:System.Fakes.StubNotImplementedException.MessageGet">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="F:System.Fakes.StubNotImplementedException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Fakes.StubNotImplementedException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Fakes.StubNotImplementedException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Fakes.StubNotImplementedException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.Fakes.StubNotImplementedException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="P:System.Fakes.StubNotImplementedException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Fakes.StubNotImplementedException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="P:System.Fakes.StubNotImplementedException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Fakes.StubNotImplementedException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubNotImplementedException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubNotImplementedException.Message">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="P:System.Fakes.StubNotImplementedException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="P:System.Fakes.StubNotImplementedException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Fakes.StubNotSupportedException">
            <summary>Тип заглушки System.NotSupportedException</summary>
        </member>
        <member name="M:System.Fakes.StubNotSupportedException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubNotSupportedException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubNotSupportedException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubNotSupportedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubNotSupportedException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubNotSupportedException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Fakes.StubNotSupportedException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubNotSupportedException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Fakes.StubNotSupportedException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.Fakes.StubNotSupportedException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Fakes.StubNotSupportedException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Fakes.StubNotSupportedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubNotSupportedException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubNotSupportedException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Fakes.StubNotSupportedException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Fakes.StubNotSupportedException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubNotSupportedException</summary>
        </member>
        <member name="F:System.Fakes.StubNotSupportedException.MessageGet">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="F:System.Fakes.StubNotSupportedException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Fakes.StubNotSupportedException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Fakes.StubNotSupportedException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Fakes.StubNotSupportedException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.Fakes.StubNotSupportedException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="P:System.Fakes.StubNotSupportedException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Fakes.StubNotSupportedException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="P:System.Fakes.StubNotSupportedException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Fakes.StubNotSupportedException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubNotSupportedException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubNotSupportedException.Message">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="P:System.Fakes.StubNotSupportedException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="P:System.Fakes.StubNotSupportedException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Fakes.StubNullReferenceException">
            <summary>Тип заглушки System.NullReferenceException</summary>
        </member>
        <member name="M:System.Fakes.StubNullReferenceException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubNullReferenceException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubNullReferenceException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubNullReferenceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubNullReferenceException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubNullReferenceException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Fakes.StubNullReferenceException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubNullReferenceException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Fakes.StubNullReferenceException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.Fakes.StubNullReferenceException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Fakes.StubNullReferenceException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Fakes.StubNullReferenceException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubNullReferenceException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubNullReferenceException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Fakes.StubNullReferenceException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Fakes.StubNullReferenceException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubNullReferenceException</summary>
        </member>
        <member name="F:System.Fakes.StubNullReferenceException.MessageGet">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="F:System.Fakes.StubNullReferenceException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Fakes.StubNullReferenceException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Fakes.StubNullReferenceException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Fakes.StubNullReferenceException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.Fakes.StubNullReferenceException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="P:System.Fakes.StubNullReferenceException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Fakes.StubNullReferenceException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="P:System.Fakes.StubNullReferenceException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Fakes.StubNullReferenceException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubNullReferenceException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubNullReferenceException.Message">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="P:System.Fakes.StubNullReferenceException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="P:System.Fakes.StubNullReferenceException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Fakes.StubObject">
            <summary>Тип заглушки System.Object</summary>
        </member>
        <member name="M:System.Fakes.StubObject.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubObject.GetHashCode">
            <summary>Задает заглушка Object.GetHashCode()</summary>
        </member>
        <member name="F:System.Fakes.StubObject.GetHashCode01">
            <summary>Задает stub Object.GetHashCode()</summary>
        </member>
        <member name="M:System.Fakes.StubObject.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubObject</summary>
        </member>
        <member name="M:System.Fakes.StubObject.ToString">
            <summary>Задает заглушка Object.ToString()</summary>
        </member>
        <member name="F:System.Fakes.StubObject.ToString01">
            <summary>Задает stub Object.ToString()</summary>
        </member>
        <member name="P:System.Fakes.StubObject.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Fakes.StubObject.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubObject.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Fakes.StubObjectDisposedException">
            <summary>Тип заглушки System.ObjectDisposedException</summary>
        </member>
        <member name="M:System.Fakes.StubObjectDisposedException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubObjectDisposedException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubObjectDisposedException.#ctor(System.String,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubObjectDisposedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubObjectDisposedException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubObjectDisposedException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Fakes.StubObjectDisposedException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubObjectDisposedException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Fakes.StubObjectDisposedException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.Fakes.StubObjectDisposedException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Fakes.StubObjectDisposedException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Fakes.StubObjectDisposedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка ObjectDisposedException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubObjectDisposedException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub ObjectDisposedException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubObjectDisposedException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Fakes.StubObjectDisposedException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Fakes.StubObjectDisposedException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubObjectDisposedException</summary>
        </member>
        <member name="F:System.Fakes.StubObjectDisposedException.MessageGet">
            <summary>Задает stub ObjectDisposedException.get_Message()</summary>
        </member>
        <member name="F:System.Fakes.StubObjectDisposedException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Fakes.StubObjectDisposedException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Fakes.StubObjectDisposedException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Fakes.StubObjectDisposedException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.Fakes.StubObjectDisposedException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="P:System.Fakes.StubObjectDisposedException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Fakes.StubObjectDisposedException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="P:System.Fakes.StubObjectDisposedException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Fakes.StubObjectDisposedException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubObjectDisposedException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubObjectDisposedException.Message">
            <summary>Задает stub ObjectDisposedException.get_Message()</summary>
        </member>
        <member name="P:System.Fakes.StubObjectDisposedException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="P:System.Fakes.StubObjectDisposedException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Fakes.StubOperationCanceledException">
            <summary>Тип заглушки System.OperationCanceledException</summary>
        </member>
        <member name="M:System.Fakes.StubOperationCanceledException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubOperationCanceledException.#ctor(System.Threading.CancellationToken)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubOperationCanceledException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubOperationCanceledException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubOperationCanceledException.#ctor(System.String,System.Threading.CancellationToken)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubOperationCanceledException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubOperationCanceledException.#ctor(System.String,System.Exception,System.Threading.CancellationToken)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubOperationCanceledException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubOperationCanceledException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Fakes.StubOperationCanceledException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubOperationCanceledException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Fakes.StubOperationCanceledException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.Fakes.StubOperationCanceledException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Fakes.StubOperationCanceledException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Fakes.StubOperationCanceledException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubOperationCanceledException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubOperationCanceledException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Fakes.StubOperationCanceledException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Fakes.StubOperationCanceledException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubOperationCanceledException</summary>
        </member>
        <member name="F:System.Fakes.StubOperationCanceledException.MessageGet">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="F:System.Fakes.StubOperationCanceledException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Fakes.StubOperationCanceledException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Fakes.StubOperationCanceledException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Fakes.StubOperationCanceledException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.Fakes.StubOperationCanceledException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="P:System.Fakes.StubOperationCanceledException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Fakes.StubOperationCanceledException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="P:System.Fakes.StubOperationCanceledException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Fakes.StubOperationCanceledException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubOperationCanceledException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubOperationCanceledException.Message">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="P:System.Fakes.StubOperationCanceledException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="P:System.Fakes.StubOperationCanceledException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Fakes.StubOutOfMemoryException">
            <summary>Тип заглушки System.OutOfMemoryException</summary>
        </member>
        <member name="M:System.Fakes.StubOutOfMemoryException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubOutOfMemoryException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubOutOfMemoryException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubOutOfMemoryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubOutOfMemoryException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubOutOfMemoryException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Fakes.StubOutOfMemoryException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubOutOfMemoryException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Fakes.StubOutOfMemoryException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.Fakes.StubOutOfMemoryException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Fakes.StubOutOfMemoryException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Fakes.StubOutOfMemoryException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubOutOfMemoryException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubOutOfMemoryException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Fakes.StubOutOfMemoryException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Fakes.StubOutOfMemoryException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubOutOfMemoryException</summary>
        </member>
        <member name="F:System.Fakes.StubOutOfMemoryException.MessageGet">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="F:System.Fakes.StubOutOfMemoryException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Fakes.StubOutOfMemoryException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Fakes.StubOutOfMemoryException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Fakes.StubOutOfMemoryException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.Fakes.StubOutOfMemoryException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="P:System.Fakes.StubOutOfMemoryException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Fakes.StubOutOfMemoryException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="P:System.Fakes.StubOutOfMemoryException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Fakes.StubOutOfMemoryException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubOutOfMemoryException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubOutOfMemoryException.Message">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="P:System.Fakes.StubOutOfMemoryException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="P:System.Fakes.StubOutOfMemoryException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Fakes.StubOverflowException">
            <summary>Тип заглушки System.OverflowException</summary>
        </member>
        <member name="M:System.Fakes.StubOverflowException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubOverflowException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubOverflowException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubOverflowException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubOverflowException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubOverflowException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Fakes.StubOverflowException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubOverflowException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Fakes.StubOverflowException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.Fakes.StubOverflowException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Fakes.StubOverflowException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Fakes.StubOverflowException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubOverflowException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubOverflowException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Fakes.StubOverflowException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Fakes.StubOverflowException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubOverflowException</summary>
        </member>
        <member name="F:System.Fakes.StubOverflowException.MessageGet">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="F:System.Fakes.StubOverflowException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Fakes.StubOverflowException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Fakes.StubOverflowException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Fakes.StubOverflowException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.Fakes.StubOverflowException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="P:System.Fakes.StubOverflowException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Fakes.StubOverflowException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="P:System.Fakes.StubOverflowException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Fakes.StubOverflowException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubOverflowException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubOverflowException.Message">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="P:System.Fakes.StubOverflowException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="P:System.Fakes.StubOverflowException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Fakes.StubPlatformNotSupportedException">
            <summary>Тип заглушки System.PlatformNotSupportedException</summary>
        </member>
        <member name="M:System.Fakes.StubPlatformNotSupportedException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubPlatformNotSupportedException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubPlatformNotSupportedException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubPlatformNotSupportedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubPlatformNotSupportedException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubPlatformNotSupportedException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Fakes.StubPlatformNotSupportedException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubPlatformNotSupportedException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Fakes.StubPlatformNotSupportedException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.Fakes.StubPlatformNotSupportedException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Fakes.StubPlatformNotSupportedException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Fakes.StubPlatformNotSupportedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubPlatformNotSupportedException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubPlatformNotSupportedException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Fakes.StubPlatformNotSupportedException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Fakes.StubPlatformNotSupportedException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubPlatformNotSupportedException</summary>
        </member>
        <member name="F:System.Fakes.StubPlatformNotSupportedException.MessageGet">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="F:System.Fakes.StubPlatformNotSupportedException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Fakes.StubPlatformNotSupportedException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Fakes.StubPlatformNotSupportedException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Fakes.StubPlatformNotSupportedException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.Fakes.StubPlatformNotSupportedException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="P:System.Fakes.StubPlatformNotSupportedException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Fakes.StubPlatformNotSupportedException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="P:System.Fakes.StubPlatformNotSupportedException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Fakes.StubPlatformNotSupportedException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubPlatformNotSupportedException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubPlatformNotSupportedException.Message">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="P:System.Fakes.StubPlatformNotSupportedException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="P:System.Fakes.StubPlatformNotSupportedException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Fakes.StubRandom">
            <summary>Тип заглушки System.Random</summary>
        </member>
        <member name="M:System.Fakes.StubRandom.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubRandom.#ctor(System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubRandom.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubRandom</summary>
        </member>
        <member name="M:System.Fakes.StubRandom.Next">
            <summary>Задает заглушка Random.Next()</summary>
        </member>
        <member name="M:System.Fakes.StubRandom.Next(System.Int32)">
            <summary>Задает заглушка Random.Next(Int32 maxValue)</summary>
        </member>
        <member name="M:System.Fakes.StubRandom.Next(System.Int32,System.Int32)">
            <summary>Задает заглушка Random.Next(Int32 minValue, Int32 maxValue)</summary>
        </member>
        <member name="F:System.Fakes.StubRandom.Next01">
            <summary>Задает stub Random.Next()</summary>
        </member>
        <member name="M:System.Fakes.StubRandom.NextBytes(System.Byte[])">
            <summary>Задает заглушка Random.NextBytes(Byte[] buffer)</summary>
        </member>
        <member name="F:System.Fakes.StubRandom.NextBytesByteArray">
            <summary>Задает stub Random.NextBytes(Byte[] buffer)</summary>
        </member>
        <member name="M:System.Fakes.StubRandom.NextDouble">
            <summary>Задает заглушка Random.NextDouble()</summary>
        </member>
        <member name="F:System.Fakes.StubRandom.NextDouble01">
            <summary>Задает stub Random.NextDouble()</summary>
        </member>
        <member name="F:System.Fakes.StubRandom.NextInt32">
            <summary>Задает stub Random.Next(Int32 maxValue)</summary>
        </member>
        <member name="F:System.Fakes.StubRandom.NextInt32Int32">
            <summary>Задает stub Random.Next(Int32 minValue, Int32 maxValue)</summary>
        </member>
        <member name="M:System.Fakes.StubRandom.Sample">
            <summary>Задает заглушка Random.Sample()</summary>
        </member>
        <member name="F:System.Fakes.StubRandom.Sample01">
            <summary>Задает stub Random.Sample()</summary>
        </member>
        <member name="P:System.Fakes.StubRandom.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Fakes.StubRandom.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubRandom.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Fakes.StubRankException">
            <summary>Тип заглушки System.RankException</summary>
        </member>
        <member name="M:System.Fakes.StubRankException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubRankException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubRankException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubRankException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubRankException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubRankException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Fakes.StubRankException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubRankException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Fakes.StubRankException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.Fakes.StubRankException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Fakes.StubRankException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Fakes.StubRankException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubRankException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubRankException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Fakes.StubRankException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Fakes.StubRankException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubRankException</summary>
        </member>
        <member name="F:System.Fakes.StubRankException.MessageGet">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="F:System.Fakes.StubRankException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Fakes.StubRankException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Fakes.StubRankException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Fakes.StubRankException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.Fakes.StubRankException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="P:System.Fakes.StubRankException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Fakes.StubRankException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="P:System.Fakes.StubRankException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Fakes.StubRankException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubRankException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubRankException.Message">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="P:System.Fakes.StubRankException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="P:System.Fakes.StubRankException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Fakes.StubResolveEventArgs">
            <summary>Тип заглушки System.ResolveEventArgs</summary>
        </member>
        <member name="M:System.Fakes.StubResolveEventArgs.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubResolveEventArgs.#ctor(System.String,System.Reflection.Assembly)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubResolveEventArgs.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubResolveEventArgs</summary>
        </member>
        <member name="P:System.Fakes.StubResolveEventArgs.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Fakes.StubResolveEventArgs.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubResolveEventArgs.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Fakes.StubStringComparer">
            <summary>Тип заглушки System.StringComparer</summary>
        </member>
        <member name="M:System.Fakes.StubStringComparer.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubStringComparer.Compare(System.String,System.String)">
            <summary>Задает заглушка StringComparer.Compare(String x, String y)</summary>
        </member>
        <member name="F:System.Fakes.StubStringComparer.CompareStringString">
            <summary>Задает stub StringComparer.Compare(String x, String y)</summary>
        </member>
        <member name="M:System.Fakes.StubStringComparer.Equals(System.String,System.String)">
            <summary>Задает заглушка StringComparer.Equals(String x, String y)</summary>
        </member>
        <member name="F:System.Fakes.StubStringComparer.EqualsStringString">
            <summary>Задает stub StringComparer.Equals(String x, String y)</summary>
        </member>
        <member name="M:System.Fakes.StubStringComparer.GetHashCode(System.String)">
            <summary>Задает заглушка StringComparer.GetHashCode(String obj)</summary>
        </member>
        <member name="F:System.Fakes.StubStringComparer.GetHashCodeString">
            <summary>Задает stub StringComparer.GetHashCode(String obj)</summary>
        </member>
        <member name="M:System.Fakes.StubStringComparer.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubStringComparer</summary>
        </member>
        <member name="P:System.Fakes.StubStringComparer.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Fakes.StubStringComparer.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubStringComparer.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Fakes.StubSystemException">
            <summary>Тип заглушки System.SystemException</summary>
        </member>
        <member name="M:System.Fakes.StubSystemException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubSystemException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubSystemException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubSystemException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubSystemException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubSystemException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Fakes.StubSystemException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubSystemException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Fakes.StubSystemException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.Fakes.StubSystemException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Fakes.StubSystemException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Fakes.StubSystemException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubSystemException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubSystemException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Fakes.StubSystemException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Fakes.StubSystemException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubSystemException</summary>
        </member>
        <member name="F:System.Fakes.StubSystemException.MessageGet">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="F:System.Fakes.StubSystemException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Fakes.StubSystemException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Fakes.StubSystemException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Fakes.StubSystemException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.Fakes.StubSystemException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="P:System.Fakes.StubSystemException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Fakes.StubSystemException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="P:System.Fakes.StubSystemException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Fakes.StubSystemException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubSystemException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubSystemException.Message">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="P:System.Fakes.StubSystemException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="P:System.Fakes.StubSystemException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Fakes.StubThreadStaticAttribute">
            <summary>Тип заглушки System.ThreadStaticAttribute</summary>
        </member>
        <member name="M:System.Fakes.StubThreadStaticAttribute.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubThreadStaticAttribute.Equals(System.Object)">
            <summary>Задает заглушка Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:System.Fakes.StubThreadStaticAttribute.EqualsObject">
            <summary>Задает stub Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:System.Fakes.StubThreadStaticAttribute.GetHashCode">
            <summary>Задает заглушка Attribute.GetHashCode()</summary>
        </member>
        <member name="F:System.Fakes.StubThreadStaticAttribute.GetHashCode01">
            <summary>Задает stub Attribute.GetHashCode()</summary>
        </member>
        <member name="M:System.Fakes.StubThreadStaticAttribute.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubThreadStaticAttribute</summary>
        </member>
        <member name="M:System.Fakes.StubThreadStaticAttribute.IsDefaultAttribute">
            <summary>Задает заглушка Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:System.Fakes.StubThreadStaticAttribute.IsDefaultAttribute01">
            <summary>Задает stub Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:System.Fakes.StubThreadStaticAttribute.Match(System.Object)">
            <summary>Задает заглушка Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.Fakes.StubThreadStaticAttribute.MatchObject">
            <summary>Задает stub Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.Fakes.StubThreadStaticAttribute.TypeIdGet">
            <summary>Задает stub Attribute.get_TypeId()</summary>
        </member>
        <member name="P:System.Fakes.StubThreadStaticAttribute.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Fakes.StubThreadStaticAttribute.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubThreadStaticAttribute.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubThreadStaticAttribute.TypeId">
            <summary>Задает stub Attribute.get_TypeId()</summary>
        </member>
        <member name="T:System.Fakes.StubTimeZoneNotFoundException">
            <summary>Тип заглушки System.TimeZoneNotFoundException</summary>
        </member>
        <member name="M:System.Fakes.StubTimeZoneNotFoundException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubTimeZoneNotFoundException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubTimeZoneNotFoundException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubTimeZoneNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubTimeZoneNotFoundException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubTimeZoneNotFoundException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Fakes.StubTimeZoneNotFoundException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubTimeZoneNotFoundException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Fakes.StubTimeZoneNotFoundException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.Fakes.StubTimeZoneNotFoundException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Fakes.StubTimeZoneNotFoundException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Fakes.StubTimeZoneNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubTimeZoneNotFoundException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubTimeZoneNotFoundException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Fakes.StubTimeZoneNotFoundException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Fakes.StubTimeZoneNotFoundException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubTimeZoneNotFoundException</summary>
        </member>
        <member name="F:System.Fakes.StubTimeZoneNotFoundException.MessageGet">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="F:System.Fakes.StubTimeZoneNotFoundException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Fakes.StubTimeZoneNotFoundException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Fakes.StubTimeZoneNotFoundException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Fakes.StubTimeZoneNotFoundException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.Fakes.StubTimeZoneNotFoundException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="P:System.Fakes.StubTimeZoneNotFoundException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Fakes.StubTimeZoneNotFoundException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="P:System.Fakes.StubTimeZoneNotFoundException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Fakes.StubTimeZoneNotFoundException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubTimeZoneNotFoundException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubTimeZoneNotFoundException.Message">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="P:System.Fakes.StubTimeZoneNotFoundException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="P:System.Fakes.StubTimeZoneNotFoundException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Fakes.StubTimeoutException">
            <summary>Тип заглушки System.TimeoutException</summary>
        </member>
        <member name="M:System.Fakes.StubTimeoutException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubTimeoutException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubTimeoutException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubTimeoutException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubTimeoutException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubTimeoutException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Fakes.StubTimeoutException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubTimeoutException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Fakes.StubTimeoutException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.Fakes.StubTimeoutException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Fakes.StubTimeoutException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Fakes.StubTimeoutException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubTimeoutException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubTimeoutException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Fakes.StubTimeoutException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Fakes.StubTimeoutException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubTimeoutException</summary>
        </member>
        <member name="F:System.Fakes.StubTimeoutException.MessageGet">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="F:System.Fakes.StubTimeoutException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Fakes.StubTimeoutException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Fakes.StubTimeoutException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Fakes.StubTimeoutException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.Fakes.StubTimeoutException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="P:System.Fakes.StubTimeoutException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Fakes.StubTimeoutException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="P:System.Fakes.StubTimeoutException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Fakes.StubTimeoutException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubTimeoutException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubTimeoutException.Message">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="P:System.Fakes.StubTimeoutException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="P:System.Fakes.StubTimeoutException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Fakes.StubTuple`1">
            <summary>Тип заглушки System.Tuple`1</summary>
        </member>
        <member name="M:System.Fakes.StubTuple`1.#ctor(`0)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubTuple`1.Equals(System.Object)">
            <summary>Задает заглушка Tuple`1.Equals(Object obj)</summary>
        </member>
        <member name="F:System.Fakes.StubTuple`1.EqualsObject">
            <summary>Задает stub Tuple`1.Equals(Object obj)</summary>
        </member>
        <member name="M:System.Fakes.StubTuple`1.GetHashCode">
            <summary>Задает заглушка Tuple`1.GetHashCode()</summary>
        </member>
        <member name="F:System.Fakes.StubTuple`1.GetHashCode01">
            <summary>Задает stub Tuple`1.GetHashCode()</summary>
        </member>
        <member name="M:System.Fakes.StubTuple`1.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubTuple</summary>
        </member>
        <member name="M:System.Fakes.StubTuple`1.ToString">
            <summary>Задает заглушка Tuple`1.ToString()</summary>
        </member>
        <member name="F:System.Fakes.StubTuple`1.ToString01">
            <summary>Задает stub Tuple`1.ToString()</summary>
        </member>
        <member name="P:System.Fakes.StubTuple`1.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Fakes.StubTuple`1.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubTuple`1.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Fakes.StubTuple`2">
            <summary>Тип заглушки System.Tuple`2</summary>
        </member>
        <member name="M:System.Fakes.StubTuple`2.#ctor(`0,`1)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubTuple`2.Equals(System.Object)">
            <summary>Задает заглушка Tuple`2.Equals(Object obj)</summary>
        </member>
        <member name="F:System.Fakes.StubTuple`2.EqualsObject">
            <summary>Задает stub Tuple`2.Equals(Object obj)</summary>
        </member>
        <member name="M:System.Fakes.StubTuple`2.GetHashCode">
            <summary>Задает заглушка Tuple`2.GetHashCode()</summary>
        </member>
        <member name="F:System.Fakes.StubTuple`2.GetHashCode01">
            <summary>Задает stub Tuple`2.GetHashCode()</summary>
        </member>
        <member name="M:System.Fakes.StubTuple`2.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubTuple</summary>
        </member>
        <member name="M:System.Fakes.StubTuple`2.ToString">
            <summary>Задает заглушка Tuple`2.ToString()</summary>
        </member>
        <member name="F:System.Fakes.StubTuple`2.ToString01">
            <summary>Задает stub Tuple`2.ToString()</summary>
        </member>
        <member name="P:System.Fakes.StubTuple`2.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Fakes.StubTuple`2.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubTuple`2.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Fakes.StubTuple`3">
            <summary>Тип заглушки System.Tuple`3</summary>
        </member>
        <member name="M:System.Fakes.StubTuple`3.#ctor(`0,`1,`2)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubTuple`3.Equals(System.Object)">
            <summary>Задает заглушка Tuple`3.Equals(Object obj)</summary>
        </member>
        <member name="F:System.Fakes.StubTuple`3.EqualsObject">
            <summary>Задает stub Tuple`3.Equals(Object obj)</summary>
        </member>
        <member name="M:System.Fakes.StubTuple`3.GetHashCode">
            <summary>Задает заглушка Tuple`3.GetHashCode()</summary>
        </member>
        <member name="F:System.Fakes.StubTuple`3.GetHashCode01">
            <summary>Задает stub Tuple`3.GetHashCode()</summary>
        </member>
        <member name="M:System.Fakes.StubTuple`3.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubTuple</summary>
        </member>
        <member name="M:System.Fakes.StubTuple`3.ToString">
            <summary>Задает заглушка Tuple`3.ToString()</summary>
        </member>
        <member name="F:System.Fakes.StubTuple`3.ToString01">
            <summary>Задает stub Tuple`3.ToString()</summary>
        </member>
        <member name="P:System.Fakes.StubTuple`3.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Fakes.StubTuple`3.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubTuple`3.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Fakes.StubTuple`4">
            <summary>Тип заглушки System.Tuple`4</summary>
        </member>
        <member name="M:System.Fakes.StubTuple`4.#ctor(`0,`1,`2,`3)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubTuple`4.Equals(System.Object)">
            <summary>Задает заглушка Tuple`4.Equals(Object obj)</summary>
        </member>
        <member name="F:System.Fakes.StubTuple`4.EqualsObject">
            <summary>Задает stub Tuple`4.Equals(Object obj)</summary>
        </member>
        <member name="M:System.Fakes.StubTuple`4.GetHashCode">
            <summary>Задает заглушка Tuple`4.GetHashCode()</summary>
        </member>
        <member name="F:System.Fakes.StubTuple`4.GetHashCode01">
            <summary>Задает stub Tuple`4.GetHashCode()</summary>
        </member>
        <member name="M:System.Fakes.StubTuple`4.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubTuple</summary>
        </member>
        <member name="M:System.Fakes.StubTuple`4.ToString">
            <summary>Задает заглушка Tuple`4.ToString()</summary>
        </member>
        <member name="F:System.Fakes.StubTuple`4.ToString01">
            <summary>Задает stub Tuple`4.ToString()</summary>
        </member>
        <member name="P:System.Fakes.StubTuple`4.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Fakes.StubTuple`4.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubTuple`4.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Fakes.StubTuple`5">
            <summary>Тип заглушки System.Tuple`5</summary>
        </member>
        <member name="M:System.Fakes.StubTuple`5.#ctor(`0,`1,`2,`3,`4)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubTuple`5.Equals(System.Object)">
            <summary>Задает заглушка Tuple`5.Equals(Object obj)</summary>
        </member>
        <member name="F:System.Fakes.StubTuple`5.EqualsObject">
            <summary>Задает stub Tuple`5.Equals(Object obj)</summary>
        </member>
        <member name="M:System.Fakes.StubTuple`5.GetHashCode">
            <summary>Задает заглушка Tuple`5.GetHashCode()</summary>
        </member>
        <member name="F:System.Fakes.StubTuple`5.GetHashCode01">
            <summary>Задает stub Tuple`5.GetHashCode()</summary>
        </member>
        <member name="M:System.Fakes.StubTuple`5.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubTuple</summary>
        </member>
        <member name="M:System.Fakes.StubTuple`5.ToString">
            <summary>Задает заглушка Tuple`5.ToString()</summary>
        </member>
        <member name="F:System.Fakes.StubTuple`5.ToString01">
            <summary>Задает stub Tuple`5.ToString()</summary>
        </member>
        <member name="P:System.Fakes.StubTuple`5.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Fakes.StubTuple`5.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubTuple`5.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Fakes.StubTuple`6">
            <summary>Тип заглушки System.Tuple`6</summary>
        </member>
        <member name="M:System.Fakes.StubTuple`6.#ctor(`0,`1,`2,`3,`4,`5)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubTuple`6.Equals(System.Object)">
            <summary>Задает заглушка Tuple`6.Equals(Object obj)</summary>
        </member>
        <member name="F:System.Fakes.StubTuple`6.EqualsObject">
            <summary>Задает stub Tuple`6.Equals(Object obj)</summary>
        </member>
        <member name="M:System.Fakes.StubTuple`6.GetHashCode">
            <summary>Задает заглушка Tuple`6.GetHashCode()</summary>
        </member>
        <member name="F:System.Fakes.StubTuple`6.GetHashCode01">
            <summary>Задает stub Tuple`6.GetHashCode()</summary>
        </member>
        <member name="M:System.Fakes.StubTuple`6.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubTuple</summary>
        </member>
        <member name="M:System.Fakes.StubTuple`6.ToString">
            <summary>Задает заглушка Tuple`6.ToString()</summary>
        </member>
        <member name="F:System.Fakes.StubTuple`6.ToString01">
            <summary>Задает stub Tuple`6.ToString()</summary>
        </member>
        <member name="P:System.Fakes.StubTuple`6.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Fakes.StubTuple`6.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubTuple`6.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Fakes.StubTuple`7">
            <summary>Тип заглушки System.Tuple`7</summary>
        </member>
        <member name="M:System.Fakes.StubTuple`7.#ctor(`0,`1,`2,`3,`4,`5,`6)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubTuple`7.Equals(System.Object)">
            <summary>Задает заглушка Tuple`7.Equals(Object obj)</summary>
        </member>
        <member name="F:System.Fakes.StubTuple`7.EqualsObject">
            <summary>Задает stub Tuple`7.Equals(Object obj)</summary>
        </member>
        <member name="M:System.Fakes.StubTuple`7.GetHashCode">
            <summary>Задает заглушка Tuple`7.GetHashCode()</summary>
        </member>
        <member name="F:System.Fakes.StubTuple`7.GetHashCode01">
            <summary>Задает stub Tuple`7.GetHashCode()</summary>
        </member>
        <member name="M:System.Fakes.StubTuple`7.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubTuple</summary>
        </member>
        <member name="M:System.Fakes.StubTuple`7.ToString">
            <summary>Задает заглушка Tuple`7.ToString()</summary>
        </member>
        <member name="F:System.Fakes.StubTuple`7.ToString01">
            <summary>Задает stub Tuple`7.ToString()</summary>
        </member>
        <member name="P:System.Fakes.StubTuple`7.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Fakes.StubTuple`7.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubTuple`7.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Fakes.StubTuple`8">
            <summary>Тип заглушки System.Tuple`8</summary>
        </member>
        <member name="M:System.Fakes.StubTuple`8.#ctor(`0,`1,`2,`3,`4,`5,`6,`7)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubTuple`8.Equals(System.Object)">
            <summary>Задает заглушка Tuple`8.Equals(Object obj)</summary>
        </member>
        <member name="F:System.Fakes.StubTuple`8.EqualsObject">
            <summary>Задает stub Tuple`8.Equals(Object obj)</summary>
        </member>
        <member name="M:System.Fakes.StubTuple`8.GetHashCode">
            <summary>Задает заглушка Tuple`8.GetHashCode()</summary>
        </member>
        <member name="F:System.Fakes.StubTuple`8.GetHashCode01">
            <summary>Задает stub Tuple`8.GetHashCode()</summary>
        </member>
        <member name="M:System.Fakes.StubTuple`8.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubTuple</summary>
        </member>
        <member name="M:System.Fakes.StubTuple`8.ToString">
            <summary>Задает заглушка Tuple`8.ToString()</summary>
        </member>
        <member name="F:System.Fakes.StubTuple`8.ToString01">
            <summary>Задает stub Tuple`8.ToString()</summary>
        </member>
        <member name="P:System.Fakes.StubTuple`8.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Fakes.StubTuple`8.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubTuple`8.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Fakes.StubTypeAccessException">
            <summary>Тип заглушки System.TypeAccessException</summary>
        </member>
        <member name="M:System.Fakes.StubTypeAccessException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubTypeAccessException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubTypeAccessException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubTypeAccessException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubTypeAccessException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubTypeAccessException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Fakes.StubTypeAccessException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubTypeAccessException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Fakes.StubTypeAccessException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.Fakes.StubTypeAccessException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Fakes.StubTypeAccessException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Fakes.StubTypeAccessException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка TypeLoadException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubTypeAccessException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub TypeLoadException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubTypeAccessException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Fakes.StubTypeAccessException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Fakes.StubTypeAccessException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubTypeAccessException</summary>
        </member>
        <member name="F:System.Fakes.StubTypeAccessException.MessageGet">
            <summary>Задает stub TypeLoadException.get_Message()</summary>
        </member>
        <member name="F:System.Fakes.StubTypeAccessException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Fakes.StubTypeAccessException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Fakes.StubTypeAccessException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Fakes.StubTypeAccessException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.Fakes.StubTypeAccessException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="P:System.Fakes.StubTypeAccessException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Fakes.StubTypeAccessException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="P:System.Fakes.StubTypeAccessException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Fakes.StubTypeAccessException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubTypeAccessException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubTypeAccessException.Message">
            <summary>Задает stub TypeLoadException.get_Message()</summary>
        </member>
        <member name="P:System.Fakes.StubTypeAccessException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="P:System.Fakes.StubTypeAccessException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Fakes.StubTypeLoadException">
            <summary>Тип заглушки System.TypeLoadException</summary>
        </member>
        <member name="M:System.Fakes.StubTypeLoadException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubTypeLoadException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubTypeLoadException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubTypeLoadException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubTypeLoadException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubTypeLoadException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Fakes.StubTypeLoadException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubTypeLoadException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Fakes.StubTypeLoadException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.Fakes.StubTypeLoadException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Fakes.StubTypeLoadException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Fakes.StubTypeLoadException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка TypeLoadException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubTypeLoadException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub TypeLoadException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubTypeLoadException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Fakes.StubTypeLoadException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Fakes.StubTypeLoadException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubTypeLoadException</summary>
        </member>
        <member name="F:System.Fakes.StubTypeLoadException.MessageGet">
            <summary>Задает stub TypeLoadException.get_Message()</summary>
        </member>
        <member name="F:System.Fakes.StubTypeLoadException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Fakes.StubTypeLoadException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Fakes.StubTypeLoadException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Fakes.StubTypeLoadException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.Fakes.StubTypeLoadException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="P:System.Fakes.StubTypeLoadException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Fakes.StubTypeLoadException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="P:System.Fakes.StubTypeLoadException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Fakes.StubTypeLoadException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubTypeLoadException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubTypeLoadException.Message">
            <summary>Задает stub TypeLoadException.get_Message()</summary>
        </member>
        <member name="P:System.Fakes.StubTypeLoadException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="P:System.Fakes.StubTypeLoadException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Fakes.StubTypeUnloadedException">
            <summary>Тип заглушки System.TypeUnloadedException</summary>
        </member>
        <member name="M:System.Fakes.StubTypeUnloadedException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubTypeUnloadedException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubTypeUnloadedException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubTypeUnloadedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubTypeUnloadedException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubTypeUnloadedException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Fakes.StubTypeUnloadedException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubTypeUnloadedException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Fakes.StubTypeUnloadedException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.Fakes.StubTypeUnloadedException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Fakes.StubTypeUnloadedException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Fakes.StubTypeUnloadedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubTypeUnloadedException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubTypeUnloadedException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Fakes.StubTypeUnloadedException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Fakes.StubTypeUnloadedException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubTypeUnloadedException</summary>
        </member>
        <member name="F:System.Fakes.StubTypeUnloadedException.MessageGet">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="F:System.Fakes.StubTypeUnloadedException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Fakes.StubTypeUnloadedException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Fakes.StubTypeUnloadedException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Fakes.StubTypeUnloadedException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.Fakes.StubTypeUnloadedException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="P:System.Fakes.StubTypeUnloadedException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Fakes.StubTypeUnloadedException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="P:System.Fakes.StubTypeUnloadedException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Fakes.StubTypeUnloadedException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubTypeUnloadedException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubTypeUnloadedException.Message">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="P:System.Fakes.StubTypeUnloadedException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="P:System.Fakes.StubTypeUnloadedException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Fakes.StubUnauthorizedAccessException">
            <summary>Тип заглушки System.UnauthorizedAccessException</summary>
        </member>
        <member name="M:System.Fakes.StubUnauthorizedAccessException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubUnauthorizedAccessException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubUnauthorizedAccessException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubUnauthorizedAccessException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubUnauthorizedAccessException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubUnauthorizedAccessException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Fakes.StubUnauthorizedAccessException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubUnauthorizedAccessException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Fakes.StubUnauthorizedAccessException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.Fakes.StubUnauthorizedAccessException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Fakes.StubUnauthorizedAccessException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Fakes.StubUnauthorizedAccessException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubUnauthorizedAccessException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubUnauthorizedAccessException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Fakes.StubUnauthorizedAccessException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Fakes.StubUnauthorizedAccessException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubUnauthorizedAccessException</summary>
        </member>
        <member name="F:System.Fakes.StubUnauthorizedAccessException.MessageGet">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="F:System.Fakes.StubUnauthorizedAccessException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Fakes.StubUnauthorizedAccessException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Fakes.StubUnauthorizedAccessException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Fakes.StubUnauthorizedAccessException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.Fakes.StubUnauthorizedAccessException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="P:System.Fakes.StubUnauthorizedAccessException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Fakes.StubUnauthorizedAccessException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="P:System.Fakes.StubUnauthorizedAccessException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Fakes.StubUnauthorizedAccessException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubUnauthorizedAccessException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubUnauthorizedAccessException.Message">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="P:System.Fakes.StubUnauthorizedAccessException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="P:System.Fakes.StubUnauthorizedAccessException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Fakes.StubUnhandledExceptionEventArgs">
            <summary>Тип заглушки System.UnhandledExceptionEventArgs</summary>
        </member>
        <member name="M:System.Fakes.StubUnhandledExceptionEventArgs.#ctor(System.Object,System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubUnhandledExceptionEventArgs.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubUnhandledExceptionEventArgs</summary>
        </member>
        <member name="P:System.Fakes.StubUnhandledExceptionEventArgs.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Fakes.StubUnhandledExceptionEventArgs.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubUnhandledExceptionEventArgs.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Fakes.StubWeakReference">
            <summary>Тип заглушки System.WeakReference</summary>
        </member>
        <member name="M:System.Fakes.StubWeakReference.#ctor(System.Object)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubWeakReference.#ctor(System.Object,System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubWeakReference.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Fakes.StubWeakReference.AttachBackingFieldToTarget">
            <summary>Присоединение делегатов для эмуляции StubWeakReference.Target как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Fakes.StubWeakReference.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка WeakReference.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Fakes.StubWeakReference.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub WeakReference.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="M:System.Fakes.StubWeakReference.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubWeakReference</summary>
        </member>
        <member name="F:System.Fakes.StubWeakReference.IsAliveGet">
            <summary>Задает stub WeakReference.get_IsAlive()</summary>
        </member>
        <member name="F:System.Fakes.StubWeakReference.TargetGet">
            <summary>Задает stub WeakReference.get_Target()</summary>
        </member>
        <member name="F:System.Fakes.StubWeakReference.TargetSetObject">
            <summary>Задает stub WeakReference.set_Target(Object value)</summary>
        </member>
        <member name="F:System.Fakes.StubWeakReference.TrackResurrectionGet">
            <summary>Задает stub WeakReference.get_TrackResurrection()</summary>
        </member>
        <member name="P:System.Fakes.StubWeakReference.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Fakes.StubWeakReference.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubWeakReference.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Fakes.StubWeakReference.IsAlive">
            <summary>Задает stub WeakReference.get_IsAlive()</summary>
        </member>
        <member name="P:System.Fakes.StubWeakReference.Target">
            <summary>Задает stub WeakReference.get_Target()</summary>
        </member>
        <member name="P:System.Fakes.StubWeakReference.TrackResurrection">
            <summary>Задает stub WeakReference.get_TrackResurrection()</summary>
        </member>
        <member name="T:System.IO.Fakes.ShimDirectory">
            <summary>Тип оболочки совместимости для System.IO.Directory</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimDirectory.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimDirectory.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimDirectory.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.CreateDirectoryString">
            <summary>Задает оболочка совместимости Directory.CreateDirectory(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.CreateDirectoryStringDirectorySecurity">
            <summary>Задает оболочка совместимости Directory.CreateDirectory(String path, DirectorySecurity directorySecurity)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.DeleteHelperStringStringBooleanBoolean">
            <summary>Задает оболочка совместимости Directory.DeleteHelper(String fullPath, String userPath, Boolean recursive, Boolean throwOnTopLevelDirectoryNotFound)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.DeleteString">
            <summary>Задает оболочка совместимости Directory.Delete(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.DeleteStringBoolean">
            <summary>Задает оболочка совместимости Directory.Delete(String path, Boolean recursive)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.DeleteStringStringBooleanBoolean">
            <summary>Задает оболочка совместимости Directory.Delete(String fullPath, String userPath, Boolean recursive, Boolean checkHost)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.EnumerateDirectoriesString">
            <summary>Задает оболочка совместимости Directory.EnumerateDirectories(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.EnumerateDirectoriesStringString">
            <summary>Задает оболочка совместимости Directory.EnumerateDirectories(String path, String searchPattern)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.EnumerateDirectoriesStringStringSearchOption">
            <summary>Задает оболочка совместимости Directory.EnumerateDirectories(String path, String searchPattern, SearchOption searchOption)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.EnumerateFileSystemEntriesString">
            <summary>Задает оболочка совместимости Directory.EnumerateFileSystemEntries(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.EnumerateFileSystemEntriesStringString">
            <summary>Задает оболочка совместимости Directory.EnumerateFileSystemEntries(String path, String searchPattern)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.EnumerateFileSystemEntriesStringStringSearchOption">
            <summary>Задает оболочка совместимости Directory.EnumerateFileSystemEntries(String path, String searchPattern, SearchOption searchOption)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.EnumerateFileSystemNamesStringStringSearchOptionBooleanBoolean">
            <summary>Задает оболочка совместимости Directory.EnumerateFileSystemNames(String path, String searchPattern, SearchOption searchOption, Boolean includeFiles, Boolean includeDirs)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.EnumerateFilesString">
            <summary>Задает оболочка совместимости Directory.EnumerateFiles(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.EnumerateFilesStringString">
            <summary>Задает оболочка совместимости Directory.EnumerateFiles(String path, String searchPattern)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.EnumerateFilesStringStringSearchOption">
            <summary>Задает оболочка совместимости Directory.EnumerateFiles(String path, String searchPattern, SearchOption searchOption)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.ExistsString">
            <summary>Задает оболочка совместимости Directory.Exists(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.GetAccessControlString">
            <summary>Задает оболочка совместимости Directory.GetAccessControl(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.GetAccessControlStringAccessControlSections">
            <summary>Задает оболочка совместимости Directory.GetAccessControl(String path, AccessControlSections includeSections)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.GetCreationTimeString">
            <summary>Задает оболочка совместимости Directory.GetCreationTime(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.GetCreationTimeUtcString">
            <summary>Задает оболочка совместимости Directory.GetCreationTimeUtc(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.GetCurrentDirectory">
            <summary>Задает оболочка совместимости Directory.GetCurrentDirectory()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.GetDemandDirStringBoolean">
            <summary>Задает оболочка совместимости Directory.GetDemandDir(String fullPath, Boolean thisDirOnly)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.GetDirectoriesString">
            <summary>Задает оболочка совместимости Directory.GetDirectories(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.GetDirectoriesStringString">
            <summary>Задает оболочка совместимости Directory.GetDirectories(String path, String searchPattern)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.GetDirectoriesStringStringSearchOption">
            <summary>Задает оболочка совместимости Directory.GetDirectories(String path, String searchPattern, SearchOption searchOption)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.GetDirectoryRootString">
            <summary>Задает оболочка совместимости Directory.GetDirectoryRoot(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.GetFileSystemEntriesString">
            <summary>Задает оболочка совместимости Directory.GetFileSystemEntries(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.GetFileSystemEntriesStringString">
            <summary>Задает оболочка совместимости Directory.GetFileSystemEntries(String path, String searchPattern)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.GetFileSystemEntriesStringStringSearchOption">
            <summary>Задает оболочка совместимости Directory.GetFileSystemEntries(String path, String searchPattern, SearchOption searchOption)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.GetFilesString">
            <summary>Задает оболочка совместимости Directory.GetFiles(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.GetFilesStringString">
            <summary>Задает оболочка совместимости Directory.GetFiles(String path, String searchPattern)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.GetFilesStringStringSearchOption">
            <summary>Задает оболочка совместимости Directory.GetFiles(String path, String searchPattern, SearchOption searchOption)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.GetLastAccessTimeString">
            <summary>Задает оболочка совместимости Directory.GetLastAccessTime(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.GetLastAccessTimeUtcString">
            <summary>Задает оболочка совместимости Directory.GetLastAccessTimeUtc(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.GetLastWriteTimeString">
            <summary>Задает оболочка совместимости Directory.GetLastWriteTime(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.GetLastWriteTimeUtcString">
            <summary>Задает оболочка совместимости Directory.GetLastWriteTimeUtc(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.GetLogicalDrives">
            <summary>Задает оболочка совместимости Directory.GetLogicalDrives()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.GetParentString">
            <summary>Задает оболочка совместимости Directory.GetParent(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.InternalCreateDirectoryHelperStringBoolean">
            <summary>Задает оболочка совместимости Directory.InternalCreateDirectoryHelper(String path, Boolean checkHost)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.InternalCreateDirectoryStringStringObject">
            <summary>Задает оболочка совместимости Directory.InternalCreateDirectory(String fullPath, String path, Object dirSecurityObj)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.InternalCreateDirectoryStringStringObjectBoolean">
            <summary>Задает оболочка совместимости Directory.InternalCreateDirectory(String fullPath, String path, Object dirSecurityObj, Boolean checkHost)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.InternalEnumerateDirectoriesStringStringSearchOption">
            <summary>Задает оболочка совместимости Directory.InternalEnumerateDirectories(String path, String searchPattern, SearchOption searchOption)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.InternalEnumerateFileSystemEntriesStringStringSearchOption">
            <summary>Задает оболочка совместимости Directory.InternalEnumerateFileSystemEntries(String path, String searchPattern, SearchOption searchOption)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.InternalEnumerateFilesStringStringSearchOption">
            <summary>Задает оболочка совместимости Directory.InternalEnumerateFiles(String path, String searchPattern, SearchOption searchOption)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.InternalExistsHelperStringBoolean">
            <summary>Задает оболочка совместимости Directory.InternalExistsHelper(String path, Boolean checkHost)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.InternalExistsString">
            <summary>Задает оболочка совместимости Directory.InternalExists(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.InternalExistsStringInt32Out">
            <summary>Задает оболочка совместимости Directory.InternalExists(String path, Int32&amp; lastError)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.InternalGetCurrentDirectoryBoolean">
            <summary>Задает оболочка совместимости Directory.InternalGetCurrentDirectory(Boolean checkHost)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.InternalGetDirectoriesStringStringSearchOption">
            <summary>Задает оболочка совместимости Directory.InternalGetDirectories(String path, String searchPattern, SearchOption searchOption)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.InternalGetDirectoryRootString">
            <summary>Задает оболочка совместимости Directory.InternalGetDirectoryRoot(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.InternalGetFileDirectoryNamesStringStringStringBooleanBooleanSearchOptionBoolean">
            <summary>Задает оболочка совместимости Directory.InternalGetFileDirectoryNames(String path, String userPathOriginal, String searchPattern, Boolean includeFiles, Boolean includeDirs, SearchOption searchOption, Boolean checkHost)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.InternalGetFileSystemEntriesStringStringSearchOption">
            <summary>Задает оболочка совместимости Directory.InternalGetFileSystemEntries(String path, String searchPattern, SearchOption searchOption)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.InternalGetFilesStringStringSearchOption">
            <summary>Задает оболочка совместимости Directory.InternalGetFiles(String path, String searchPattern, SearchOption searchOption)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.InternalMoveStringStringBoolean">
            <summary>Задает оболочка совместимости Directory.InternalMove(String sourceDirName, String destDirName, Boolean checkHost)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.MoveStringString">
            <summary>Задает оболочка совместимости Directory.Move(String sourceDirName, String destDirName)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.OpenHandleString">
            <summary>Задает оболочка совместимости Directory.OpenHandle(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.SetAccessControlStringDirectorySecurity">
            <summary>Задает оболочка совместимости Directory.SetAccessControl(String path, DirectorySecurity directorySecurity)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.SetCreationTimeStringDateTime">
            <summary>Задает оболочка совместимости Directory.SetCreationTime(String path, DateTime creationTime)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.SetCreationTimeUtcStringDateTime">
            <summary>Задает оболочка совместимости Directory.SetCreationTimeUtc(String path, DateTime creationTimeUtc)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.SetCurrentDirectoryString">
            <summary>Задает оболочка совместимости Directory.SetCurrentDirectory(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.SetLastAccessTimeStringDateTime">
            <summary>Задает оболочка совместимости Directory.SetLastAccessTime(String path, DateTime lastAccessTime)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.SetLastAccessTimeUtcStringDateTime">
            <summary>Задает оболочка совместимости Directory.SetLastAccessTimeUtc(String path, DateTime lastAccessTimeUtc)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.SetLastWriteTimeStringDateTime">
            <summary>Задает оболочка совместимости Directory.SetLastWriteTime(String path, DateTime lastWriteTime)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.SetLastWriteTimeUtcStringDateTime">
            <summary>Задает оболочка совместимости Directory.SetLastWriteTimeUtc(String path, DateTime lastWriteTimeUtc)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.UnsafeCreateDirectoryString">
            <summary>Задает оболочка совместимости Directory.UnsafeCreateDirectory(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.UnsafeDeleteStringBoolean">
            <summary>Задает оболочка совместимости Directory.UnsafeDelete(String path, Boolean recursive)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.UnsafeExistsString">
            <summary>Задает оболочка совместимости Directory.UnsafeExists(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.UnsafeGetCurrentDirectory">
            <summary>Задает оболочка совместимости Directory.UnsafeGetCurrentDirectory()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.UnsafeGetDirectoriesStringStringSearchOption">
            <summary>Задает оболочка совместимости Directory.UnsafeGetDirectories(String path, String searchPattern, SearchOption searchOption)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.UnsafeGetFilesStringStringSearchOption">
            <summary>Задает оболочка совместимости Directory.UnsafeGetFiles(String path, String searchPattern, SearchOption searchOption)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectory.UnsafeMoveStringString">
            <summary>Задает оболочка совместимости Directory.UnsafeMove(String sourceDirName, String destDirName)</summary>
        </member>
        <member name="T:System.IO.Fakes.ShimDirectoryInfo">
            <summary>Тип оболочки совместимости для System.IO.DirectoryInfo</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimDirectoryInfo.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimDirectoryInfo.#ctor(System.IO.DirectoryInfo)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimDirectoryInfo.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimDirectoryInfo.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimDirectoryInfo.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.ConstructorSerializationInfoStreamingContext">
            <summary>Задает оболочка совместимости DirectoryInfo.DirectoryInfo(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.ConstructorString">
            <summary>Задает оболочка совместимости DirectoryInfo.DirectoryInfo(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.ConstructorStringBoolean">
            <summary>Задает оболочка совместимости DirectoryInfo.DirectoryInfo(String fullPath, Boolean junk)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.Create">
            <summary>Задает оболочка совместимости DirectoryInfo.Create()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.CreateDirectorySecurity">
            <summary>Задает оболочка совместимости DirectoryInfo.Create(DirectorySecurity directorySecurity)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.CreateSubdirectoryHelperStringObject">
            <summary>Задает оболочка совместимости DirectoryInfo.CreateSubdirectoryHelper(String path, Object directorySecurity)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.CreateSubdirectoryString">
            <summary>Задает оболочка совместимости DirectoryInfo.CreateSubdirectory(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.CreateSubdirectoryStringDirectorySecurity">
            <summary>Задает оболочка совместимости DirectoryInfo.CreateSubdirectory(String path, DirectorySecurity directorySecurity)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.Delete">
            <summary>Задает оболочка совместимости DirectoryInfo.Delete()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.DeleteBoolean">
            <summary>Задает оболочка совместимости DirectoryInfo.Delete(Boolean recursive)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.EnumerateDirectories">
            <summary>Задает оболочка совместимости DirectoryInfo.EnumerateDirectories()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.EnumerateDirectoriesString">
            <summary>Задает оболочка совместимости DirectoryInfo.EnumerateDirectories(String searchPattern)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.EnumerateDirectoriesStringSearchOption">
            <summary>Задает оболочка совместимости DirectoryInfo.EnumerateDirectories(String searchPattern, SearchOption searchOption)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.EnumerateFileSystemInfos">
            <summary>Задает оболочка совместимости DirectoryInfo.EnumerateFileSystemInfos()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.EnumerateFileSystemInfosString">
            <summary>Задает оболочка совместимости DirectoryInfo.EnumerateFileSystemInfos(String searchPattern)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.EnumerateFileSystemInfosStringSearchOption">
            <summary>Задает оболочка совместимости DirectoryInfo.EnumerateFileSystemInfos(String searchPattern, SearchOption searchOption)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.EnumerateFiles">
            <summary>Задает оболочка совместимости DirectoryInfo.EnumerateFiles()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.EnumerateFilesString">
            <summary>Задает оболочка совместимости DirectoryInfo.EnumerateFiles(String searchPattern)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.EnumerateFilesStringSearchOption">
            <summary>Задает оболочка совместимости DirectoryInfo.EnumerateFiles(String searchPattern, SearchOption searchOption)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.ExistsGet">
            <summary>Задает оболочка совместимости DirectoryInfo.get_Exists()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.GetAccessControl">
            <summary>Задает оболочка совместимости DirectoryInfo.GetAccessControl()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.GetAccessControlAccessControlSections">
            <summary>Задает оболочка совместимости DirectoryInfo.GetAccessControl(AccessControlSections includeSections)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.GetDirNameString">
            <summary>Задает оболочка совместимости DirectoryInfo.GetDirName(String fullPath)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.GetDirectories">
            <summary>Задает оболочка совместимости DirectoryInfo.GetDirectories()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.GetDirectoriesString">
            <summary>Задает оболочка совместимости DirectoryInfo.GetDirectories(String searchPattern)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.GetDirectoriesStringSearchOption">
            <summary>Задает оболочка совместимости DirectoryInfo.GetDirectories(String searchPattern, SearchOption searchOption)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.GetDisplayNameStringString">
            <summary>Задает оболочка совместимости DirectoryInfo.GetDisplayName(String originalPath, String fullPath)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.GetFileSystemInfos">
            <summary>Задает оболочка совместимости DirectoryInfo.GetFileSystemInfos()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.GetFileSystemInfosString">
            <summary>Задает оболочка совместимости DirectoryInfo.GetFileSystemInfos(String searchPattern)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.GetFileSystemInfosStringSearchOption">
            <summary>Задает оболочка совместимости DirectoryInfo.GetFileSystemInfos(String searchPattern, SearchOption searchOption)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.GetFiles">
            <summary>Задает оболочка совместимости DirectoryInfo.GetFiles()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.GetFilesString">
            <summary>Задает оболочка совместимости DirectoryInfo.GetFiles(String searchPattern)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.GetFilesStringSearchOption">
            <summary>Задает оболочка совместимости DirectoryInfo.GetFiles(String searchPattern, SearchOption searchOption)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.InitStringBoolean">
            <summary>Задает оболочка совместимости DirectoryInfo.Init(String path, Boolean checkHost)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.InternalEnumerateDirectoriesStringSearchOption">
            <summary>Задает оболочка совместимости DirectoryInfo.InternalEnumerateDirectories(String searchPattern, SearchOption searchOption)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.InternalEnumerateFileSystemInfosStringSearchOption">
            <summary>Задает оболочка совместимости DirectoryInfo.InternalEnumerateFileSystemInfos(String searchPattern, SearchOption searchOption)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.InternalEnumerateFilesStringSearchOption">
            <summary>Задает оболочка совместимости DirectoryInfo.InternalEnumerateFiles(String searchPattern, SearchOption searchOption)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.InternalGetDirectoriesStringSearchOption">
            <summary>Задает оболочка совместимости DirectoryInfo.InternalGetDirectories(String searchPattern, SearchOption searchOption)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.InternalGetFileSystemInfosStringSearchOption">
            <summary>Задает оболочка совместимости DirectoryInfo.InternalGetFileSystemInfos(String searchPattern, SearchOption searchOption)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.InternalGetFilesStringSearchOption">
            <summary>Задает оболочка совместимости DirectoryInfo.InternalGetFiles(String searchPattern, SearchOption searchOption)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.MoveToString">
            <summary>Задает оболочка совместимости DirectoryInfo.MoveTo(String destDirName)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.NameGet">
            <summary>Задает оболочка совместимости DirectoryInfo.get_Name()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.ParentGet">
            <summary>Задает оболочка совместимости DirectoryInfo.get_Parent()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.RootGet">
            <summary>Задает оболочка совместимости DirectoryInfo.get_Root()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.SetAccessControlDirectorySecurity">
            <summary>Задает оболочка совместимости DirectoryInfo.SetAccessControl(DirectorySecurity directorySecurity)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.ToString">
            <summary>Задает оболочка совместимости DirectoryInfo.ToString()</summary>
        </member>
        <member name="T:System.IO.Fakes.ShimDirectoryInfo.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.Create">
            <summary>Задает оболочка совместимости DirectoryInfo.Create()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.CreateDirectorySecurity">
            <summary>Задает оболочка совместимости DirectoryInfo.Create(DirectorySecurity directorySecurity)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.CreateSubdirectoryHelperStringObject">
            <summary>Задает оболочка совместимости DirectoryInfo.CreateSubdirectoryHelper(String path, Object directorySecurity)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.CreateSubdirectoryString">
            <summary>Задает оболочка совместимости DirectoryInfo.CreateSubdirectory(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.CreateSubdirectoryStringDirectorySecurity">
            <summary>Задает оболочка совместимости DirectoryInfo.CreateSubdirectory(String path, DirectorySecurity directorySecurity)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.Delete">
            <summary>Задает оболочка совместимости DirectoryInfo.Delete()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.DeleteBoolean">
            <summary>Задает оболочка совместимости DirectoryInfo.Delete(Boolean recursive)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.EnumerateDirectories">
            <summary>Задает оболочка совместимости DirectoryInfo.EnumerateDirectories()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.EnumerateDirectoriesString">
            <summary>Задает оболочка совместимости DirectoryInfo.EnumerateDirectories(String searchPattern)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.EnumerateDirectoriesStringSearchOption">
            <summary>Задает оболочка совместимости DirectoryInfo.EnumerateDirectories(String searchPattern, SearchOption searchOption)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.EnumerateFileSystemInfos">
            <summary>Задает оболочка совместимости DirectoryInfo.EnumerateFileSystemInfos()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.EnumerateFileSystemInfosString">
            <summary>Задает оболочка совместимости DirectoryInfo.EnumerateFileSystemInfos(String searchPattern)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.EnumerateFileSystemInfosStringSearchOption">
            <summary>Задает оболочка совместимости DirectoryInfo.EnumerateFileSystemInfos(String searchPattern, SearchOption searchOption)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.EnumerateFiles">
            <summary>Задает оболочка совместимости DirectoryInfo.EnumerateFiles()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.EnumerateFilesString">
            <summary>Задает оболочка совместимости DirectoryInfo.EnumerateFiles(String searchPattern)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.EnumerateFilesStringSearchOption">
            <summary>Задает оболочка совместимости DirectoryInfo.EnumerateFiles(String searchPattern, SearchOption searchOption)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.ExistsGet">
            <summary>Задает оболочка совместимости DirectoryInfo.get_Exists()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.GetAccessControl">
            <summary>Задает оболочка совместимости DirectoryInfo.GetAccessControl()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.GetAccessControlAccessControlSections">
            <summary>Задает оболочка совместимости DirectoryInfo.GetAccessControl(AccessControlSections includeSections)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.GetDirectories">
            <summary>Задает оболочка совместимости DirectoryInfo.GetDirectories()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.GetDirectoriesString">
            <summary>Задает оболочка совместимости DirectoryInfo.GetDirectories(String searchPattern)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.GetDirectoriesStringSearchOption">
            <summary>Задает оболочка совместимости DirectoryInfo.GetDirectories(String searchPattern, SearchOption searchOption)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.GetFileSystemInfos">
            <summary>Задает оболочка совместимости DirectoryInfo.GetFileSystemInfos()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.GetFileSystemInfosString">
            <summary>Задает оболочка совместимости DirectoryInfo.GetFileSystemInfos(String searchPattern)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.GetFileSystemInfosStringSearchOption">
            <summary>Задает оболочка совместимости DirectoryInfo.GetFileSystemInfos(String searchPattern, SearchOption searchOption)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.GetFiles">
            <summary>Задает оболочка совместимости DirectoryInfo.GetFiles()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.GetFilesString">
            <summary>Задает оболочка совместимости DirectoryInfo.GetFiles(String searchPattern)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.GetFilesStringSearchOption">
            <summary>Задает оболочка совместимости DirectoryInfo.GetFiles(String searchPattern, SearchOption searchOption)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.InitStringBoolean">
            <summary>Задает оболочка совместимости DirectoryInfo.Init(String path, Boolean checkHost)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.InternalEnumerateDirectoriesStringSearchOption">
            <summary>Задает оболочка совместимости DirectoryInfo.InternalEnumerateDirectories(String searchPattern, SearchOption searchOption)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.InternalEnumerateFileSystemInfosStringSearchOption">
            <summary>Задает оболочка совместимости DirectoryInfo.InternalEnumerateFileSystemInfos(String searchPattern, SearchOption searchOption)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.InternalEnumerateFilesStringSearchOption">
            <summary>Задает оболочка совместимости DirectoryInfo.InternalEnumerateFiles(String searchPattern, SearchOption searchOption)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.InternalGetDirectoriesStringSearchOption">
            <summary>Задает оболочка совместимости DirectoryInfo.InternalGetDirectories(String searchPattern, SearchOption searchOption)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.InternalGetFileSystemInfosStringSearchOption">
            <summary>Задает оболочка совместимости DirectoryInfo.InternalGetFileSystemInfos(String searchPattern, SearchOption searchOption)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.InternalGetFilesStringSearchOption">
            <summary>Задает оболочка совместимости DirectoryInfo.InternalGetFiles(String searchPattern, SearchOption searchOption)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.MoveToString">
            <summary>Задает оболочка совместимости DirectoryInfo.MoveTo(String destDirName)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.NameGet">
            <summary>Задает оболочка совместимости DirectoryInfo.get_Name()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.ParentGet">
            <summary>Задает оболочка совместимости DirectoryInfo.get_Parent()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.RootGet">
            <summary>Задает оболочка совместимости DirectoryInfo.get_Root()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.SetAccessControlDirectorySecurity">
            <summary>Задает оболочка совместимости DirectoryInfo.SetAccessControl(DirectorySecurity directorySecurity)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimDirectoryInfo.AllInstances.ToString01">
            <summary>Задает оболочка совместимости DirectoryInfo.ToString()</summary>
        </member>
        <member name="T:System.IO.Fakes.ShimFile">
            <summary>Тип оболочки совместимости для System.IO.File</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimFile.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimFile.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimFile.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.AppendAllLinesStringIEnumerableOfString">
            <summary>Задает оболочка совместимости File.AppendAllLines(String path, IEnumerable`1&lt;String&gt; contents)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.AppendAllLinesStringIEnumerableOfStringEncoding">
            <summary>Задает оболочка совместимости File.AppendAllLines(String path, IEnumerable`1&lt;String&gt; contents, Encoding encoding)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.AppendAllTextStringString">
            <summary>Задает оболочка совместимости File.AppendAllText(String path, String contents)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.AppendAllTextStringStringEncoding">
            <summary>Задает оболочка совместимости File.AppendAllText(String path, String contents, Encoding encoding)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.AppendTextString">
            <summary>Задает оболочка совместимости File.AppendText(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.CopyStringString">
            <summary>Задает оболочка совместимости File.Copy(String sourceFileName, String destFileName)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.CopyStringStringBoolean">
            <summary>Задает оболочка совместимости File.Copy(String sourceFileName, String destFileName, Boolean overwrite)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.CreateString">
            <summary>Задает оболочка совместимости File.Create(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.CreateStringInt32">
            <summary>Задает оболочка совместимости File.Create(String path, Int32 bufferSize)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.CreateStringInt32FileOptions">
            <summary>Задает оболочка совместимости File.Create(String path, Int32 bufferSize, FileOptions options)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.CreateStringInt32FileOptionsFileSecurity">
            <summary>Задает оболочка совместимости File.Create(String path, Int32 bufferSize, FileOptions options, FileSecurity fileSecurity)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.CreateTextString">
            <summary>Задает оболочка совместимости File.CreateText(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.DecryptString">
            <summary>Задает оболочка совместимости File.Decrypt(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.DeleteString">
            <summary>Задает оболочка совместимости File.Delete(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.EncryptString">
            <summary>Задает оболочка совместимости File.Encrypt(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.ExistsString">
            <summary>Задает оболочка совместимости File.Exists(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.GetAccessControlString">
            <summary>Задает оболочка совместимости File.GetAccessControl(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.GetAccessControlStringAccessControlSections">
            <summary>Задает оболочка совместимости File.GetAccessControl(String path, AccessControlSections includeSections)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.GetAttributesString">
            <summary>Задает оболочка совместимости File.GetAttributes(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.GetCreationTimeString">
            <summary>Задает оболочка совместимости File.GetCreationTime(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.GetCreationTimeUtcString">
            <summary>Задает оболочка совместимости File.GetCreationTimeUtc(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.GetLastAccessTimeString">
            <summary>Задает оболочка совместимости File.GetLastAccessTime(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.GetLastAccessTimeUtcString">
            <summary>Задает оболочка совместимости File.GetLastAccessTimeUtc(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.GetLastWriteTimeString">
            <summary>Задает оболочка совместимости File.GetLastWriteTime(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.GetLastWriteTimeUtcString">
            <summary>Задает оболочка совместимости File.GetLastWriteTimeUtc(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.InternalAppendAllTextStringStringEncoding">
            <summary>Задает оболочка совместимости File.InternalAppendAllText(String path, String contents, Encoding encoding)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.InternalCopyStringStringBooleanBoolean">
            <summary>Задает оболочка совместимости File.InternalCopy(String sourceFileName, String destFileName, Boolean overwrite, Boolean checkHost)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.InternalDeleteStringBoolean">
            <summary>Задает оболочка совместимости File.InternalDelete(String path, Boolean checkHost)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.InternalExistsHelperStringBoolean">
            <summary>Задает оболочка совместимости File.InternalExistsHelper(String path, Boolean checkHost)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.InternalExistsString">
            <summary>Задает оболочка совместимости File.InternalExists(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.InternalGetCreationTimeUtcStringBoolean">
            <summary>Задает оболочка совместимости File.InternalGetCreationTimeUtc(String path, Boolean checkHost)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.InternalGetLastAccessTimeUtcStringBoolean">
            <summary>Задает оболочка совместимости File.InternalGetLastAccessTimeUtc(String path, Boolean checkHost)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.InternalGetLastWriteTimeUtcStringBoolean">
            <summary>Задает оболочка совместимости File.InternalGetLastWriteTimeUtc(String path, Boolean checkHost)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.InternalMoveStringStringBoolean">
            <summary>Задает оболочка совместимости File.InternalMove(String sourceFileName, String destFileName, Boolean checkHost)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.InternalReadAllBytesStringBoolean">
            <summary>Задает оболочка совместимости File.InternalReadAllBytes(String path, Boolean checkHost)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.InternalReadAllLinesStringEncoding">
            <summary>Задает оболочка совместимости File.InternalReadAllLines(String path, Encoding encoding)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.InternalReadAllTextStringEncodingBoolean">
            <summary>Задает оболочка совместимости File.InternalReadAllText(String path, Encoding encoding, Boolean checkHost)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.InternalReplaceStringStringStringBoolean">
            <summary>Задает оболочка совместимости File.InternalReplace(String sourceFileName, String destinationFileName, String destinationBackupFileName, Boolean ignoreMetadataErrors)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.InternalWriteAllBytesStringByteArrayBoolean">
            <summary>Задает оболочка совместимости File.InternalWriteAllBytes(String path, Byte[] bytes, Boolean checkHost)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.InternalWriteAllLinesTextWriterIEnumerableOfString">
            <summary>Задает оболочка совместимости File.InternalWriteAllLines(TextWriter writer, IEnumerable`1&lt;String&gt; contents)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.InternalWriteAllTextStringStringEncodingBoolean">
            <summary>Задает оболочка совместимости File.InternalWriteAllText(String path, String contents, Encoding encoding, Boolean checkHost)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.MoveStringString">
            <summary>Задает оболочка совместимости File.Move(String sourceFileName, String destFileName)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.OpenFileStringFileAccessSafeFileHandleOut">
            <summary>Задает оболочка совместимости File.OpenFile(String path, FileAccess access, SafeFileHandle&amp; handle)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.OpenReadString">
            <summary>Задает оболочка совместимости File.OpenRead(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.OpenStringFileMode">
            <summary>Задает оболочка совместимости File.Open(String path, FileMode mode)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.OpenStringFileModeFileAccess">
            <summary>Задает оболочка совместимости File.Open(String path, FileMode mode, FileAccess access)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.OpenStringFileModeFileAccessFileShare">
            <summary>Задает оболочка совместимости File.Open(String path, FileMode mode, FileAccess access, FileShare share)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.OpenTextString">
            <summary>Задает оболочка совместимости File.OpenText(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.OpenWriteString">
            <summary>Задает оболочка совместимости File.OpenWrite(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.ReadAllBytesString">
            <summary>Задает оболочка совместимости File.ReadAllBytes(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.ReadAllLinesString">
            <summary>Задает оболочка совместимости File.ReadAllLines(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.ReadAllLinesStringEncoding">
            <summary>Задает оболочка совместимости File.ReadAllLines(String path, Encoding encoding)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.ReadAllTextString">
            <summary>Задает оболочка совместимости File.ReadAllText(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.ReadAllTextStringEncoding">
            <summary>Задает оболочка совместимости File.ReadAllText(String path, Encoding encoding)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.ReadLinesString">
            <summary>Задает оболочка совместимости File.ReadLines(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.ReadLinesStringEncoding">
            <summary>Задает оболочка совместимости File.ReadLines(String path, Encoding encoding)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.ReplaceStringStringString">
            <summary>Задает оболочка совместимости File.Replace(String sourceFileName, String destinationFileName, String destinationBackupFileName)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.ReplaceStringStringStringBoolean">
            <summary>Задает оболочка совместимости File.Replace(String sourceFileName, String destinationFileName, String destinationBackupFileName, Boolean ignoreMetadataErrors)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.SetAccessControlStringFileSecurity">
            <summary>Задает оболочка совместимости File.SetAccessControl(String path, FileSecurity fileSecurity)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.SetAttributesStringFileAttributes">
            <summary>Задает оболочка совместимости File.SetAttributes(String path, FileAttributes fileAttributes)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.SetCreationTimeStringDateTime">
            <summary>Задает оболочка совместимости File.SetCreationTime(String path, DateTime creationTime)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.SetCreationTimeUtcStringDateTime">
            <summary>Задает оболочка совместимости File.SetCreationTimeUtc(String path, DateTime creationTimeUtc)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.SetLastAccessTimeStringDateTime">
            <summary>Задает оболочка совместимости File.SetLastAccessTime(String path, DateTime lastAccessTime)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.SetLastAccessTimeUtcStringDateTime">
            <summary>Задает оболочка совместимости File.SetLastAccessTimeUtc(String path, DateTime lastAccessTimeUtc)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.SetLastWriteTimeStringDateTime">
            <summary>Задает оболочка совместимости File.SetLastWriteTime(String path, DateTime lastWriteTime)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.SetLastWriteTimeUtcStringDateTime">
            <summary>Задает оболочка совместимости File.SetLastWriteTimeUtc(String path, DateTime lastWriteTimeUtc)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.UnsafeCopyStringStringBoolean">
            <summary>Задает оболочка совместимости File.UnsafeCopy(String sourceFileName, String destFileName, Boolean overwrite)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.UnsafeDeleteString">
            <summary>Задает оболочка совместимости File.UnsafeDelete(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.UnsafeExistsString">
            <summary>Задает оболочка совместимости File.UnsafeExists(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.UnsafeMoveStringString">
            <summary>Задает оболочка совместимости File.UnsafeMove(String sourceFileName, String destFileName)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.UnsafeReadAllBytesString">
            <summary>Задает оболочка совместимости File.UnsafeReadAllBytes(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.UnsafeReadAllTextString">
            <summary>Задает оболочка совместимости File.UnsafeReadAllText(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.UnsafeWriteAllBytesStringByteArray">
            <summary>Задает оболочка совместимости File.UnsafeWriteAllBytes(String path, Byte[] bytes)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.UnsafeWriteAllTextStringString">
            <summary>Задает оболочка совместимости File.UnsafeWriteAllText(String path, String contents)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.WriteAllBytesStringByteArray">
            <summary>Задает оболочка совместимости File.WriteAllBytes(String path, Byte[] bytes)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.WriteAllLinesStringIEnumerableOfString">
            <summary>Задает оболочка совместимости File.WriteAllLines(String path, IEnumerable`1&lt;String&gt; contents)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.WriteAllLinesStringIEnumerableOfStringEncoding">
            <summary>Задает оболочка совместимости File.WriteAllLines(String path, IEnumerable`1&lt;String&gt; contents, Encoding encoding)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.WriteAllLinesStringStringArray">
            <summary>Задает оболочка совместимости File.WriteAllLines(String path, String[] contents)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.WriteAllLinesStringStringArrayEncoding">
            <summary>Задает оболочка совместимости File.WriteAllLines(String path, String[] contents, Encoding encoding)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.WriteAllTextStringString">
            <summary>Задает оболочка совместимости File.WriteAllText(String path, String contents)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFile.WriteAllTextStringStringEncoding">
            <summary>Задает оболочка совместимости File.WriteAllText(String path, String contents, Encoding encoding)</summary>
        </member>
        <member name="T:System.IO.Fakes.ShimFileInfo">
            <summary>Тип оболочки совместимости для System.IO.FileInfo</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimFileInfo.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimFileInfo.#ctor(System.IO.FileInfo)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimFileInfo.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimFileInfo.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimFileInfo.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.AppendText">
            <summary>Задает оболочка совместимости FileInfo.AppendText()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.ConstructorSerializationInfoStreamingContext">
            <summary>Задает оболочка совместимости FileInfo.FileInfo(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.ConstructorString">
            <summary>Задает оболочка совместимости FileInfo.FileInfo(String fileName)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.ConstructorStringBoolean">
            <summary>Задает оболочка совместимости FileInfo.FileInfo(String fullPath, Boolean ignoreThis)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.CopyToString">
            <summary>Задает оболочка совместимости FileInfo.CopyTo(String destFileName)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.CopyToStringBoolean">
            <summary>Задает оболочка совместимости FileInfo.CopyTo(String destFileName, Boolean overwrite)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.Create">
            <summary>Задает оболочка совместимости FileInfo.Create()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.CreateText">
            <summary>Задает оболочка совместимости FileInfo.CreateText()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.Decrypt">
            <summary>Задает оболочка совместимости FileInfo.Decrypt()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.Delete">
            <summary>Задает оболочка совместимости FileInfo.Delete()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.DirectoryGet">
            <summary>Задает оболочка совместимости FileInfo.get_Directory()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.DirectoryNameGet">
            <summary>Задает оболочка совместимости FileInfo.get_DirectoryName()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.Encrypt">
            <summary>Задает оболочка совместимости FileInfo.Encrypt()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.ExistsGet">
            <summary>Задает оболочка совместимости FileInfo.get_Exists()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.GetAccessControl">
            <summary>Задает оболочка совместимости FileInfo.GetAccessControl()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.GetAccessControlAccessControlSections">
            <summary>Задает оболочка совместимости FileInfo.GetAccessControl(AccessControlSections includeSections)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.GetDisplayPathString">
            <summary>Задает оболочка совместимости FileInfo.GetDisplayPath(String originalPath)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.InitStringBoolean">
            <summary>Задает оболочка совместимости FileInfo.Init(String fileName, Boolean checkHost)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.IsReadOnlyGet">
            <summary>Задает оболочка совместимости FileInfo.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.IsReadOnlySetBoolean">
            <summary>Задает оболочка совместимости FileInfo.set_IsReadOnly(Boolean value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.LengthGet">
            <summary>Задает оболочка совместимости FileInfo.get_Length()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.MoveToString">
            <summary>Задает оболочка совместимости FileInfo.MoveTo(String destFileName)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.NameGet">
            <summary>Задает оболочка совместимости FileInfo.get_Name()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.OpenFileMode">
            <summary>Задает оболочка совместимости FileInfo.Open(FileMode mode)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.OpenFileModeFileAccess">
            <summary>Задает оболочка совместимости FileInfo.Open(FileMode mode, FileAccess access)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.OpenFileModeFileAccessFileShare">
            <summary>Задает оболочка совместимости FileInfo.Open(FileMode mode, FileAccess access, FileShare share)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.OpenRead">
            <summary>Задает оболочка совместимости FileInfo.OpenRead()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.OpenText">
            <summary>Задает оболочка совместимости FileInfo.OpenText()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.OpenWrite">
            <summary>Задает оболочка совместимости FileInfo.OpenWrite()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.ReplaceStringString">
            <summary>Задает оболочка совместимости FileInfo.Replace(String destinationFileName, String destinationBackupFileName)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.ReplaceStringStringBoolean">
            <summary>Задает оболочка совместимости FileInfo.Replace(String destinationFileName, String destinationBackupFileName, Boolean ignoreMetadataErrors)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.SetAccessControlFileSecurity">
            <summary>Задает оболочка совместимости FileInfo.SetAccessControl(FileSecurity fileSecurity)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.ToString">
            <summary>Задает оболочка совместимости FileInfo.ToString()</summary>
        </member>
        <member name="T:System.IO.Fakes.ShimFileInfo.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.AllInstances.AppendText">
            <summary>Задает оболочка совместимости FileInfo.AppendText()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.AllInstances.CopyToString">
            <summary>Задает оболочка совместимости FileInfo.CopyTo(String destFileName)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.AllInstances.CopyToStringBoolean">
            <summary>Задает оболочка совместимости FileInfo.CopyTo(String destFileName, Boolean overwrite)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.AllInstances.Create">
            <summary>Задает оболочка совместимости FileInfo.Create()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.AllInstances.CreateText">
            <summary>Задает оболочка совместимости FileInfo.CreateText()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.AllInstances.Decrypt">
            <summary>Задает оболочка совместимости FileInfo.Decrypt()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.AllInstances.Delete">
            <summary>Задает оболочка совместимости FileInfo.Delete()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.AllInstances.DirectoryGet">
            <summary>Задает оболочка совместимости FileInfo.get_Directory()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.AllInstances.DirectoryNameGet">
            <summary>Задает оболочка совместимости FileInfo.get_DirectoryName()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.AllInstances.Encrypt">
            <summary>Задает оболочка совместимости FileInfo.Encrypt()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.AllInstances.ExistsGet">
            <summary>Задает оболочка совместимости FileInfo.get_Exists()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.AllInstances.GetAccessControl">
            <summary>Задает оболочка совместимости FileInfo.GetAccessControl()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.AllInstances.GetAccessControlAccessControlSections">
            <summary>Задает оболочка совместимости FileInfo.GetAccessControl(AccessControlSections includeSections)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.AllInstances.GetDisplayPathString">
            <summary>Задает оболочка совместимости FileInfo.GetDisplayPath(String originalPath)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.AllInstances.InitStringBoolean">
            <summary>Задает оболочка совместимости FileInfo.Init(String fileName, Boolean checkHost)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.AllInstances.IsReadOnlyGet">
            <summary>Задает оболочка совместимости FileInfo.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.AllInstances.IsReadOnlySetBoolean">
            <summary>Задает оболочка совместимости FileInfo.set_IsReadOnly(Boolean value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.AllInstances.LengthGet">
            <summary>Задает оболочка совместимости FileInfo.get_Length()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.AllInstances.MoveToString">
            <summary>Задает оболочка совместимости FileInfo.MoveTo(String destFileName)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.AllInstances.NameGet">
            <summary>Задает оболочка совместимости FileInfo.get_Name()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.AllInstances.OpenFileMode">
            <summary>Задает оболочка совместимости FileInfo.Open(FileMode mode)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.AllInstances.OpenFileModeFileAccess">
            <summary>Задает оболочка совместимости FileInfo.Open(FileMode mode, FileAccess access)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.AllInstances.OpenFileModeFileAccessFileShare">
            <summary>Задает оболочка совместимости FileInfo.Open(FileMode mode, FileAccess access, FileShare share)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.AllInstances.OpenRead">
            <summary>Задает оболочка совместимости FileInfo.OpenRead()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.AllInstances.OpenText">
            <summary>Задает оболочка совместимости FileInfo.OpenText()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.AllInstances.OpenWrite">
            <summary>Задает оболочка совместимости FileInfo.OpenWrite()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.AllInstances.ReplaceStringString">
            <summary>Задает оболочка совместимости FileInfo.Replace(String destinationFileName, String destinationBackupFileName)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.AllInstances.ReplaceStringStringBoolean">
            <summary>Задает оболочка совместимости FileInfo.Replace(String destinationFileName, String destinationBackupFileName, Boolean ignoreMetadataErrors)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.AllInstances.SetAccessControlFileSecurity">
            <summary>Задает оболочка совместимости FileInfo.SetAccessControl(FileSecurity fileSecurity)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileInfo.AllInstances.ToString01">
            <summary>Задает оболочка совместимости FileInfo.ToString()</summary>
        </member>
        <member name="T:System.IO.Fakes.ShimFileStream">
            <summary>Тип оболочки совместимости для System.IO.FileStream</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimFileStream.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimFileStream.#ctor(System.IO.FileStream)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimFileStream.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimFileStream.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimFileStream.Bind(System.IDisposable)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimFileStream.CancelTaskOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Object})">
            <summary>Задает оболочка совместимости FileStream.CancelTask(Object state)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.BeginReadByteArrayInt32Int32AsyncCallbackObject">
            <summary>Задает оболочка совместимости FileStream.BeginRead(Byte[] array, Int32 offset, Int32 numBytes, AsyncCallback userCallback, Object stateObject)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.BeginWriteByteArrayInt32Int32AsyncCallbackObject">
            <summary>Задает оболочка совместимости FileStream.BeginWrite(Byte[] array, Int32 offset, Int32 numBytes, AsyncCallback userCallback, Object stateObject)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.CanReadGet">
            <summary>Задает оболочка совместимости FileStream.get_CanRead()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.CanSeekGet">
            <summary>Задает оболочка совместимости FileStream.get_CanSeek()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.CanWriteGet">
            <summary>Задает оболочка совместимости FileStream.get_CanWrite()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.Constructor">
            <summary>Задает оболочка совместимости FileStream.FileStream()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.ConstructorIntPtrFileAccess">
            <summary>Задает оболочка совместимости FileStream.FileStream(IntPtr handle, FileAccess access)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.ConstructorIntPtrFileAccessBoolean">
            <summary>Задает оболочка совместимости FileStream.FileStream(IntPtr handle, FileAccess access, Boolean ownsHandle)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.ConstructorIntPtrFileAccessBooleanInt32">
            <summary>Задает оболочка совместимости FileStream.FileStream(IntPtr handle, FileAccess access, Boolean ownsHandle, Int32 bufferSize)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.ConstructorIntPtrFileAccessBooleanInt32Boolean">
            <summary>Задает оболочка совместимости FileStream.FileStream(IntPtr handle, FileAccess access, Boolean ownsHandle, Int32 bufferSize, Boolean isAsync)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.ConstructorSafeFileHandleFileAccess">
            <summary>Задает оболочка совместимости FileStream.FileStream(SafeFileHandle handle, FileAccess access)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.ConstructorSafeFileHandleFileAccessInt32">
            <summary>Задает оболочка совместимости FileStream.FileStream(SafeFileHandle handle, FileAccess access, Int32 bufferSize)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.ConstructorSafeFileHandleFileAccessInt32Boolean">
            <summary>Задает оболочка совместимости FileStream.FileStream(SafeFileHandle handle, FileAccess access, Int32 bufferSize, Boolean isAsync)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.ConstructorStringFileMode">
            <summary>Задает оболочка совместимости FileStream.FileStream(String path, FileMode mode)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.ConstructorStringFileModeFileAccess">
            <summary>Задает оболочка совместимости FileStream.FileStream(String path, FileMode mode, FileAccess access)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.ConstructorStringFileModeFileAccessFileShare">
            <summary>Задает оболочка совместимости FileStream.FileStream(String path, FileMode mode, FileAccess access, FileShare share)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.ConstructorStringFileModeFileAccessFileShareInt32">
            <summary>Задает оболочка совместимости FileStream.FileStream(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.ConstructorStringFileModeFileAccessFileShareInt32Boolean">
            <summary>Задает оболочка совместимости FileStream.FileStream(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, Boolean useAsync)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.ConstructorStringFileModeFileAccessFileShareInt32FileOptions">
            <summary>Задает оболочка совместимости FileStream.FileStream(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.ConstructorStringFileModeFileAccessFileShareInt32FileOptionsStringBoolean">
            <summary>Задает оболочка совместимости FileStream.FileStream(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options, String msgPath, Boolean bFromProxy)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.ConstructorStringFileModeFileAccessFileShareInt32FileOptionsStringBooleanBoolean">
            <summary>Задает оболочка совместимости FileStream.FileStream(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options, String msgPath, Boolean bFromProxy, Boolean useLongPath)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.ConstructorStringFileModeFileAccessFileShareInt32FileOptionsStringBooleanBooleanBoolean">
            <summary>Задает оболочка совместимости FileStream.FileStream(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.ConstructorStringFileModeFileSystemRightsFileShareInt32FileOptions">
            <summary>Задает оболочка совместимости FileStream.FileStream(String path, FileMode mode, FileSystemRights rights, FileShare share, Int32 bufferSize, FileOptions options)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.ConstructorStringFileModeFileSystemRightsFileShareInt32FileOptionsFileSecurity">
            <summary>Задает оболочка совместимости FileStream.FileStream(String path, FileMode mode, FileSystemRights rights, FileShare share, Int32 bufferSize, FileOptions options, FileSecurity fileSecurity)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.DisposeBoolean">
            <summary>Задает оболочка совместимости FileStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.EndReadIAsyncResult">
            <summary>Задает оболочка совместимости FileStream.EndRead(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.EndReadTaskIAsyncResult">
            <summary>Задает оболочка совместимости FileStream.EndReadTask(IAsyncResult iar)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.EndWriteIAsyncResult">
            <summary>Задает оболочка совместимости FileStream.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.EndWriteTaskIAsyncResult">
            <summary>Задает оболочка совместимости FileStream.EndWriteTask(IAsyncResult iar)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.Flush">
            <summary>Задает оболочка совместимости FileStream.Flush()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.FlushBoolean">
            <summary>Задает оболочка совместимости FileStream.Flush(Boolean flushToDisk)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.FlushInternalBuffer">
            <summary>Задает оболочка совместимости FileStream.FlushInternalBuffer()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.FlushOSBuffer">
            <summary>Задает оболочка совместимости FileStream.FlushOSBuffer()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.FlushRead">
            <summary>Задает оболочка совместимости FileStream.FlushRead()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.FlushWriteBoolean">
            <summary>Задает оболочка совместимости FileStream.FlushWrite(Boolean calledFromFinalizer)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.GetAccessControl">
            <summary>Задает оболочка совместимости FileStream.GetAccessControl()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.HandleGet">
            <summary>Задает оболочка совместимости FileStream.get_Handle()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.IsAsyncGet">
            <summary>Задает оболочка совместимости FileStream.get_IsAsync()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.LengthGet">
            <summary>Задает оболочка совместимости FileStream.get_Length()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.LockInt64Int64">
            <summary>Задает оболочка совместимости FileStream.Lock(Int64 position, Int64 length)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.NameGet">
            <summary>Задает оболочка совместимости FileStream.get_Name()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.NameInternalGet">
            <summary>Задает оболочка совместимости FileStream.get_NameInternal()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.PositionGet">
            <summary>Задает оболочка совместимости FileStream.get_Position()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.PositionSetInt64">
            <summary>Задает оболочка совместимости FileStream.set_Position(Int64 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.ReadByte">
            <summary>Задает оболочка совместимости FileStream.ReadByte()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.ReadByteArrayInt32Int32">
            <summary>Задает оболочка совместимости FileStream.Read(Byte[] array, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.ReadCoreByteArrayInt32Int32">
            <summary>Задает оболочка совместимости FileStream.ReadCore(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.SafeFileHandleGet">
            <summary>Задает оболочка совместимости FileStream.get_SafeFileHandle()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.SeekCoreInt64SeekOrigin">
            <summary>Задает оболочка совместимости FileStream.SeekCore(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.SeekInt64SeekOrigin">
            <summary>Задает оболочка совместимости FileStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.SetAccessControlFileSecurity">
            <summary>Задает оболочка совместимости FileStream.SetAccessControl(FileSecurity fileSecurity)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.SetLengthCoreInt64">
            <summary>Задает оболочка совместимости FileStream.SetLengthCore(Int64 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.SetLengthInt64">
            <summary>Задает оболочка совместимости FileStream.SetLength(Int64 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.StaticConstructor">
            <summary>Задает оболочка совместимости FileStream.FileStream()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.UnlockInt64Int64">
            <summary>Задает оболочка совместимости FileStream.Unlock(Int64 position, Int64 length)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.VerifyHandleIsSync">
            <summary>Задает оболочка совместимости FileStream.VerifyHandleIsSync()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.VerifyOSHandlePosition">
            <summary>Задает оболочка совместимости FileStream.VerifyOSHandlePosition()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.WriteByteArrayInt32Int32">
            <summary>Задает оболочка совместимости FileStream.Write(Byte[] array, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.WriteByteByte">
            <summary>Задает оболочка совместимости FileStream.WriteByte(Byte value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.WriteCoreByteArrayInt32Int32">
            <summary>Задает оболочка совместимости FileStream.WriteCore(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream._FlushAsyncb__0Object">
            <summary>Задает оболочка совместимости FileStream.&lt;FlushAsync&gt;b__0(Object state)</summary>
        </member>
        <member name="T:System.IO.Fakes.ShimFileStream.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.BeginReadByteArrayInt32Int32AsyncCallbackObject">
            <summary>Задает оболочка совместимости FileStream.BeginRead(Byte[] array, Int32 offset, Int32 numBytes, AsyncCallback userCallback, Object stateObject)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.BeginWriteByteArrayInt32Int32AsyncCallbackObject">
            <summary>Задает оболочка совместимости FileStream.BeginWrite(Byte[] array, Int32 offset, Int32 numBytes, AsyncCallback userCallback, Object stateObject)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.CanReadGet">
            <summary>Задает оболочка совместимости FileStream.get_CanRead()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.CanSeekGet">
            <summary>Задает оболочка совместимости FileStream.get_CanSeek()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.CanWriteGet">
            <summary>Задает оболочка совместимости FileStream.get_CanWrite()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.DisposeBoolean">
            <summary>Задает оболочка совместимости FileStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.EndReadIAsyncResult">
            <summary>Задает оболочка совместимости FileStream.EndRead(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.EndWriteIAsyncResult">
            <summary>Задает оболочка совместимости FileStream.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.Flush">
            <summary>Задает оболочка совместимости FileStream.Flush()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.FlushBoolean">
            <summary>Задает оболочка совместимости FileStream.Flush(Boolean flushToDisk)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.FlushInternalBuffer">
            <summary>Задает оболочка совместимости FileStream.FlushInternalBuffer()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.FlushOSBuffer">
            <summary>Задает оболочка совместимости FileStream.FlushOSBuffer()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.FlushRead">
            <summary>Задает оболочка совместимости FileStream.FlushRead()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.FlushWriteBoolean">
            <summary>Задает оболочка совместимости FileStream.FlushWrite(Boolean calledFromFinalizer)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.GetAccessControl">
            <summary>Задает оболочка совместимости FileStream.GetAccessControl()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.HandleGet">
            <summary>Задает оболочка совместимости FileStream.get_Handle()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.IsAsyncGet">
            <summary>Задает оболочка совместимости FileStream.get_IsAsync()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.LengthGet">
            <summary>Задает оболочка совместимости FileStream.get_Length()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.LockInt64Int64">
            <summary>Задает оболочка совместимости FileStream.Lock(Int64 position, Int64 length)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.NameGet">
            <summary>Задает оболочка совместимости FileStream.get_Name()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.NameInternalGet">
            <summary>Задает оболочка совместимости FileStream.get_NameInternal()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.PositionGet">
            <summary>Задает оболочка совместимости FileStream.get_Position()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.PositionSetInt64">
            <summary>Задает оболочка совместимости FileStream.set_Position(Int64 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.ReadByte">
            <summary>Задает оболочка совместимости FileStream.ReadByte()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.ReadByteArrayInt32Int32">
            <summary>Задает оболочка совместимости FileStream.Read(Byte[] array, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.ReadCoreByteArrayInt32Int32">
            <summary>Задает оболочка совместимости FileStream.ReadCore(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.SafeFileHandleGet">
            <summary>Задает оболочка совместимости FileStream.get_SafeFileHandle()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.SeekCoreInt64SeekOrigin">
            <summary>Задает оболочка совместимости FileStream.SeekCore(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.SeekInt64SeekOrigin">
            <summary>Задает оболочка совместимости FileStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.SetAccessControlFileSecurity">
            <summary>Задает оболочка совместимости FileStream.SetAccessControl(FileSecurity fileSecurity)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.SetLengthCoreInt64">
            <summary>Задает оболочка совместимости FileStream.SetLengthCore(Int64 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.SetLengthInt64">
            <summary>Задает оболочка совместимости FileStream.SetLength(Int64 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.UnlockInt64Int64">
            <summary>Задает оболочка совместимости FileStream.Unlock(Int64 position, Int64 length)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.VerifyHandleIsSync">
            <summary>Задает оболочка совместимости FileStream.VerifyHandleIsSync()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.VerifyOSHandlePosition">
            <summary>Задает оболочка совместимости FileStream.VerifyOSHandlePosition()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.WriteByteArrayInt32Int32">
            <summary>Задает оболочка совместимости FileStream.Write(Byte[] array, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.WriteByteByte">
            <summary>Задает оболочка совместимости FileStream.WriteByte(Byte value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimFileStream.AllInstances.WriteCoreByteArrayInt32Int32">
            <summary>Задает оболочка совместимости FileStream.WriteCore(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="T:System.IO.Fakes.ShimMemoryStream">
            <summary>Тип оболочки совместимости для System.IO.MemoryStream</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimMemoryStream.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimMemoryStream.#ctor(System.IO.MemoryStream)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimMemoryStream.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimMemoryStream.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimMemoryStream.Bind(System.IDisposable)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.CanReadGet">
            <summary>Задает оболочка совместимости MemoryStream.get_CanRead()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.CanSeekGet">
            <summary>Задает оболочка совместимости MemoryStream.get_CanSeek()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.CanWriteGet">
            <summary>Задает оболочка совместимости MemoryStream.get_CanWrite()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.CapacityGet">
            <summary>Задает оболочка совместимости MemoryStream.get_Capacity()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.CapacitySetInt32">
            <summary>Задает оболочка совместимости MemoryStream.set_Capacity(Int32 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.Constructor">
            <summary>Задает оболочка совместимости MemoryStream.MemoryStream()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.ConstructorByteArray">
            <summary>Задает оболочка совместимости MemoryStream.MemoryStream(Byte[] buffer)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.ConstructorByteArrayBoolean">
            <summary>Задает оболочка совместимости MemoryStream.MemoryStream(Byte[] buffer, Boolean writable)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.ConstructorByteArrayInt32Int32">
            <summary>Задает оболочка совместимости MemoryStream.MemoryStream(Byte[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.ConstructorByteArrayInt32Int32Boolean">
            <summary>Задает оболочка совместимости MemoryStream.MemoryStream(Byte[] buffer, Int32 index, Int32 count, Boolean writable)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.ConstructorByteArrayInt32Int32BooleanBoolean">
            <summary>Задает оболочка совместимости MemoryStream.MemoryStream(Byte[] buffer, Int32 index, Int32 count, Boolean writable, Boolean publiclyVisible)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.ConstructorInt32">
            <summary>Задает оболочка совместимости MemoryStream.MemoryStream(Int32 capacity)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.DisposeBoolean">
            <summary>Задает оболочка совместимости MemoryStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.EnsureCapacityInt32">
            <summary>Задает оболочка совместимости MemoryStream.EnsureCapacity(Int32 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.EnsureWriteable">
            <summary>Задает оболочка совместимости MemoryStream.EnsureWriteable()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.Flush">
            <summary>Задает оболочка совместимости MemoryStream.Flush()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.GetBuffer">
            <summary>Задает оболочка совместимости MemoryStream.GetBuffer()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.InternalEmulateReadInt32">
            <summary>Задает оболочка совместимости MemoryStream.InternalEmulateRead(Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.InternalGetBuffer">
            <summary>Задает оболочка совместимости MemoryStream.InternalGetBuffer()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.InternalGetOriginAndLengthInt32OutInt32Out">
            <summary>Задает оболочка совместимости MemoryStream.InternalGetOriginAndLength(Int32&amp; origin, Int32&amp; length)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.InternalGetPosition">
            <summary>Задает оболочка совместимости MemoryStream.InternalGetPosition()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.InternalReadInt32">
            <summary>Задает оболочка совместимости MemoryStream.InternalReadInt32()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.LengthGet">
            <summary>Задает оболочка совместимости MemoryStream.get_Length()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.PositionGet">
            <summary>Задает оболочка совместимости MemoryStream.get_Position()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.PositionSetInt64">
            <summary>Задает оболочка совместимости MemoryStream.set_Position(Int64 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.ReadByte">
            <summary>Задает оболочка совместимости MemoryStream.ReadByte()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.ReadByteArrayInt32Int32">
            <summary>Задает оболочка совместимости MemoryStream.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.SeekInt64SeekOrigin">
            <summary>Задает оболочка совместимости MemoryStream.Seek(Int64 offset, SeekOrigin loc)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.SetLengthInt64">
            <summary>Задает оболочка совместимости MemoryStream.SetLength(Int64 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.ToArray">
            <summary>Задает оболочка совместимости MemoryStream.ToArray()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.WriteByteArrayInt32Int32">
            <summary>Задает оболочка совместимости MemoryStream.Write(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.WriteByteByte">
            <summary>Задает оболочка совместимости MemoryStream.WriteByte(Byte value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.WriteToStream">
            <summary>Задает оболочка совместимости MemoryStream.WriteTo(Stream stream)</summary>
        </member>
        <member name="T:System.IO.Fakes.ShimMemoryStream.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.AllInstances.CanReadGet">
            <summary>Задает оболочка совместимости MemoryStream.get_CanRead()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.AllInstances.CanSeekGet">
            <summary>Задает оболочка совместимости MemoryStream.get_CanSeek()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.AllInstances.CanWriteGet">
            <summary>Задает оболочка совместимости MemoryStream.get_CanWrite()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.AllInstances.CapacityGet">
            <summary>Задает оболочка совместимости MemoryStream.get_Capacity()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.AllInstances.CapacitySetInt32">
            <summary>Задает оболочка совместимости MemoryStream.set_Capacity(Int32 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.AllInstances.DisposeBoolean">
            <summary>Задает оболочка совместимости MemoryStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.AllInstances.EnsureCapacityInt32">
            <summary>Задает оболочка совместимости MemoryStream.EnsureCapacity(Int32 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.AllInstances.EnsureWriteable">
            <summary>Задает оболочка совместимости MemoryStream.EnsureWriteable()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.AllInstances.Flush">
            <summary>Задает оболочка совместимости MemoryStream.Flush()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.AllInstances.GetBuffer">
            <summary>Задает оболочка совместимости MemoryStream.GetBuffer()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.AllInstances.InternalEmulateReadInt32">
            <summary>Задает оболочка совместимости MemoryStream.InternalEmulateRead(Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.AllInstances.InternalGetBuffer">
            <summary>Задает оболочка совместимости MemoryStream.InternalGetBuffer()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.AllInstances.InternalGetOriginAndLengthInt32OutInt32Out">
            <summary>Задает оболочка совместимости MemoryStream.InternalGetOriginAndLength(Int32&amp; origin, Int32&amp; length)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.AllInstances.InternalGetPosition">
            <summary>Задает оболочка совместимости MemoryStream.InternalGetPosition()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.AllInstances.InternalReadInt32">
            <summary>Задает оболочка совместимости MemoryStream.InternalReadInt32()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.AllInstances.LengthGet">
            <summary>Задает оболочка совместимости MemoryStream.get_Length()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.AllInstances.PositionGet">
            <summary>Задает оболочка совместимости MemoryStream.get_Position()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.AllInstances.PositionSetInt64">
            <summary>Задает оболочка совместимости MemoryStream.set_Position(Int64 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.AllInstances.ReadByte">
            <summary>Задает оболочка совместимости MemoryStream.ReadByte()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.AllInstances.ReadByteArrayInt32Int32">
            <summary>Задает оболочка совместимости MemoryStream.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.AllInstances.SeekInt64SeekOrigin">
            <summary>Задает оболочка совместимости MemoryStream.Seek(Int64 offset, SeekOrigin loc)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.AllInstances.SetLengthInt64">
            <summary>Задает оболочка совместимости MemoryStream.SetLength(Int64 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.AllInstances.ToArray">
            <summary>Задает оболочка совместимости MemoryStream.ToArray()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.AllInstances.WriteByteArrayInt32Int32">
            <summary>Задает оболочка совместимости MemoryStream.Write(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.AllInstances.WriteByteByte">
            <summary>Задает оболочка совместимости MemoryStream.WriteByte(Byte value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimMemoryStream.AllInstances.WriteToStream">
            <summary>Задает оболочка совместимости MemoryStream.WriteTo(Stream stream)</summary>
        </member>
        <member name="T:System.IO.Fakes.ShimStream">
            <summary>Тип оболочки совместимости для System.IO.Stream</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimStream.#ctor(System.IO.Stream)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimStream.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimStream.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimStream.Bind(System.IDisposable)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.BeginEndReadAsyncByteArrayInt32Int32">
            <summary>Задает оболочка совместимости Stream.BeginEndReadAsync(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.BeginEndWriteAsyncByteArrayInt32Int32">
            <summary>Задает оболочка совместимости Stream.BeginEndWriteAsync(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.BeginReadByteArrayInt32Int32AsyncCallbackObject">
            <summary>Задает оболочка совместимости Stream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.BeginReadInternalByteArrayInt32Int32AsyncCallbackObjectBoolean">
            <summary>Задает оболочка совместимости Stream.BeginReadInternal(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state, Boolean serializeAsynchronously)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.BeginWriteByteArrayInt32Int32AsyncCallbackObject">
            <summary>Задает оболочка совместимости Stream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.BeginWriteInternalByteArrayInt32Int32AsyncCallbackObjectBoolean">
            <summary>Задает оболочка совместимости Stream.BeginWriteInternal(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state, Boolean serializeAsynchronously)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.BlockingBeginReadByteArrayInt32Int32AsyncCallbackObject">
            <summary>Задает оболочка совместимости Stream.BlockingBeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.BlockingBeginWriteByteArrayInt32Int32AsyncCallbackObject">
            <summary>Задает оболочка совместимости Stream.BlockingBeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.BlockingEndReadIAsyncResult">
            <summary>Задает оболочка совместимости Stream.BlockingEndRead(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.BlockingEndWriteIAsyncResult">
            <summary>Задает оболочка совместимости Stream.BlockingEndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.CanTimeoutGet">
            <summary>Задает оболочка совместимости Stream.get_CanTimeout()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.Close">
            <summary>Задает оболочка совместимости Stream.Close()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.Constructor">
            <summary>Задает оболочка совместимости Stream.Stream()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.CopyToAsyncStream">
            <summary>Задает оболочка совместимости Stream.CopyToAsync(Stream destination)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.CopyToAsyncStreamInt32">
            <summary>Задает оболочка совместимости Stream.CopyToAsync(Stream destination, Int32 bufferSize)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.CopyToStream">
            <summary>Задает оболочка совместимости Stream.CopyTo(Stream destination)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.CopyToStreamInt32">
            <summary>Задает оболочка совместимости Stream.CopyTo(Stream destination, Int32 bufferSize)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.Dispose">
            <summary>Задает оболочка совместимости Stream.Dispose()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.DisposeBoolean">
            <summary>Задает оболочка совместимости Stream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.EndReadIAsyncResult">
            <summary>Задает оболочка совместимости Stream.EndRead(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.EndWriteIAsyncResult">
            <summary>Задает оболочка совместимости Stream.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.FlushAsync">
            <summary>Задает оболочка совместимости Stream.FlushAsync()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.InternalCopyToStreamInt32">
            <summary>Задает оболочка совместимости Stream.InternalCopyTo(Stream destination, Int32 bufferSize)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.ObjectInvariant">
            <summary>Задает оболочка совместимости Stream.ObjectInvariant()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.ReadAsyncByteArrayInt32Int32">
            <summary>Задает оболочка совместимости Stream.ReadAsync(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.ReadByte">
            <summary>Задает оболочка совместимости Stream.ReadByte()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.ReadTimeoutGet">
            <summary>Задает оболочка совместимости Stream.get_ReadTimeout()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.ReadTimeoutSetInt32">
            <summary>Задает оболочка совместимости Stream.set_ReadTimeout(Int32 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.StaticConstructor">
            <summary>Задает оболочка совместимости Stream.Stream()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.SynchronizedStream">
            <summary>Задает оболочка совместимости Stream.Synchronized(Stream stream)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.WriteAsyncByteArrayInt32Int32">
            <summary>Задает оболочка совместимости Stream.WriteAsync(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.WriteByteByte">
            <summary>Задает оболочка совместимости Stream.WriteByte(Byte value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.WriteTimeoutGet">
            <summary>Задает оболочка совместимости Stream.get_WriteTimeout()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.WriteTimeoutSetInt32">
            <summary>Задает оболочка совместимости Stream.set_WriteTimeout(Int32 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream._BeginEndReadAsyncb__eStreamIAsyncResult">
            <summary>Задает оболочка совместимости Stream.&lt;BeginEndReadAsync&gt;b__e(Stream stream, IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream._BeginReadInternalb__aObject">
            <summary>Задает оболочка совместимости Stream.&lt;BeginReadInternal&gt;b__a(Object param0)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream._BeginWriteInternalb__11Object">
            <summary>Задает оболочка совместимости Stream.&lt;BeginWriteInternal&gt;b__11(Object param0)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream._FlushAsyncb__8Object">
            <summary>Задает оболочка совместимости Stream.&lt;FlushAsync&gt;b__8(Object state)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream._RunReadWriteTaskWhenReadyb__13TaskObject">
            <summary>Задает оболочка совместимости Stream.&lt;RunReadWriteTaskWhenReady&gt;b__13(Task t, Object state)</summary>
        </member>
        <member name="T:System.IO.Fakes.ShimStream.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.AllInstances.BeginEndReadAsyncByteArrayInt32Int32">
            <summary>Задает оболочка совместимости Stream.BeginEndReadAsync(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.AllInstances.BeginEndWriteAsyncByteArrayInt32Int32">
            <summary>Задает оболочка совместимости Stream.BeginEndWriteAsync(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.AllInstances.BeginReadByteArrayInt32Int32AsyncCallbackObject">
            <summary>Задает оболочка совместимости Stream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.AllInstances.BeginReadInternalByteArrayInt32Int32AsyncCallbackObjectBoolean">
            <summary>Задает оболочка совместимости Stream.BeginReadInternal(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state, Boolean serializeAsynchronously)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.AllInstances.BeginWriteByteArrayInt32Int32AsyncCallbackObject">
            <summary>Задает оболочка совместимости Stream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.AllInstances.BeginWriteInternalByteArrayInt32Int32AsyncCallbackObjectBoolean">
            <summary>Задает оболочка совместимости Stream.BeginWriteInternal(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state, Boolean serializeAsynchronously)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.AllInstances.BlockingBeginReadByteArrayInt32Int32AsyncCallbackObject">
            <summary>Задает оболочка совместимости Stream.BlockingBeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.AllInstances.BlockingBeginWriteByteArrayInt32Int32AsyncCallbackObject">
            <summary>Задает оболочка совместимости Stream.BlockingBeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.AllInstances.CanTimeoutGet">
            <summary>Задает оболочка совместимости Stream.get_CanTimeout()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.AllInstances.Close">
            <summary>Задает оболочка совместимости Stream.Close()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.AllInstances.CopyToAsyncStream">
            <summary>Задает оболочка совместимости Stream.CopyToAsync(Stream destination)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.AllInstances.CopyToAsyncStreamInt32">
            <summary>Задает оболочка совместимости Stream.CopyToAsync(Stream destination, Int32 bufferSize)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.AllInstances.CopyToStream">
            <summary>Задает оболочка совместимости Stream.CopyTo(Stream destination)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.AllInstances.CopyToStreamInt32">
            <summary>Задает оболочка совместимости Stream.CopyTo(Stream destination, Int32 bufferSize)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.AllInstances.Dispose">
            <summary>Задает оболочка совместимости Stream.Dispose()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.AllInstances.DisposeBoolean">
            <summary>Задает оболочка совместимости Stream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.AllInstances.EndReadIAsyncResult">
            <summary>Задает оболочка совместимости Stream.EndRead(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.AllInstances.EndWriteIAsyncResult">
            <summary>Задает оболочка совместимости Stream.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.AllInstances.FlushAsync">
            <summary>Задает оболочка совместимости Stream.FlushAsync()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.AllInstances.InternalCopyToStreamInt32">
            <summary>Задает оболочка совместимости Stream.InternalCopyTo(Stream destination, Int32 bufferSize)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.AllInstances.ObjectInvariant">
            <summary>Задает оболочка совместимости Stream.ObjectInvariant()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.AllInstances.ReadAsyncByteArrayInt32Int32">
            <summary>Задает оболочка совместимости Stream.ReadAsync(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.AllInstances.ReadByte">
            <summary>Задает оболочка совместимости Stream.ReadByte()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.AllInstances.ReadTimeoutGet">
            <summary>Задает оболочка совместимости Stream.get_ReadTimeout()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.AllInstances.ReadTimeoutSetInt32">
            <summary>Задает оболочка совместимости Stream.set_ReadTimeout(Int32 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.AllInstances.WriteAsyncByteArrayInt32Int32">
            <summary>Задает оболочка совместимости Stream.WriteAsync(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.AllInstances.WriteByteByte">
            <summary>Задает оболочка совместимости Stream.WriteByte(Byte value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.AllInstances.WriteTimeoutGet">
            <summary>Задает оболочка совместимости Stream.get_WriteTimeout()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStream.AllInstances.WriteTimeoutSetInt32">
            <summary>Задает оболочка совместимости Stream.set_WriteTimeout(Int32 value)</summary>
        </member>
        <member name="T:System.IO.Fakes.ShimStreamReader">
            <summary>Тип оболочки совместимости для System.IO.StreamReader</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimStreamReader.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimStreamReader.#ctor(System.IO.StreamReader)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimStreamReader.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimStreamReader.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimStreamReader.Bind(System.IDisposable)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.BaseStreamGet">
            <summary>Задает оболочка совместимости StreamReader.get_BaseStream()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.ByteBuffer_PropGet">
            <summary>Задает оболочка совместимости StreamReader.get_ByteBuffer_Prop()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.ByteLen_PropGet">
            <summary>Задает оболочка совместимости StreamReader.get_ByteLen_Prop()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.ByteLen_PropSetInt32">
            <summary>Задает оболочка совместимости StreamReader.set_ByteLen_Prop(Int32 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.BytePos_PropGet">
            <summary>Задает оболочка совместимости StreamReader.get_BytePos_Prop()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.BytePos_PropSetInt32">
            <summary>Задает оболочка совместимости StreamReader.set_BytePos_Prop(Int32 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.CharBuffer_PropGet">
            <summary>Задает оболочка совместимости StreamReader.get_CharBuffer_Prop()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.CharLen_PropGet">
            <summary>Задает оболочка совместимости StreamReader.get_CharLen_Prop()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.CharLen_PropSetInt32">
            <summary>Задает оболочка совместимости StreamReader.set_CharLen_Prop(Int32 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.CharPos_PropGet">
            <summary>Задает оболочка совместимости StreamReader.get_CharPos_Prop()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.CharPos_PropSetInt32">
            <summary>Задает оболочка совместимости StreamReader.set_CharPos_Prop(Int32 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.CheckAsyncTaskInProgress">
            <summary>Задает оболочка совместимости StreamReader.CheckAsyncTaskInProgress()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.CheckPreamble_PropGet">
            <summary>Задает оболочка совместимости StreamReader.get_CheckPreamble_Prop()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.Close">
            <summary>Задает оболочка совместимости StreamReader.Close()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.CompressBufferInt32">
            <summary>Задает оболочка совместимости StreamReader.CompressBuffer(Int32 n)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.Constructor">
            <summary>Задает оболочка совместимости StreamReader.StreamReader()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.ConstructorStream">
            <summary>Задает оболочка совместимости StreamReader.StreamReader(Stream stream)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.ConstructorStreamBoolean">
            <summary>Задает оболочка совместимости StreamReader.StreamReader(Stream stream, Boolean detectEncodingFromByteOrderMarks)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.ConstructorStreamEncoding">
            <summary>Задает оболочка совместимости StreamReader.StreamReader(Stream stream, Encoding encoding)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.ConstructorStreamEncodingBoolean">
            <summary>Задает оболочка совместимости StreamReader.StreamReader(Stream stream, Encoding encoding, Boolean detectEncodingFromByteOrderMarks)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.ConstructorStreamEncodingBooleanInt32">
            <summary>Задает оболочка совместимости StreamReader.StreamReader(Stream stream, Encoding encoding, Boolean detectEncodingFromByteOrderMarks, Int32 bufferSize)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.ConstructorStreamEncodingBooleanInt32Boolean">
            <summary>Задает оболочка совместимости StreamReader.StreamReader(Stream stream, Encoding encoding, Boolean detectEncodingFromByteOrderMarks, Int32 bufferSize, Boolean leaveOpen)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.ConstructorString">
            <summary>Задает оболочка совместимости StreamReader.StreamReader(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.ConstructorStringBoolean">
            <summary>Задает оболочка совместимости StreamReader.StreamReader(String path, Boolean detectEncodingFromByteOrderMarks)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.ConstructorStringEncoding">
            <summary>Задает оболочка совместимости StreamReader.StreamReader(String path, Encoding encoding)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.ConstructorStringEncodingBoolean">
            <summary>Задает оболочка совместимости StreamReader.StreamReader(String path, Encoding encoding, Boolean detectEncodingFromByteOrderMarks)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.ConstructorStringEncodingBooleanInt32">
            <summary>Задает оболочка совместимости StreamReader.StreamReader(String path, Encoding encoding, Boolean detectEncodingFromByteOrderMarks, Int32 bufferSize)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.ConstructorStringEncodingBooleanInt32Boolean">
            <summary>Задает оболочка совместимости StreamReader.StreamReader(String path, Encoding encoding, Boolean detectEncodingFromByteOrderMarks, Int32 bufferSize, Boolean checkHost)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.CurrentEncodingGet">
            <summary>Задает оболочка совместимости StreamReader.get_CurrentEncoding()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.Decoder_PropGet">
            <summary>Задает оболочка совместимости StreamReader.get_Decoder_Prop()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.DefaultBufferSizeGet">
            <summary>Задает оболочка совместимости StreamReader.get_DefaultBufferSize()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.DetectEncoding">
            <summary>Задает оболочка совместимости StreamReader.DetectEncoding()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.DetectEncoding_PropGet">
            <summary>Задает оболочка совместимости StreamReader.get_DetectEncoding_Prop()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.DiscardBufferedData">
            <summary>Задает оболочка совместимости StreamReader.DiscardBufferedData()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.DisposeBoolean">
            <summary>Задает оболочка совместимости StreamReader.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.EndOfStreamGet">
            <summary>Задает оболочка совместимости StreamReader.get_EndOfStream()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.InitStream">
            <summary>Задает оболочка совместимости StreamReader.Init(Stream stream)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.InitStreamEncodingBooleanInt32Boolean">
            <summary>Задает оболочка совместимости StreamReader.Init(Stream stream, Encoding encoding, Boolean detectEncodingFromByteOrderMarks, Int32 bufferSize, Boolean leaveOpen)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.IsBlocked_PropGet">
            <summary>Задает оболочка совместимости StreamReader.get_IsBlocked_Prop()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.IsBlocked_PropSetBoolean">
            <summary>Задает оболочка совместимости StreamReader.set_IsBlocked_Prop(Boolean value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.IsPreamble">
            <summary>Задает оболочка совместимости StreamReader.IsPreamble()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.LeaveOpenGet">
            <summary>Задает оболочка совместимости StreamReader.get_LeaveOpen()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.MaxCharsPerBuffer_PropGet">
            <summary>Задает оболочка совместимости StreamReader.get_MaxCharsPerBuffer_Prop()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.Peek">
            <summary>Задает оболочка совместимости StreamReader.Peek()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.Preamble_PropGet">
            <summary>Задает оболочка совместимости StreamReader.get_Preamble_Prop()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.Read">
            <summary>Задает оболочка совместимости StreamReader.Read()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.ReadAsyncCharArrayInt32Int32">
            <summary>Задает оболочка совместимости StreamReader.ReadAsync(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.ReadAsyncInternalCharArrayInt32Int32">
            <summary>Задает оболочка совместимости StreamReader.ReadAsyncInternal(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.ReadBlockAsyncCharArrayInt32Int32">
            <summary>Задает оболочка совместимости StreamReader.ReadBlockAsync(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.ReadBlockCharArrayInt32Int32">
            <summary>Задает оболочка совместимости StreamReader.ReadBlock(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.ReadBuffer">
            <summary>Задает оболочка совместимости StreamReader.ReadBuffer()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.ReadBufferAsync">
            <summary>Задает оболочка совместимости StreamReader.ReadBufferAsync()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.ReadBufferCharArrayInt32Int32BooleanOut">
            <summary>Задает оболочка совместимости StreamReader.ReadBuffer(Char[] userBuffer, Int32 userOffset, Int32 desiredChars, Boolean&amp; readToUserBuffer)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.ReadCharArrayInt32Int32">
            <summary>Задает оболочка совместимости StreamReader.Read(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.ReadLine">
            <summary>Задает оболочка совместимости StreamReader.ReadLine()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.ReadLineAsync">
            <summary>Задает оболочка совместимости StreamReader.ReadLineAsync()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.ReadLineAsyncInternal">
            <summary>Задает оболочка совместимости StreamReader.ReadLineAsyncInternal()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.ReadToEnd">
            <summary>Задает оболочка совместимости StreamReader.ReadToEnd()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.ReadToEndAsync">
            <summary>Задает оболочка совместимости StreamReader.ReadToEndAsync()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.ReadToEndAsyncInternal">
            <summary>Задает оболочка совместимости StreamReader.ReadToEndAsyncInternal()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.StaticConstructor">
            <summary>Задает оболочка совместимости StreamReader.StreamReader()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.Stream_PropGet">
            <summary>Задает оболочка совместимости StreamReader.get_Stream_Prop()</summary>
        </member>
        <member name="T:System.IO.Fakes.ShimStreamReader.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.BaseStreamGet">
            <summary>Задает оболочка совместимости StreamReader.get_BaseStream()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.ByteBuffer_PropGet">
            <summary>Задает оболочка совместимости StreamReader.get_ByteBuffer_Prop()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.ByteLen_PropGet">
            <summary>Задает оболочка совместимости StreamReader.get_ByteLen_Prop()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.ByteLen_PropSetInt32">
            <summary>Задает оболочка совместимости StreamReader.set_ByteLen_Prop(Int32 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.BytePos_PropGet">
            <summary>Задает оболочка совместимости StreamReader.get_BytePos_Prop()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.BytePos_PropSetInt32">
            <summary>Задает оболочка совместимости StreamReader.set_BytePos_Prop(Int32 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.CharBuffer_PropGet">
            <summary>Задает оболочка совместимости StreamReader.get_CharBuffer_Prop()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.CharLen_PropGet">
            <summary>Задает оболочка совместимости StreamReader.get_CharLen_Prop()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.CharLen_PropSetInt32">
            <summary>Задает оболочка совместимости StreamReader.set_CharLen_Prop(Int32 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.CharPos_PropGet">
            <summary>Задает оболочка совместимости StreamReader.get_CharPos_Prop()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.CharPos_PropSetInt32">
            <summary>Задает оболочка совместимости StreamReader.set_CharPos_Prop(Int32 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.CheckAsyncTaskInProgress">
            <summary>Задает оболочка совместимости StreamReader.CheckAsyncTaskInProgress()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.CheckPreamble_PropGet">
            <summary>Задает оболочка совместимости StreamReader.get_CheckPreamble_Prop()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.Close">
            <summary>Задает оболочка совместимости StreamReader.Close()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.CompressBufferInt32">
            <summary>Задает оболочка совместимости StreamReader.CompressBuffer(Int32 n)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.CurrentEncodingGet">
            <summary>Задает оболочка совместимости StreamReader.get_CurrentEncoding()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.Decoder_PropGet">
            <summary>Задает оболочка совместимости StreamReader.get_Decoder_Prop()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.DetectEncoding">
            <summary>Задает оболочка совместимости StreamReader.DetectEncoding()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.DetectEncoding_PropGet">
            <summary>Задает оболочка совместимости StreamReader.get_DetectEncoding_Prop()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.DiscardBufferedData">
            <summary>Задает оболочка совместимости StreamReader.DiscardBufferedData()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.DisposeBoolean">
            <summary>Задает оболочка совместимости StreamReader.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.EndOfStreamGet">
            <summary>Задает оболочка совместимости StreamReader.get_EndOfStream()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.InitStream">
            <summary>Задает оболочка совместимости StreamReader.Init(Stream stream)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.InitStreamEncodingBooleanInt32Boolean">
            <summary>Задает оболочка совместимости StreamReader.Init(Stream stream, Encoding encoding, Boolean detectEncodingFromByteOrderMarks, Int32 bufferSize, Boolean leaveOpen)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.IsBlocked_PropGet">
            <summary>Задает оболочка совместимости StreamReader.get_IsBlocked_Prop()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.IsBlocked_PropSetBoolean">
            <summary>Задает оболочка совместимости StreamReader.set_IsBlocked_Prop(Boolean value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.IsPreamble">
            <summary>Задает оболочка совместимости StreamReader.IsPreamble()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.LeaveOpenGet">
            <summary>Задает оболочка совместимости StreamReader.get_LeaveOpen()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.MaxCharsPerBuffer_PropGet">
            <summary>Задает оболочка совместимости StreamReader.get_MaxCharsPerBuffer_Prop()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.Peek">
            <summary>Задает оболочка совместимости StreamReader.Peek()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.Preamble_PropGet">
            <summary>Задает оболочка совместимости StreamReader.get_Preamble_Prop()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.Read">
            <summary>Задает оболочка совместимости StreamReader.Read()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.ReadAsyncCharArrayInt32Int32">
            <summary>Задает оболочка совместимости StreamReader.ReadAsync(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.ReadAsyncInternalCharArrayInt32Int32">
            <summary>Задает оболочка совместимости StreamReader.ReadAsyncInternal(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.ReadBlockAsyncCharArrayInt32Int32">
            <summary>Задает оболочка совместимости StreamReader.ReadBlockAsync(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.ReadBlockCharArrayInt32Int32">
            <summary>Задает оболочка совместимости StreamReader.ReadBlock(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.ReadBuffer">
            <summary>Задает оболочка совместимости StreamReader.ReadBuffer()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.ReadBufferAsync">
            <summary>Задает оболочка совместимости StreamReader.ReadBufferAsync()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.ReadBufferCharArrayInt32Int32BooleanOut">
            <summary>Задает оболочка совместимости StreamReader.ReadBuffer(Char[] userBuffer, Int32 userOffset, Int32 desiredChars, Boolean&amp; readToUserBuffer)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.ReadCharArrayInt32Int32">
            <summary>Задает оболочка совместимости StreamReader.Read(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.ReadLine">
            <summary>Задает оболочка совместимости StreamReader.ReadLine()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.ReadLineAsync">
            <summary>Задает оболочка совместимости StreamReader.ReadLineAsync()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.ReadLineAsyncInternal">
            <summary>Задает оболочка совместимости StreamReader.ReadLineAsyncInternal()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.ReadToEnd">
            <summary>Задает оболочка совместимости StreamReader.ReadToEnd()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.ReadToEndAsync">
            <summary>Задает оболочка совместимости StreamReader.ReadToEndAsync()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.ReadToEndAsyncInternal">
            <summary>Задает оболочка совместимости StreamReader.ReadToEndAsyncInternal()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamReader.AllInstances.Stream_PropGet">
            <summary>Задает оболочка совместимости StreamReader.get_Stream_Prop()</summary>
        </member>
        <member name="T:System.IO.Fakes.ShimStreamWriter">
            <summary>Тип оболочки совместимости для System.IO.StreamWriter</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimStreamWriter.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimStreamWriter.#ctor(System.IO.StreamWriter)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimStreamWriter.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimStreamWriter.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimStreamWriter.Bind(System.IDisposable)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.AutoFlushGet">
            <summary>Задает оболочка совместимости StreamWriter.get_AutoFlush()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.AutoFlushSetBoolean">
            <summary>Задает оболочка совместимости StreamWriter.set_AutoFlush(Boolean value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.BaseStreamGet">
            <summary>Задает оболочка совместимости StreamWriter.get_BaseStream()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.CharPos_PropSetInt32">
            <summary>Задает оболочка совместимости StreamWriter.set_CharPos_Prop(Int32 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.CheckAsyncTaskInProgress">
            <summary>Задает оболочка совместимости StreamWriter.CheckAsyncTaskInProgress()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.Close">
            <summary>Задает оболочка совместимости StreamWriter.Close()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.Constructor">
            <summary>Задает оболочка совместимости StreamWriter.StreamWriter()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.ConstructorStream">
            <summary>Задает оболочка совместимости StreamWriter.StreamWriter(Stream stream)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.ConstructorStreamEncoding">
            <summary>Задает оболочка совместимости StreamWriter.StreamWriter(Stream stream, Encoding encoding)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.ConstructorStreamEncodingInt32">
            <summary>Задает оболочка совместимости StreamWriter.StreamWriter(Stream stream, Encoding encoding, Int32 bufferSize)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.ConstructorStreamEncodingInt32Boolean">
            <summary>Задает оболочка совместимости StreamWriter.StreamWriter(Stream stream, Encoding encoding, Int32 bufferSize, Boolean leaveOpen)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.ConstructorString">
            <summary>Задает оболочка совместимости StreamWriter.StreamWriter(String path)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.ConstructorStringBoolean">
            <summary>Задает оболочка совместимости StreamWriter.StreamWriter(String path, Boolean append)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.ConstructorStringBooleanEncoding">
            <summary>Задает оболочка совместимости StreamWriter.StreamWriter(String path, Boolean append, Encoding encoding)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.ConstructorStringBooleanEncodingInt32">
            <summary>Задает оболочка совместимости StreamWriter.StreamWriter(String path, Boolean append, Encoding encoding, Int32 bufferSize)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.ConstructorStringBooleanEncodingInt32Boolean">
            <summary>Задает оболочка совместимости StreamWriter.StreamWriter(String path, Boolean append, Encoding encoding, Int32 bufferSize, Boolean checkHost)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.CreateFileStringBooleanBoolean">
            <summary>Задает оболочка совместимости StreamWriter.CreateFile(String path, Boolean append, Boolean checkHost)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.DisposeBoolean">
            <summary>Задает оболочка совместимости StreamWriter.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.EncodingGet">
            <summary>Задает оболочка совместимости StreamWriter.get_Encoding()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.Flush">
            <summary>Задает оболочка совместимости StreamWriter.Flush()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.FlushAsync">
            <summary>Задает оболочка совместимости StreamWriter.FlushAsync()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.FlushAsyncInternalBooleanBooleanCharArrayInt32">
            <summary>Задает оболочка совместимости StreamWriter.FlushAsyncInternal(Boolean flushStream, Boolean flushEncoder, Char[] sCharBuffer, Int32 sCharPos)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.FlushAsyncInternalStreamWriterBooleanBooleanCharArrayInt32BooleanEncodingEncoderByteArrayStream">
            <summary>Задает оболочка совместимости StreamWriter.FlushAsyncInternal(StreamWriter _this, Boolean flushStream, Boolean flushEncoder, Char[] charBuffer, Int32 charPos, Boolean haveWrittenPreamble, Encoding encoding, Encoder encoder, Byte[] byteBuffer, Stream stream)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.FlushBooleanBoolean">
            <summary>Задает оболочка совместимости StreamWriter.Flush(Boolean flushStream, Boolean flushEncoder)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.HaveWrittenPreambleSetBoolean">
            <summary>Задает оболочка совместимости StreamWriter.set_HaveWrittenPreamble(Boolean value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.HaveWrittenPreamble_PropSetBoolean">
            <summary>Задает оболочка совместимости StreamWriter.set_HaveWrittenPreamble_Prop(Boolean value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.InitStreamEncodingInt32Boolean">
            <summary>Задает оболочка совместимости StreamWriter.Init(Stream streamArg, Encoding encodingArg, Int32 bufferSize, Boolean shouldLeaveOpen)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.LeaveOpenGet">
            <summary>Задает оболочка совместимости StreamWriter.get_LeaveOpen()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.StaticConstructor">
            <summary>Задает оболочка совместимости StreamWriter.StreamWriter()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.UTF8NoBOMGet">
            <summary>Задает оболочка совместимости StreamWriter.get_UTF8NoBOM()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.WriteAsyncChar">
            <summary>Задает оболочка совместимости StreamWriter.WriteAsync(Char value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.WriteAsyncCharArrayInt32Int32">
            <summary>Задает оболочка совместимости StreamWriter.WriteAsync(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.WriteAsyncInternalStreamWriterCharArrayInt32Int32CharArrayInt32Int32CharArrayBooleanBoolean">
            <summary>Задает оболочка совместимости StreamWriter.WriteAsyncInternal(StreamWriter _this, Char[] buffer, Int32 index, Int32 count, Char[] charBuffer, Int32 charPos, Int32 charLen, Char[] coreNewLine, Boolean autoFlush, Boolean appendNewLine)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.WriteAsyncInternalStreamWriterCharCharArrayInt32Int32CharArrayBooleanBoolean">
            <summary>Задает оболочка совместимости StreamWriter.WriteAsyncInternal(StreamWriter _this, Char value, Char[] charBuffer, Int32 charPos, Int32 charLen, Char[] coreNewLine, Boolean autoFlush, Boolean appendNewLine)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.WriteAsyncInternalStreamWriterStringCharArrayInt32Int32CharArrayBooleanBoolean">
            <summary>Задает оболочка совместимости StreamWriter.WriteAsyncInternal(StreamWriter _this, String value, Char[] charBuffer, Int32 charPos, Int32 charLen, Char[] coreNewLine, Boolean autoFlush, Boolean appendNewLine)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.WriteAsyncString">
            <summary>Задает оболочка совместимости StreamWriter.WriteAsync(String value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.WriteChar">
            <summary>Задает оболочка совместимости StreamWriter.Write(Char value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.WriteCharArray">
            <summary>Задает оболочка совместимости StreamWriter.Write(Char[] buffer)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.WriteCharArrayInt32Int32">
            <summary>Задает оболочка совместимости StreamWriter.Write(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.WriteLineAsync">
            <summary>Задает оболочка совместимости StreamWriter.WriteLineAsync()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.WriteLineAsyncChar">
            <summary>Задает оболочка совместимости StreamWriter.WriteLineAsync(Char value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.WriteLineAsyncCharArrayInt32Int32">
            <summary>Задает оболочка совместимости StreamWriter.WriteLineAsync(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.WriteLineAsyncString">
            <summary>Задает оболочка совместимости StreamWriter.WriteLineAsync(String value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.WriteString">
            <summary>Задает оболочка совместимости StreamWriter.Write(String value)</summary>
        </member>
        <member name="T:System.IO.Fakes.ShimStreamWriter.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.AllInstances.AutoFlushGet">
            <summary>Задает оболочка совместимости StreamWriter.get_AutoFlush()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.AllInstances.AutoFlushSetBoolean">
            <summary>Задает оболочка совместимости StreamWriter.set_AutoFlush(Boolean value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.AllInstances.BaseStreamGet">
            <summary>Задает оболочка совместимости StreamWriter.get_BaseStream()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.AllInstances.CharPos_PropSetInt32">
            <summary>Задает оболочка совместимости StreamWriter.set_CharPos_Prop(Int32 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.AllInstances.CheckAsyncTaskInProgress">
            <summary>Задает оболочка совместимости StreamWriter.CheckAsyncTaskInProgress()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.AllInstances.Close">
            <summary>Задает оболочка совместимости StreamWriter.Close()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.AllInstances.DisposeBoolean">
            <summary>Задает оболочка совместимости StreamWriter.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.AllInstances.EncodingGet">
            <summary>Задает оболочка совместимости StreamWriter.get_Encoding()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.AllInstances.Flush">
            <summary>Задает оболочка совместимости StreamWriter.Flush()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.AllInstances.FlushAsync">
            <summary>Задает оболочка совместимости StreamWriter.FlushAsync()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.AllInstances.FlushAsyncInternalBooleanBooleanCharArrayInt32">
            <summary>Задает оболочка совместимости StreamWriter.FlushAsyncInternal(Boolean flushStream, Boolean flushEncoder, Char[] sCharBuffer, Int32 sCharPos)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.AllInstances.FlushBooleanBoolean">
            <summary>Задает оболочка совместимости StreamWriter.Flush(Boolean flushStream, Boolean flushEncoder)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.AllInstances.HaveWrittenPreambleSetBoolean">
            <summary>Задает оболочка совместимости StreamWriter.set_HaveWrittenPreamble(Boolean value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.AllInstances.HaveWrittenPreamble_PropSetBoolean">
            <summary>Задает оболочка совместимости StreamWriter.set_HaveWrittenPreamble_Prop(Boolean value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.AllInstances.InitStreamEncodingInt32Boolean">
            <summary>Задает оболочка совместимости StreamWriter.Init(Stream streamArg, Encoding encodingArg, Int32 bufferSize, Boolean shouldLeaveOpen)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.AllInstances.LeaveOpenGet">
            <summary>Задает оболочка совместимости StreamWriter.get_LeaveOpen()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.AllInstances.WriteAsyncChar">
            <summary>Задает оболочка совместимости StreamWriter.WriteAsync(Char value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.AllInstances.WriteAsyncCharArrayInt32Int32">
            <summary>Задает оболочка совместимости StreamWriter.WriteAsync(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.AllInstances.WriteAsyncString">
            <summary>Задает оболочка совместимости StreamWriter.WriteAsync(String value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.AllInstances.WriteChar">
            <summary>Задает оболочка совместимости StreamWriter.Write(Char value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.AllInstances.WriteCharArray">
            <summary>Задает оболочка совместимости StreamWriter.Write(Char[] buffer)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.AllInstances.WriteCharArrayInt32Int32">
            <summary>Задает оболочка совместимости StreamWriter.Write(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.AllInstances.WriteLineAsync">
            <summary>Задает оболочка совместимости StreamWriter.WriteLineAsync()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.AllInstances.WriteLineAsyncChar">
            <summary>Задает оболочка совместимости StreamWriter.WriteLineAsync(Char value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.AllInstances.WriteLineAsyncCharArrayInt32Int32">
            <summary>Задает оболочка совместимости StreamWriter.WriteLineAsync(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.AllInstances.WriteLineAsyncString">
            <summary>Задает оболочка совместимости StreamWriter.WriteLineAsync(String value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimStreamWriter.AllInstances.WriteString">
            <summary>Задает оболочка совместимости StreamWriter.Write(String value)</summary>
        </member>
        <member name="T:System.IO.Fakes.ShimTextReader">
            <summary>Тип оболочки совместимости для System.IO.TextReader</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimTextReader.#ctor(System.IO.TextReader)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimTextReader.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimTextReader.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimTextReader.Bind(System.IDisposable)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextReader.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextReader.Close">
            <summary>Задает оболочка совместимости TextReader.Close()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextReader.Constructor">
            <summary>Задает оболочка совместимости TextReader.TextReader()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextReader.Dispose">
            <summary>Задает оболочка совместимости TextReader.Dispose()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextReader.DisposeBoolean">
            <summary>Задает оболочка совместимости TextReader.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextReader.Peek">
            <summary>Задает оболочка совместимости TextReader.Peek()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextReader.Read">
            <summary>Задает оболочка совместимости TextReader.Read()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextReader.ReadAsyncCharArrayInt32Int32">
            <summary>Задает оболочка совместимости TextReader.ReadAsync(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextReader.ReadAsyncInternalCharArrayInt32Int32">
            <summary>Задает оболочка совместимости TextReader.ReadAsyncInternal(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextReader.ReadBlockAsyncCharArrayInt32Int32">
            <summary>Задает оболочка совместимости TextReader.ReadBlockAsync(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextReader.ReadBlockAsyncInternalCharArrayInt32Int32">
            <summary>Задает оболочка совместимости TextReader.ReadBlockAsyncInternal(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextReader.ReadBlockCharArrayInt32Int32">
            <summary>Задает оболочка совместимости TextReader.ReadBlock(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextReader.ReadCharArrayInt32Int32">
            <summary>Задает оболочка совместимости TextReader.Read(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextReader.ReadLine">
            <summary>Задает оболочка совместимости TextReader.ReadLine()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextReader.ReadLineAsync">
            <summary>Задает оболочка совместимости TextReader.ReadLineAsync()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextReader.ReadToEnd">
            <summary>Задает оболочка совместимости TextReader.ReadToEnd()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextReader.ReadToEndAsync">
            <summary>Задает оболочка совместимости TextReader.ReadToEndAsync()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextReader.StaticConstructor">
            <summary>Задает оболочка совместимости TextReader.TextReader()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextReader.SynchronizedTextReader">
            <summary>Задает оболочка совместимости TextReader.Synchronized(TextReader reader)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextReader._cctorb__bObject">
            <summary>Задает оболочка совместимости TextReader.&lt;.cctor&gt;b__b(Object state)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextReader._cctorb__cObject">
            <summary>Задает оболочка совместимости TextReader.&lt;.cctor&gt;b__c(Object state)</summary>
        </member>
        <member name="T:System.IO.Fakes.ShimTextReader.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextReader.AllInstances.Close">
            <summary>Задает оболочка совместимости TextReader.Close()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextReader.AllInstances.Dispose">
            <summary>Задает оболочка совместимости TextReader.Dispose()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextReader.AllInstances.DisposeBoolean">
            <summary>Задает оболочка совместимости TextReader.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextReader.AllInstances.Peek">
            <summary>Задает оболочка совместимости TextReader.Peek()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextReader.AllInstances.Read">
            <summary>Задает оболочка совместимости TextReader.Read()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextReader.AllInstances.ReadAsyncCharArrayInt32Int32">
            <summary>Задает оболочка совместимости TextReader.ReadAsync(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextReader.AllInstances.ReadAsyncInternalCharArrayInt32Int32">
            <summary>Задает оболочка совместимости TextReader.ReadAsyncInternal(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextReader.AllInstances.ReadBlockAsyncCharArrayInt32Int32">
            <summary>Задает оболочка совместимости TextReader.ReadBlockAsync(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextReader.AllInstances.ReadBlockAsyncInternalCharArrayInt32Int32">
            <summary>Задает оболочка совместимости TextReader.ReadBlockAsyncInternal(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextReader.AllInstances.ReadBlockCharArrayInt32Int32">
            <summary>Задает оболочка совместимости TextReader.ReadBlock(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextReader.AllInstances.ReadCharArrayInt32Int32">
            <summary>Задает оболочка совместимости TextReader.Read(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextReader.AllInstances.ReadLine">
            <summary>Задает оболочка совместимости TextReader.ReadLine()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextReader.AllInstances.ReadLineAsync">
            <summary>Задает оболочка совместимости TextReader.ReadLineAsync()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextReader.AllInstances.ReadToEnd">
            <summary>Задает оболочка совместимости TextReader.ReadToEnd()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextReader.AllInstances.ReadToEndAsync">
            <summary>Задает оболочка совместимости TextReader.ReadToEndAsync()</summary>
        </member>
        <member name="T:System.IO.Fakes.ShimTextWriter">
            <summary>Тип оболочки совместимости для System.IO.TextWriter</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimTextWriter.#ctor(System.IO.TextWriter)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimTextWriter.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimTextWriter.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:System.IO.Fakes.ShimTextWriter.Bind(System.IDisposable)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.Close">
            <summary>Задает оболочка совместимости TextWriter.Close()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.Constructor">
            <summary>Задает оболочка совместимости TextWriter.TextWriter()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.ConstructorIFormatProvider">
            <summary>Задает оболочка совместимости TextWriter.TextWriter(IFormatProvider formatProvider)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.Dispose">
            <summary>Задает оболочка совместимости TextWriter.Dispose()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.DisposeBoolean">
            <summary>Задает оболочка совместимости TextWriter.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.Flush">
            <summary>Задает оболочка совместимости TextWriter.Flush()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.FlushAsync">
            <summary>Задает оболочка совместимости TextWriter.FlushAsync()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.FormatProviderGet">
            <summary>Задает оболочка совместимости TextWriter.get_FormatProvider()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.NewLineGet">
            <summary>Задает оболочка совместимости TextWriter.get_NewLine()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.NewLineSetString">
            <summary>Задает оболочка совместимости TextWriter.set_NewLine(String value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.StaticConstructor">
            <summary>Задает оболочка совместимости TextWriter.TextWriter()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.SynchronizedTextWriter">
            <summary>Задает оболочка совместимости TextWriter.Synchronized(TextWriter writer)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteAsyncChar">
            <summary>Задает оболочка совместимости TextWriter.WriteAsync(Char value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteAsyncCharArray">
            <summary>Задает оболочка совместимости TextWriter.WriteAsync(Char[] buffer)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteAsyncCharArrayInt32Int32">
            <summary>Задает оболочка совместимости TextWriter.WriteAsync(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteAsyncString">
            <summary>Задает оболочка совместимости TextWriter.WriteAsync(String value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteBoolean">
            <summary>Задает оболочка совместимости TextWriter.Write(Boolean value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteChar">
            <summary>Задает оболочка совместимости TextWriter.Write(Char value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteCharArray">
            <summary>Задает оболочка совместимости TextWriter.Write(Char[] buffer)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteCharArrayInt32Int32">
            <summary>Задает оболочка совместимости TextWriter.Write(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteDecimal">
            <summary>Задает оболочка совместимости TextWriter.Write(Decimal value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteDouble">
            <summary>Задает оболочка совместимости TextWriter.Write(Double value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteInt32">
            <summary>Задает оболочка совместимости TextWriter.Write(Int32 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteInt64">
            <summary>Задает оболочка совместимости TextWriter.Write(Int64 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteLine">
            <summary>Задает оболочка совместимости TextWriter.WriteLine()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteLineAsync">
            <summary>Задает оболочка совместимости TextWriter.WriteLineAsync()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteLineAsyncChar">
            <summary>Задает оболочка совместимости TextWriter.WriteLineAsync(Char value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteLineAsyncCharArray">
            <summary>Задает оболочка совместимости TextWriter.WriteLineAsync(Char[] buffer)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteLineAsyncCharArrayInt32Int32">
            <summary>Задает оболочка совместимости TextWriter.WriteLineAsync(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteLineAsyncString">
            <summary>Задает оболочка совместимости TextWriter.WriteLineAsync(String value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteLineBoolean">
            <summary>Задает оболочка совместимости TextWriter.WriteLine(Boolean value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteLineChar">
            <summary>Задает оболочка совместимости TextWriter.WriteLine(Char value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteLineCharArray">
            <summary>Задает оболочка совместимости TextWriter.WriteLine(Char[] buffer)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteLineCharArrayInt32Int32">
            <summary>Задает оболочка совместимости TextWriter.WriteLine(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteLineDecimal">
            <summary>Задает оболочка совместимости TextWriter.WriteLine(Decimal value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteLineDouble">
            <summary>Задает оболочка совместимости TextWriter.WriteLine(Double value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteLineInt32">
            <summary>Задает оболочка совместимости TextWriter.WriteLine(Int32 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteLineInt64">
            <summary>Задает оболочка совместимости TextWriter.WriteLine(Int64 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteLineObject">
            <summary>Задает оболочка совместимости TextWriter.WriteLine(Object value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteLineSingle">
            <summary>Задает оболочка совместимости TextWriter.WriteLine(Single value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteLineString">
            <summary>Задает оболочка совместимости TextWriter.WriteLine(String value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteLineStringObject">
            <summary>Задает оболочка совместимости TextWriter.WriteLine(String format, Object arg0)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteLineStringObjectArray">
            <summary>Задает оболочка совместимости TextWriter.WriteLine(String format, Object[] arg)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteLineStringObjectObject">
            <summary>Задает оболочка совместимости TextWriter.WriteLine(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteLineStringObjectObjectObject">
            <summary>Задает оболочка совместимости TextWriter.WriteLine(String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteLineUInt32">
            <summary>Задает оболочка совместимости TextWriter.WriteLine(UInt32 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteLineUInt64">
            <summary>Задает оболочка совместимости TextWriter.WriteLine(UInt64 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteObject">
            <summary>Задает оболочка совместимости TextWriter.Write(Object value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteSingle">
            <summary>Задает оболочка совместимости TextWriter.Write(Single value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteString">
            <summary>Задает оболочка совместимости TextWriter.Write(String value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteStringObject">
            <summary>Задает оболочка совместимости TextWriter.Write(String format, Object arg0)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteStringObjectArray">
            <summary>Задает оболочка совместимости TextWriter.Write(String format, Object[] arg)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteStringObjectObject">
            <summary>Задает оболочка совместимости TextWriter.Write(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteStringObjectObjectObject">
            <summary>Задает оболочка совместимости TextWriter.Write(String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteUInt32">
            <summary>Задает оболочка совместимости TextWriter.Write(UInt32 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.WriteUInt64">
            <summary>Задает оболочка совместимости TextWriter.Write(UInt64 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter._cctorb__0Object">
            <summary>Задает оболочка совместимости TextWriter.&lt;.cctor&gt;b__0(Object state)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter._cctorb__1Object">
            <summary>Задает оболочка совместимости TextWriter.&lt;.cctor&gt;b__1(Object state)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter._cctorb__2Object">
            <summary>Задает оболочка совместимости TextWriter.&lt;.cctor&gt;b__2(Object state)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter._cctorb__3Object">
            <summary>Задает оболочка совместимости TextWriter.&lt;.cctor&gt;b__3(Object state)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter._cctorb__4Object">
            <summary>Задает оболочка совместимости TextWriter.&lt;.cctor&gt;b__4(Object state)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter._cctorb__5Object">
            <summary>Задает оболочка совместимости TextWriter.&lt;.cctor&gt;b__5(Object state)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter._cctorb__6Object">
            <summary>Задает оболочка совместимости TextWriter.&lt;.cctor&gt;b__6(Object state)</summary>
        </member>
        <member name="T:System.IO.Fakes.ShimTextWriter.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.Close">
            <summary>Задает оболочка совместимости TextWriter.Close()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.Dispose">
            <summary>Задает оболочка совместимости TextWriter.Dispose()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.DisposeBoolean">
            <summary>Задает оболочка совместимости TextWriter.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.Flush">
            <summary>Задает оболочка совместимости TextWriter.Flush()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.FlushAsync">
            <summary>Задает оболочка совместимости TextWriter.FlushAsync()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.FormatProviderGet">
            <summary>Задает оболочка совместимости TextWriter.get_FormatProvider()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.NewLineGet">
            <summary>Задает оболочка совместимости TextWriter.get_NewLine()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.NewLineSetString">
            <summary>Задает оболочка совместимости TextWriter.set_NewLine(String value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteAsyncChar">
            <summary>Задает оболочка совместимости TextWriter.WriteAsync(Char value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteAsyncCharArray">
            <summary>Задает оболочка совместимости TextWriter.WriteAsync(Char[] buffer)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteAsyncCharArrayInt32Int32">
            <summary>Задает оболочка совместимости TextWriter.WriteAsync(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteAsyncString">
            <summary>Задает оболочка совместимости TextWriter.WriteAsync(String value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteBoolean">
            <summary>Задает оболочка совместимости TextWriter.Write(Boolean value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteChar">
            <summary>Задает оболочка совместимости TextWriter.Write(Char value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteCharArray">
            <summary>Задает оболочка совместимости TextWriter.Write(Char[] buffer)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteCharArrayInt32Int32">
            <summary>Задает оболочка совместимости TextWriter.Write(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteDecimal">
            <summary>Задает оболочка совместимости TextWriter.Write(Decimal value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteDouble">
            <summary>Задает оболочка совместимости TextWriter.Write(Double value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteInt32">
            <summary>Задает оболочка совместимости TextWriter.Write(Int32 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteInt64">
            <summary>Задает оболочка совместимости TextWriter.Write(Int64 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteLine">
            <summary>Задает оболочка совместимости TextWriter.WriteLine()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteLineAsync">
            <summary>Задает оболочка совместимости TextWriter.WriteLineAsync()</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteLineAsyncChar">
            <summary>Задает оболочка совместимости TextWriter.WriteLineAsync(Char value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteLineAsyncCharArray">
            <summary>Задает оболочка совместимости TextWriter.WriteLineAsync(Char[] buffer)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteLineAsyncCharArrayInt32Int32">
            <summary>Задает оболочка совместимости TextWriter.WriteLineAsync(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteLineAsyncString">
            <summary>Задает оболочка совместимости TextWriter.WriteLineAsync(String value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteLineBoolean">
            <summary>Задает оболочка совместимости TextWriter.WriteLine(Boolean value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteLineChar">
            <summary>Задает оболочка совместимости TextWriter.WriteLine(Char value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteLineCharArray">
            <summary>Задает оболочка совместимости TextWriter.WriteLine(Char[] buffer)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteLineCharArrayInt32Int32">
            <summary>Задает оболочка совместимости TextWriter.WriteLine(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteLineDecimal">
            <summary>Задает оболочка совместимости TextWriter.WriteLine(Decimal value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteLineDouble">
            <summary>Задает оболочка совместимости TextWriter.WriteLine(Double value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteLineInt32">
            <summary>Задает оболочка совместимости TextWriter.WriteLine(Int32 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteLineInt64">
            <summary>Задает оболочка совместимости TextWriter.WriteLine(Int64 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteLineObject">
            <summary>Задает оболочка совместимости TextWriter.WriteLine(Object value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteLineSingle">
            <summary>Задает оболочка совместимости TextWriter.WriteLine(Single value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteLineString">
            <summary>Задает оболочка совместимости TextWriter.WriteLine(String value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteLineStringObject">
            <summary>Задает оболочка совместимости TextWriter.WriteLine(String format, Object arg0)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteLineStringObjectArray">
            <summary>Задает оболочка совместимости TextWriter.WriteLine(String format, Object[] arg)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteLineStringObjectObject">
            <summary>Задает оболочка совместимости TextWriter.WriteLine(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteLineStringObjectObjectObject">
            <summary>Задает оболочка совместимости TextWriter.WriteLine(String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteLineUInt32">
            <summary>Задает оболочка совместимости TextWriter.WriteLine(UInt32 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteLineUInt64">
            <summary>Задает оболочка совместимости TextWriter.WriteLine(UInt64 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteObject">
            <summary>Задает оболочка совместимости TextWriter.Write(Object value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteSingle">
            <summary>Задает оболочка совместимости TextWriter.Write(Single value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteString">
            <summary>Задает оболочка совместимости TextWriter.Write(String value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteStringObject">
            <summary>Задает оболочка совместимости TextWriter.Write(String format, Object arg0)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteStringObjectArray">
            <summary>Задает оболочка совместимости TextWriter.Write(String format, Object[] arg)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteStringObjectObject">
            <summary>Задает оболочка совместимости TextWriter.Write(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteStringObjectObjectObject">
            <summary>Задает оболочка совместимости TextWriter.Write(String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteUInt32">
            <summary>Задает оболочка совместимости TextWriter.Write(UInt32 value)</summary>
        </member>
        <member name="P:System.IO.Fakes.ShimTextWriter.AllInstances.WriteUInt64">
            <summary>Задает оболочка совместимости TextWriter.Write(UInt64 value)</summary>
        </member>
        <member name="T:System.IO.IsolatedStorage.Fakes.StubINormalizeForIsolatedStorage">
            <summary>Тип заглушки System.IO.IsolatedStorage.INormalizeForIsolatedStorage</summary>
        </member>
        <member name="M:System.IO.IsolatedStorage.Fakes.StubINormalizeForIsolatedStorage.#ctor">
            <summary>Инициализирует новый экземпляр type StubINormalizeForIsolatedStorage</summary>
        </member>
        <member name="F:System.IO.IsolatedStorage.Fakes.StubINormalizeForIsolatedStorage.Normalize">
            <summary>Задает stub INormalizeForIsolatedStorage.Normalize()</summary>
        </member>
        <member name="M:System.IO.IsolatedStorage.Fakes.StubINormalizeForIsolatedStorage.global::System#IO#IsolatedStorage#INormalizeForIsolatedStorage#Normalize">
            <summary>Задает заглушка INormalizeForIsolatedStorage.Normalize()</summary>
        </member>
        <member name="T:System.IO.IsolatedStorage.Fakes.StubIsolatedStorage">
            <summary>Тип заглушки System.IO.IsolatedStorage.IsolatedStorage</summary>
        </member>
        <member name="M:System.IO.IsolatedStorage.Fakes.StubIsolatedStorage.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="F:System.IO.IsolatedStorage.Fakes.StubIsolatedStorage.AvailableFreeSpaceGet">
            <summary>Задает stub IsolatedStorage.get_AvailableFreeSpace()</summary>
        </member>
        <member name="F:System.IO.IsolatedStorage.Fakes.StubIsolatedStorage.CurrentSizeGet">
            <summary>Задает stub IsolatedStorage.get_CurrentSize()</summary>
        </member>
        <member name="M:System.IO.IsolatedStorage.Fakes.StubIsolatedStorage.GetPermission(System.Security.PermissionSet)">
            <summary>Задает заглушка IsolatedStorage.GetPermission(PermissionSet ps)</summary>
        </member>
        <member name="F:System.IO.IsolatedStorage.Fakes.StubIsolatedStorage.GetPermissionPermissionSet">
            <summary>Задает stub IsolatedStorage.GetPermission(PermissionSet ps)</summary>
        </member>
        <member name="M:System.IO.IsolatedStorage.Fakes.StubIsolatedStorage.IncreaseQuotaTo(System.Int64)">
            <summary>Задает заглушка IsolatedStorage.IncreaseQuotaTo(Int64 newQuotaSize)</summary>
        </member>
        <member name="F:System.IO.IsolatedStorage.Fakes.StubIsolatedStorage.IncreaseQuotaToInt64">
            <summary>Задает stub IsolatedStorage.IncreaseQuotaTo(Int64 newQuotaSize)</summary>
        </member>
        <member name="M:System.IO.IsolatedStorage.Fakes.StubIsolatedStorage.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubIsolatedStorage</summary>
        </member>
        <member name="F:System.IO.IsolatedStorage.Fakes.StubIsolatedStorage.MaximumSizeGet">
            <summary>Задает stub IsolatedStorage.get_MaximumSize()</summary>
        </member>
        <member name="M:System.IO.IsolatedStorage.Fakes.StubIsolatedStorage.Remove">
            <summary>Задает заглушка IsolatedStorage.Remove()</summary>
        </member>
        <member name="F:System.IO.IsolatedStorage.Fakes.StubIsolatedStorage.Remove01">
            <summary>Задает stub IsolatedStorage.Remove()</summary>
        </member>
        <member name="F:System.IO.IsolatedStorage.Fakes.StubIsolatedStorage.SeparatorExternalGet">
            <summary>Задает stub IsolatedStorage.get_SeparatorExternal()</summary>
        </member>
        <member name="F:System.IO.IsolatedStorage.Fakes.StubIsolatedStorage.SeparatorInternalGet">
            <summary>Задает stub IsolatedStorage.get_SeparatorInternal()</summary>
        </member>
        <member name="F:System.IO.IsolatedStorage.Fakes.StubIsolatedStorage.UsedSizeGet">
            <summary>Задает stub IsolatedStorage.get_UsedSize()</summary>
        </member>
        <member name="P:System.IO.IsolatedStorage.Fakes.StubIsolatedStorage.AvailableFreeSpace">
            <summary>Задает stub IsolatedStorage.get_AvailableFreeSpace()</summary>
        </member>
        <member name="P:System.IO.IsolatedStorage.Fakes.StubIsolatedStorage.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.IO.IsolatedStorage.Fakes.StubIsolatedStorage.CurrentSize">
            <summary>Задает stub IsolatedStorage.get_CurrentSize()</summary>
        </member>
        <member name="P:System.IO.IsolatedStorage.Fakes.StubIsolatedStorage.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.IO.IsolatedStorage.Fakes.StubIsolatedStorage.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.IO.IsolatedStorage.Fakes.StubIsolatedStorage.MaximumSize">
            <summary>Задает stub IsolatedStorage.get_MaximumSize()</summary>
        </member>
        <member name="P:System.IO.IsolatedStorage.Fakes.StubIsolatedStorage.SeparatorExternal">
            <summary>Задает stub IsolatedStorage.get_SeparatorExternal()</summary>
        </member>
        <member name="P:System.IO.IsolatedStorage.Fakes.StubIsolatedStorage.SeparatorInternal">
            <summary>Задает stub IsolatedStorage.get_SeparatorInternal()</summary>
        </member>
        <member name="P:System.IO.IsolatedStorage.Fakes.StubIsolatedStorage.UsedSize">
            <summary>Задает stub IsolatedStorage.get_UsedSize()</summary>
        </member>
        <member name="T:System.IO.IsolatedStorage.Fakes.StubIsolatedStorageException">
            <summary>Тип заглушки System.IO.IsolatedStorage.IsolatedStorageException</summary>
        </member>
        <member name="M:System.IO.IsolatedStorage.Fakes.StubIsolatedStorageException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.IO.IsolatedStorage.Fakes.StubIsolatedStorageException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.IO.IsolatedStorage.Fakes.StubIsolatedStorageException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.IO.IsolatedStorage.Fakes.StubIsolatedStorageException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.IO.IsolatedStorage.Fakes.StubIsolatedStorageException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubIsolatedStorageException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.IO.IsolatedStorage.Fakes.StubIsolatedStorageException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubIsolatedStorageException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.IO.IsolatedStorage.Fakes.StubIsolatedStorageException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.IO.IsolatedStorage.Fakes.StubIsolatedStorageException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.IO.IsolatedStorage.Fakes.StubIsolatedStorageException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.IO.IsolatedStorage.Fakes.StubIsolatedStorageException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.IO.IsolatedStorage.Fakes.StubIsolatedStorageException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.IO.IsolatedStorage.Fakes.StubIsolatedStorageException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.IO.IsolatedStorage.Fakes.StubIsolatedStorageException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.IO.IsolatedStorage.Fakes.StubIsolatedStorageException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubIsolatedStorageException</summary>
        </member>
        <member name="F:System.IO.IsolatedStorage.Fakes.StubIsolatedStorageException.MessageGet">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="F:System.IO.IsolatedStorage.Fakes.StubIsolatedStorageException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.IO.IsolatedStorage.Fakes.StubIsolatedStorageException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.IO.IsolatedStorage.Fakes.StubIsolatedStorageException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.IO.IsolatedStorage.Fakes.StubIsolatedStorageException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.IO.IsolatedStorage.Fakes.StubIsolatedStorageException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="P:System.IO.IsolatedStorage.Fakes.StubIsolatedStorageException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.IO.IsolatedStorage.Fakes.StubIsolatedStorageException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="P:System.IO.IsolatedStorage.Fakes.StubIsolatedStorageException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.IO.IsolatedStorage.Fakes.StubIsolatedStorageException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.IO.IsolatedStorage.Fakes.StubIsolatedStorageException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.IO.IsolatedStorage.Fakes.StubIsolatedStorageException.Message">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="P:System.IO.IsolatedStorage.Fakes.StubIsolatedStorageException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="P:System.IO.IsolatedStorage.Fakes.StubIsolatedStorageException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Reflection.Emit.Fakes.StubCustomAttributeBuilder">
            <summary>Тип заглушки System.Reflection.Emit.CustomAttributeBuilder</summary>
        </member>
        <member name="M:System.Reflection.Emit.Fakes.StubCustomAttributeBuilder.#ctor(System.Reflection.ConstructorInfo,System.Object[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Reflection.Emit.Fakes.StubCustomAttributeBuilder.#ctor(System.Reflection.ConstructorInfo,System.Object[],System.Reflection.FieldInfo[],System.Object[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Reflection.Emit.Fakes.StubCustomAttributeBuilder.#ctor(System.Reflection.ConstructorInfo,System.Object[],System.Reflection.PropertyInfo[],System.Object[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Reflection.Emit.Fakes.StubCustomAttributeBuilder.#ctor(System.Reflection.ConstructorInfo,System.Object[],System.Reflection.PropertyInfo[],System.Object[],System.Reflection.FieldInfo[],System.Object[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Reflection.Emit.Fakes.StubCustomAttributeBuilder.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCustomAttributeBuilder</summary>
        </member>
        <member name="P:System.Reflection.Emit.Fakes.StubCustomAttributeBuilder.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Reflection.Emit.Fakes.StubCustomAttributeBuilder.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Reflection.Emit.Fakes.StubCustomAttributeBuilder.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Reflection.Fakes.StubAssemblyNameProxy">
            <summary>Тип заглушки System.Reflection.AssemblyNameProxy</summary>
        </member>
        <member name="M:System.Reflection.Fakes.StubAssemblyNameProxy.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Reflection.Fakes.StubAssemblyNameProxy.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubAssemblyNameProxy</summary>
        </member>
        <member name="P:System.Reflection.Fakes.StubAssemblyNameProxy.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Reflection.Fakes.StubAssemblyNameProxy.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Reflection.Fakes.StubAssemblyNameProxy.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Reflection.Fakes.StubExceptionHandlingClause">
            <summary>Тип заглушки System.Reflection.ExceptionHandlingClause</summary>
        </member>
        <member name="M:System.Reflection.Fakes.StubExceptionHandlingClause.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="F:System.Reflection.Fakes.StubExceptionHandlingClause.CatchTypeGet">
            <summary>Задает stub ExceptionHandlingClause.get_CatchType()</summary>
        </member>
        <member name="F:System.Reflection.Fakes.StubExceptionHandlingClause.FilterOffsetGet">
            <summary>Задает stub ExceptionHandlingClause.get_FilterOffset()</summary>
        </member>
        <member name="F:System.Reflection.Fakes.StubExceptionHandlingClause.FlagsGet">
            <summary>Задает stub ExceptionHandlingClause.get_Flags()</summary>
        </member>
        <member name="F:System.Reflection.Fakes.StubExceptionHandlingClause.HandlerLengthGet">
            <summary>Задает stub ExceptionHandlingClause.get_HandlerLength()</summary>
        </member>
        <member name="F:System.Reflection.Fakes.StubExceptionHandlingClause.HandlerOffsetGet">
            <summary>Задает stub ExceptionHandlingClause.get_HandlerOffset()</summary>
        </member>
        <member name="M:System.Reflection.Fakes.StubExceptionHandlingClause.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubExceptionHandlingClause</summary>
        </member>
        <member name="M:System.Reflection.Fakes.StubExceptionHandlingClause.ToString">
            <summary>Задает заглушка ExceptionHandlingClause.ToString()</summary>
        </member>
        <member name="F:System.Reflection.Fakes.StubExceptionHandlingClause.ToString01">
            <summary>Задает stub ExceptionHandlingClause.ToString()</summary>
        </member>
        <member name="F:System.Reflection.Fakes.StubExceptionHandlingClause.TryLengthGet">
            <summary>Задает stub ExceptionHandlingClause.get_TryLength()</summary>
        </member>
        <member name="F:System.Reflection.Fakes.StubExceptionHandlingClause.TryOffsetGet">
            <summary>Задает stub ExceptionHandlingClause.get_TryOffset()</summary>
        </member>
        <member name="P:System.Reflection.Fakes.StubExceptionHandlingClause.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Reflection.Fakes.StubExceptionHandlingClause.CatchType">
            <summary>Задает stub ExceptionHandlingClause.get_CatchType()</summary>
        </member>
        <member name="P:System.Reflection.Fakes.StubExceptionHandlingClause.FilterOffset">
            <summary>Задает stub ExceptionHandlingClause.get_FilterOffset()</summary>
        </member>
        <member name="P:System.Reflection.Fakes.StubExceptionHandlingClause.Flags">
            <summary>Задает stub ExceptionHandlingClause.get_Flags()</summary>
        </member>
        <member name="P:System.Reflection.Fakes.StubExceptionHandlingClause.HandlerLength">
            <summary>Задает stub ExceptionHandlingClause.get_HandlerLength()</summary>
        </member>
        <member name="P:System.Reflection.Fakes.StubExceptionHandlingClause.HandlerOffset">
            <summary>Задает stub ExceptionHandlingClause.get_HandlerOffset()</summary>
        </member>
        <member name="P:System.Reflection.Fakes.StubExceptionHandlingClause.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Reflection.Fakes.StubExceptionHandlingClause.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Reflection.Fakes.StubExceptionHandlingClause.TryLength">
            <summary>Задает stub ExceptionHandlingClause.get_TryLength()</summary>
        </member>
        <member name="P:System.Reflection.Fakes.StubExceptionHandlingClause.TryOffset">
            <summary>Задает stub ExceptionHandlingClause.get_TryOffset()</summary>
        </member>
        <member name="T:System.Reflection.Fakes.StubICustomAttributeProvider">
            <summary>Тип заглушки System.Reflection.ICustomAttributeProvider</summary>
        </member>
        <member name="M:System.Reflection.Fakes.StubICustomAttributeProvider.#ctor">
            <summary>Инициализирует новый экземпляр type StubICustomAttributeProvider</summary>
        </member>
        <member name="F:System.Reflection.Fakes.StubICustomAttributeProvider.GetCustomAttributesBoolean">
            <summary>Задает stub ICustomAttributeProvider.GetCustomAttributes(Boolean inherit)</summary>
        </member>
        <member name="F:System.Reflection.Fakes.StubICustomAttributeProvider.GetCustomAttributesTypeBoolean">
            <summary>Задает stub ICustomAttributeProvider.GetCustomAttributes(Type attributeType, Boolean inherit)</summary>
        </member>
        <member name="F:System.Reflection.Fakes.StubICustomAttributeProvider.IsDefinedTypeBoolean">
            <summary>Задает stub ICustomAttributeProvider.IsDefined(Type attributeType, Boolean inherit)</summary>
        </member>
        <member name="M:System.Reflection.Fakes.StubICustomAttributeProvider.global::System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Boolean)">
            <summary>Задает заглушка ICustomAttributeProvider.GetCustomAttributes(Boolean inherit)</summary>
        </member>
        <member name="M:System.Reflection.Fakes.StubICustomAttributeProvider.global::System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Type,System.Boolean)">
            <summary>Задает заглушка ICustomAttributeProvider.GetCustomAttributes(Type attributeType, Boolean inherit)</summary>
        </member>
        <member name="M:System.Reflection.Fakes.StubICustomAttributeProvider.global::System#Reflection#ICustomAttributeProvider#IsDefined(System.Type,System.Boolean)">
            <summary>Задает заглушка ICustomAttributeProvider.IsDefined(Type attributeType, Boolean inherit)</summary>
        </member>
        <member name="T:System.Reflection.Fakes.StubLocalVariableInfo">
            <summary>Тип заглушки System.Reflection.LocalVariableInfo</summary>
        </member>
        <member name="M:System.Reflection.Fakes.StubLocalVariableInfo.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Reflection.Fakes.StubLocalVariableInfo.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubLocalVariableInfo</summary>
        </member>
        <member name="F:System.Reflection.Fakes.StubLocalVariableInfo.IsPinnedGet">
            <summary>Задает stub LocalVariableInfo.get_IsPinned()</summary>
        </member>
        <member name="F:System.Reflection.Fakes.StubLocalVariableInfo.LocalIndexGet">
            <summary>Задает stub LocalVariableInfo.get_LocalIndex()</summary>
        </member>
        <member name="F:System.Reflection.Fakes.StubLocalVariableInfo.LocalTypeGet">
            <summary>Задает stub LocalVariableInfo.get_LocalType()</summary>
        </member>
        <member name="M:System.Reflection.Fakes.StubLocalVariableInfo.ToString">
            <summary>Задает заглушка LocalVariableInfo.ToString()</summary>
        </member>
        <member name="F:System.Reflection.Fakes.StubLocalVariableInfo.ToString01">
            <summary>Задает stub LocalVariableInfo.ToString()</summary>
        </member>
        <member name="P:System.Reflection.Fakes.StubLocalVariableInfo.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Reflection.Fakes.StubLocalVariableInfo.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Reflection.Fakes.StubLocalVariableInfo.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Reflection.Fakes.StubLocalVariableInfo.IsPinned">
            <summary>Задает stub LocalVariableInfo.get_IsPinned()</summary>
        </member>
        <member name="P:System.Reflection.Fakes.StubLocalVariableInfo.LocalIndex">
            <summary>Задает stub LocalVariableInfo.get_LocalIndex()</summary>
        </member>
        <member name="P:System.Reflection.Fakes.StubLocalVariableInfo.LocalType">
            <summary>Задает stub LocalVariableInfo.get_LocalType()</summary>
        </member>
        <member name="T:System.Reflection.Fakes.StubManifestResourceInfo">
            <summary>Тип заглушки System.Reflection.ManifestResourceInfo</summary>
        </member>
        <member name="M:System.Reflection.Fakes.StubManifestResourceInfo.#ctor(System.Reflection.Assembly,System.String,System.Reflection.ResourceLocation)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="F:System.Reflection.Fakes.StubManifestResourceInfo.FileNameGet">
            <summary>Задает stub ManifestResourceInfo.get_FileName()</summary>
        </member>
        <member name="M:System.Reflection.Fakes.StubManifestResourceInfo.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubManifestResourceInfo</summary>
        </member>
        <member name="F:System.Reflection.Fakes.StubManifestResourceInfo.ReferencedAssemblyGet">
            <summary>Задает stub ManifestResourceInfo.get_ReferencedAssembly()</summary>
        </member>
        <member name="F:System.Reflection.Fakes.StubManifestResourceInfo.ResourceLocationGet">
            <summary>Задает stub ManifestResourceInfo.get_ResourceLocation()</summary>
        </member>
        <member name="P:System.Reflection.Fakes.StubManifestResourceInfo.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Reflection.Fakes.StubManifestResourceInfo.FileName">
            <summary>Задает stub ManifestResourceInfo.get_FileName()</summary>
        </member>
        <member name="P:System.Reflection.Fakes.StubManifestResourceInfo.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Reflection.Fakes.StubManifestResourceInfo.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Reflection.Fakes.StubManifestResourceInfo.ReferencedAssembly">
            <summary>Задает stub ManifestResourceInfo.get_ReferencedAssembly()</summary>
        </member>
        <member name="P:System.Reflection.Fakes.StubManifestResourceInfo.ResourceLocation">
            <summary>Задает stub ManifestResourceInfo.get_ResourceLocation()</summary>
        </member>
        <member name="T:System.Reflection.Fakes.StubMethodBody">
            <summary>Тип заглушки System.Reflection.MethodBody</summary>
        </member>
        <member name="M:System.Reflection.Fakes.StubMethodBody.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="F:System.Reflection.Fakes.StubMethodBody.ExceptionHandlingClausesGet">
            <summary>Задает stub MethodBody.get_ExceptionHandlingClauses()</summary>
        </member>
        <member name="M:System.Reflection.Fakes.StubMethodBody.GetILAsByteArray">
            <summary>Задает заглушка MethodBody.GetILAsByteArray()</summary>
        </member>
        <member name="F:System.Reflection.Fakes.StubMethodBody.GetILAsByteArray01">
            <summary>Задает stub MethodBody.GetILAsByteArray()</summary>
        </member>
        <member name="F:System.Reflection.Fakes.StubMethodBody.InitLocalsGet">
            <summary>Задает stub MethodBody.get_InitLocals()</summary>
        </member>
        <member name="M:System.Reflection.Fakes.StubMethodBody.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubMethodBody</summary>
        </member>
        <member name="F:System.Reflection.Fakes.StubMethodBody.LocalSignatureMetadataTokenGet">
            <summary>Задает stub MethodBody.get_LocalSignatureMetadataToken()</summary>
        </member>
        <member name="F:System.Reflection.Fakes.StubMethodBody.LocalVariablesGet">
            <summary>Задает stub MethodBody.get_LocalVariables()</summary>
        </member>
        <member name="F:System.Reflection.Fakes.StubMethodBody.MaxStackSizeGet">
            <summary>Задает stub MethodBody.get_MaxStackSize()</summary>
        </member>
        <member name="P:System.Reflection.Fakes.StubMethodBody.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Reflection.Fakes.StubMethodBody.ExceptionHandlingClauses">
            <summary>Задает stub MethodBody.get_ExceptionHandlingClauses()</summary>
        </member>
        <member name="P:System.Reflection.Fakes.StubMethodBody.InitLocals">
            <summary>Задает stub MethodBody.get_InitLocals()</summary>
        </member>
        <member name="P:System.Reflection.Fakes.StubMethodBody.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Reflection.Fakes.StubMethodBody.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Reflection.Fakes.StubMethodBody.LocalSignatureMetadataToken">
            <summary>Задает stub MethodBody.get_LocalSignatureMetadataToken()</summary>
        </member>
        <member name="P:System.Reflection.Fakes.StubMethodBody.LocalVariables">
            <summary>Задает stub MethodBody.get_LocalVariables()</summary>
        </member>
        <member name="P:System.Reflection.Fakes.StubMethodBody.MaxStackSize">
            <summary>Задает stub MethodBody.get_MaxStackSize()</summary>
        </member>
        <member name="T:System.Reflection.Fakes.StubStrongNameKeyPair">
            <summary>Тип заглушки System.Reflection.StrongNameKeyPair</summary>
        </member>
        <member name="M:System.Reflection.Fakes.StubStrongNameKeyPair.#ctor(System.Byte[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Reflection.Fakes.StubStrongNameKeyPair.#ctor(System.IO.FileStream)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Reflection.Fakes.StubStrongNameKeyPair.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Reflection.Fakes.StubStrongNameKeyPair.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Reflection.Fakes.StubStrongNameKeyPair.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubStrongNameKeyPair</summary>
        </member>
        <member name="P:System.Reflection.Fakes.StubStrongNameKeyPair.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Reflection.Fakes.StubStrongNameKeyPair.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Reflection.Fakes.StubStrongNameKeyPair.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Resources.Fakes.StubIResourceReader">
            <summary>Тип заглушки System.Resources.IResourceReader</summary>
        </member>
        <member name="M:System.Resources.Fakes.StubIResourceReader.#ctor">
            <summary>Инициализирует новый экземпляр type StubIResourceReader</summary>
        </member>
        <member name="F:System.Resources.Fakes.StubIResourceReader.Close">
            <summary>Задает stub IResourceReader.Close()</summary>
        </member>
        <member name="F:System.Resources.Fakes.StubIResourceReader.Dispose">
            <summary>Задает stub IDisposable.Dispose()</summary>
        </member>
        <member name="F:System.Resources.Fakes.StubIResourceReader.GetEnumerator">
            <summary>Задает stub IResourceReader.GetEnumerator()</summary>
        </member>
        <member name="F:System.Resources.Fakes.StubIResourceReader.GetEnumerator01">
            <summary>Задает stub IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="M:System.Resources.Fakes.StubIResourceReader.global::System#Collections#IEnumerable#GetEnumerator">
            <summary>Задает заглушка IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="M:System.Resources.Fakes.StubIResourceReader.global::System#IDisposable#Dispose">
            <summary>Задает заглушка IDisposable.Dispose()</summary>
        </member>
        <member name="M:System.Resources.Fakes.StubIResourceReader.global::System#Resources#IResourceReader#Close">
            <summary>Задает заглушка IResourceReader.Close()</summary>
        </member>
        <member name="M:System.Resources.Fakes.StubIResourceReader.global::System#Resources#IResourceReader#GetEnumerator">
            <summary>Задает заглушка IResourceReader.GetEnumerator()</summary>
        </member>
        <member name="T:System.Resources.Fakes.StubIResourceWriter">
            <summary>Тип заглушки System.Resources.IResourceWriter</summary>
        </member>
        <member name="M:System.Resources.Fakes.StubIResourceWriter.#ctor">
            <summary>Инициализирует новый экземпляр type StubIResourceWriter</summary>
        </member>
        <member name="F:System.Resources.Fakes.StubIResourceWriter.AddResourceStringByteArray">
            <summary>Задает stub IResourceWriter.AddResource(String name, Byte[] value)</summary>
        </member>
        <member name="F:System.Resources.Fakes.StubIResourceWriter.AddResourceStringObject">
            <summary>Задает stub IResourceWriter.AddResource(String name, Object value)</summary>
        </member>
        <member name="F:System.Resources.Fakes.StubIResourceWriter.AddResourceStringString">
            <summary>Задает stub IResourceWriter.AddResource(String name, String value)</summary>
        </member>
        <member name="F:System.Resources.Fakes.StubIResourceWriter.Close">
            <summary>Задает stub IResourceWriter.Close()</summary>
        </member>
        <member name="F:System.Resources.Fakes.StubIResourceWriter.Dispose">
            <summary>Задает stub IDisposable.Dispose()</summary>
        </member>
        <member name="F:System.Resources.Fakes.StubIResourceWriter.Generate">
            <summary>Задает stub IResourceWriter.Generate()</summary>
        </member>
        <member name="M:System.Resources.Fakes.StubIResourceWriter.global::System#IDisposable#Dispose">
            <summary>Задает заглушка IDisposable.Dispose()</summary>
        </member>
        <member name="M:System.Resources.Fakes.StubIResourceWriter.global::System#Resources#IResourceWriter#AddResource(System.String,System.Object)">
            <summary>Задает заглушка IResourceWriter.AddResource(String name, Object value)</summary>
        </member>
        <member name="M:System.Resources.Fakes.StubIResourceWriter.global::System#Resources#IResourceWriter#AddResource(System.String,System.Byte[])">
            <summary>Задает заглушка IResourceWriter.AddResource(String name, Byte[] value)</summary>
        </member>
        <member name="M:System.Resources.Fakes.StubIResourceWriter.global::System#Resources#IResourceWriter#AddResource(System.String,System.String)">
            <summary>Задает заглушка IResourceWriter.AddResource(String name, String value)</summary>
        </member>
        <member name="M:System.Resources.Fakes.StubIResourceWriter.global::System#Resources#IResourceWriter#Close">
            <summary>Задает заглушка IResourceWriter.Close()</summary>
        </member>
        <member name="M:System.Resources.Fakes.StubIResourceWriter.global::System#Resources#IResourceWriter#Generate">
            <summary>Задает заглушка IResourceWriter.Generate()</summary>
        </member>
        <member name="T:System.Resources.Fakes.StubMissingManifestResourceException">
            <summary>Тип заглушки System.Resources.MissingManifestResourceException</summary>
        </member>
        <member name="M:System.Resources.Fakes.StubMissingManifestResourceException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Resources.Fakes.StubMissingManifestResourceException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Resources.Fakes.StubMissingManifestResourceException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Resources.Fakes.StubMissingManifestResourceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Resources.Fakes.StubMissingManifestResourceException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubMissingManifestResourceException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Resources.Fakes.StubMissingManifestResourceException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubMissingManifestResourceException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Resources.Fakes.StubMissingManifestResourceException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.Resources.Fakes.StubMissingManifestResourceException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Resources.Fakes.StubMissingManifestResourceException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Resources.Fakes.StubMissingManifestResourceException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Resources.Fakes.StubMissingManifestResourceException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Resources.Fakes.StubMissingManifestResourceException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Resources.Fakes.StubMissingManifestResourceException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Resources.Fakes.StubMissingManifestResourceException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubMissingManifestResourceException</summary>
        </member>
        <member name="F:System.Resources.Fakes.StubMissingManifestResourceException.MessageGet">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="F:System.Resources.Fakes.StubMissingManifestResourceException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Resources.Fakes.StubMissingManifestResourceException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Resources.Fakes.StubMissingManifestResourceException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Resources.Fakes.StubMissingManifestResourceException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.Resources.Fakes.StubMissingManifestResourceException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="P:System.Resources.Fakes.StubMissingManifestResourceException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Resources.Fakes.StubMissingManifestResourceException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="P:System.Resources.Fakes.StubMissingManifestResourceException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Resources.Fakes.StubMissingManifestResourceException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Resources.Fakes.StubMissingManifestResourceException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Resources.Fakes.StubMissingManifestResourceException.Message">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="P:System.Resources.Fakes.StubMissingManifestResourceException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="P:System.Resources.Fakes.StubMissingManifestResourceException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Resources.Fakes.StubMissingSatelliteAssemblyException">
            <summary>Тип заглушки System.Resources.MissingSatelliteAssemblyException</summary>
        </member>
        <member name="M:System.Resources.Fakes.StubMissingSatelliteAssemblyException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Resources.Fakes.StubMissingSatelliteAssemblyException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Resources.Fakes.StubMissingSatelliteAssemblyException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Resources.Fakes.StubMissingSatelliteAssemblyException.#ctor(System.String,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Resources.Fakes.StubMissingSatelliteAssemblyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Resources.Fakes.StubMissingSatelliteAssemblyException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubMissingSatelliteAssemblyException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Resources.Fakes.StubMissingSatelliteAssemblyException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubMissingSatelliteAssemblyException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Resources.Fakes.StubMissingSatelliteAssemblyException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.Resources.Fakes.StubMissingSatelliteAssemblyException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Resources.Fakes.StubMissingSatelliteAssemblyException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Resources.Fakes.StubMissingSatelliteAssemblyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Resources.Fakes.StubMissingSatelliteAssemblyException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Resources.Fakes.StubMissingSatelliteAssemblyException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Resources.Fakes.StubMissingSatelliteAssemblyException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Resources.Fakes.StubMissingSatelliteAssemblyException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubMissingSatelliteAssemblyException</summary>
        </member>
        <member name="F:System.Resources.Fakes.StubMissingSatelliteAssemblyException.MessageGet">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="F:System.Resources.Fakes.StubMissingSatelliteAssemblyException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Resources.Fakes.StubMissingSatelliteAssemblyException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Resources.Fakes.StubMissingSatelliteAssemblyException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Resources.Fakes.StubMissingSatelliteAssemblyException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.Resources.Fakes.StubMissingSatelliteAssemblyException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="P:System.Resources.Fakes.StubMissingSatelliteAssemblyException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Resources.Fakes.StubMissingSatelliteAssemblyException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="P:System.Resources.Fakes.StubMissingSatelliteAssemblyException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Resources.Fakes.StubMissingSatelliteAssemblyException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Resources.Fakes.StubMissingSatelliteAssemblyException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Resources.Fakes.StubMissingSatelliteAssemblyException.Message">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="P:System.Resources.Fakes.StubMissingSatelliteAssemblyException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="P:System.Resources.Fakes.StubMissingSatelliteAssemblyException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Resources.Fakes.StubResourceManager">
            <summary>Тип заглушки System.Resources.ResourceManager</summary>
        </member>
        <member name="M:System.Resources.Fakes.StubResourceManager.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Resources.Fakes.StubResourceManager.#ctor(System.Type)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Resources.Fakes.StubResourceManager.#ctor(System.String,System.Reflection.Assembly)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Resources.Fakes.StubResourceManager.#ctor(System.String,System.Reflection.Assembly,System.Type)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Resources.Fakes.StubResourceManager.AttachBackingFieldToIgnoreCase">
            <summary>Присоединение делегатов для эмуляции StubResourceManager.IgnoreCase как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Resources.Fakes.StubResourceManager.BaseNameGet">
            <summary>Задает stub ResourceManager.get_BaseName()</summary>
        </member>
        <member name="M:System.Resources.Fakes.StubResourceManager.GetObject(System.String)">
            <summary>Задает заглушка ResourceManager.GetObject(String name)</summary>
        </member>
        <member name="F:System.Resources.Fakes.StubResourceManager.GetObjectString">
            <summary>Задает stub ResourceManager.GetObject(String name)</summary>
        </member>
        <member name="M:System.Resources.Fakes.StubResourceManager.GetString(System.String)">
            <summary>Задает заглушка ResourceManager.GetString(String name)</summary>
        </member>
        <member name="F:System.Resources.Fakes.StubResourceManager.GetStringString">
            <summary>Задает stub ResourceManager.GetString(String name)</summary>
        </member>
        <member name="F:System.Resources.Fakes.StubResourceManager.IgnoreCaseGet">
            <summary>Задает stub ResourceManager.get_IgnoreCase()</summary>
        </member>
        <member name="F:System.Resources.Fakes.StubResourceManager.IgnoreCaseSetBoolean">
            <summary>Задает stub ResourceManager.set_IgnoreCase(Boolean value)</summary>
        </member>
        <member name="M:System.Resources.Fakes.StubResourceManager.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubResourceManager</summary>
        </member>
        <member name="M:System.Resources.Fakes.StubResourceManager.ReleaseAllResources">
            <summary>Задает заглушка ResourceManager.ReleaseAllResources()</summary>
        </member>
        <member name="F:System.Resources.Fakes.StubResourceManager.ReleaseAllResources01">
            <summary>Задает stub ResourceManager.ReleaseAllResources()</summary>
        </member>
        <member name="F:System.Resources.Fakes.StubResourceManager.ResourceSetTypeGet">
            <summary>Задает stub ResourceManager.get_ResourceSetType()</summary>
        </member>
        <member name="P:System.Resources.Fakes.StubResourceManager.BaseName">
            <summary>Задает stub ResourceManager.get_BaseName()</summary>
        </member>
        <member name="P:System.Resources.Fakes.StubResourceManager.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Resources.Fakes.StubResourceManager.IgnoreCase">
            <summary>Задает stub ResourceManager.get_IgnoreCase()</summary>
        </member>
        <member name="P:System.Resources.Fakes.StubResourceManager.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Resources.Fakes.StubResourceManager.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Resources.Fakes.StubResourceManager.ResourceSetType">
            <summary>Задает stub ResourceManager.get_ResourceSetType()</summary>
        </member>
        <member name="T:System.Resources.Fakes.StubResourceSet">
            <summary>Тип заглушки System.Resources.ResourceSet</summary>
        </member>
        <member name="M:System.Resources.Fakes.StubResourceSet.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Resources.Fakes.StubResourceSet.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Resources.Fakes.StubResourceSet.#ctor(System.IO.Stream)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Resources.Fakes.StubResourceSet.#ctor(System.Resources.IResourceReader)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Resources.Fakes.StubResourceSet.Close">
            <summary>Задает заглушка ResourceSet.Close()</summary>
        </member>
        <member name="F:System.Resources.Fakes.StubResourceSet.Close01">
            <summary>Задает stub ResourceSet.Close()</summary>
        </member>
        <member name="M:System.Resources.Fakes.StubResourceSet.Dispose(System.Boolean)">
            <summary>Задает заглушка ResourceSet.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Resources.Fakes.StubResourceSet.DisposeBoolean">
            <summary>Задает stub ResourceSet.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.Resources.Fakes.StubResourceSet.GetDefaultReader">
            <summary>Задает заглушка ResourceSet.GetDefaultReader()</summary>
        </member>
        <member name="F:System.Resources.Fakes.StubResourceSet.GetDefaultReader01">
            <summary>Задает stub ResourceSet.GetDefaultReader()</summary>
        </member>
        <member name="M:System.Resources.Fakes.StubResourceSet.GetDefaultWriter">
            <summary>Задает заглушка ResourceSet.GetDefaultWriter()</summary>
        </member>
        <member name="F:System.Resources.Fakes.StubResourceSet.GetDefaultWriter01">
            <summary>Задает stub ResourceSet.GetDefaultWriter()</summary>
        </member>
        <member name="M:System.Resources.Fakes.StubResourceSet.GetEnumerator">
            <summary>Задает заглушка ResourceSet.GetEnumerator()</summary>
        </member>
        <member name="F:System.Resources.Fakes.StubResourceSet.GetEnumerator01">
            <summary>Задает stub ResourceSet.GetEnumerator()</summary>
        </member>
        <member name="M:System.Resources.Fakes.StubResourceSet.GetObject(System.String)">
            <summary>Задает заглушка ResourceSet.GetObject(String name)</summary>
        </member>
        <member name="M:System.Resources.Fakes.StubResourceSet.GetObject(System.String,System.Boolean)">
            <summary>Задает заглушка ResourceSet.GetObject(String name, Boolean ignoreCase)</summary>
        </member>
        <member name="F:System.Resources.Fakes.StubResourceSet.GetObjectString">
            <summary>Задает stub ResourceSet.GetObject(String name)</summary>
        </member>
        <member name="F:System.Resources.Fakes.StubResourceSet.GetObjectStringBoolean">
            <summary>Задает stub ResourceSet.GetObject(String name, Boolean ignoreCase)</summary>
        </member>
        <member name="M:System.Resources.Fakes.StubResourceSet.GetString(System.String)">
            <summary>Задает заглушка ResourceSet.GetString(String name)</summary>
        </member>
        <member name="M:System.Resources.Fakes.StubResourceSet.GetString(System.String,System.Boolean)">
            <summary>Задает заглушка ResourceSet.GetString(String name, Boolean ignoreCase)</summary>
        </member>
        <member name="F:System.Resources.Fakes.StubResourceSet.GetStringString">
            <summary>Задает stub ResourceSet.GetString(String name)</summary>
        </member>
        <member name="F:System.Resources.Fakes.StubResourceSet.GetStringStringBoolean">
            <summary>Задает stub ResourceSet.GetString(String name, Boolean ignoreCase)</summary>
        </member>
        <member name="M:System.Resources.Fakes.StubResourceSet.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubResourceSet</summary>
        </member>
        <member name="M:System.Resources.Fakes.StubResourceSet.ReadResources">
            <summary>Задает заглушка ResourceSet.ReadResources()</summary>
        </member>
        <member name="F:System.Resources.Fakes.StubResourceSet.ReadResources01">
            <summary>Задает stub ResourceSet.ReadResources()</summary>
        </member>
        <member name="P:System.Resources.Fakes.StubResourceSet.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Resources.Fakes.StubResourceSet.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Resources.Fakes.StubResourceSet.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.Fakes.StubCallConvCdecl">
            <summary>Тип заглушки System.Runtime.CompilerServices.CallConvCdecl</summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.Fakes.StubCallConvCdecl.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.Fakes.StubCallConvCdecl.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCallConvCdecl</summary>
        </member>
        <member name="P:System.Runtime.CompilerServices.Fakes.StubCallConvCdecl.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Runtime.CompilerServices.Fakes.StubCallConvCdecl.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.CompilerServices.Fakes.StubCallConvCdecl.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.Fakes.StubCallConvFastcall">
            <summary>Тип заглушки System.Runtime.CompilerServices.CallConvFastcall</summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.Fakes.StubCallConvFastcall.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.Fakes.StubCallConvFastcall.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCallConvFastcall</summary>
        </member>
        <member name="P:System.Runtime.CompilerServices.Fakes.StubCallConvFastcall.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Runtime.CompilerServices.Fakes.StubCallConvFastcall.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.CompilerServices.Fakes.StubCallConvFastcall.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.Fakes.StubCallConvStdcall">
            <summary>Тип заглушки System.Runtime.CompilerServices.CallConvStdcall</summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.Fakes.StubCallConvStdcall.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.Fakes.StubCallConvStdcall.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCallConvStdcall</summary>
        </member>
        <member name="P:System.Runtime.CompilerServices.Fakes.StubCallConvStdcall.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Runtime.CompilerServices.Fakes.StubCallConvStdcall.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.CompilerServices.Fakes.StubCallConvStdcall.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.Fakes.StubCallConvThiscall">
            <summary>Тип заглушки System.Runtime.CompilerServices.CallConvThiscall</summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.Fakes.StubCallConvThiscall.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.Fakes.StubCallConvThiscall.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCallConvThiscall</summary>
        </member>
        <member name="P:System.Runtime.CompilerServices.Fakes.StubCallConvThiscall.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Runtime.CompilerServices.Fakes.StubCallConvThiscall.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.CompilerServices.Fakes.StubCallConvThiscall.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.Fakes.StubCompilationRelaxationsAttribute">
            <summary>Тип заглушки System.Runtime.CompilerServices.CompilationRelaxationsAttribute</summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.Fakes.StubCompilationRelaxationsAttribute.#ctor(System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.Fakes.StubCompilationRelaxationsAttribute.#ctor(System.Runtime.CompilerServices.CompilationRelaxations)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.Fakes.StubCompilationRelaxationsAttribute.Equals(System.Object)">
            <summary>Задает заглушка Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:System.Runtime.CompilerServices.Fakes.StubCompilationRelaxationsAttribute.EqualsObject">
            <summary>Задает stub Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.Fakes.StubCompilationRelaxationsAttribute.GetHashCode">
            <summary>Задает заглушка Attribute.GetHashCode()</summary>
        </member>
        <member name="F:System.Runtime.CompilerServices.Fakes.StubCompilationRelaxationsAttribute.GetHashCode01">
            <summary>Задает stub Attribute.GetHashCode()</summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.Fakes.StubCompilationRelaxationsAttribute.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCompilationRelaxationsAttribute</summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.Fakes.StubCompilationRelaxationsAttribute.IsDefaultAttribute">
            <summary>Задает заглушка Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:System.Runtime.CompilerServices.Fakes.StubCompilationRelaxationsAttribute.IsDefaultAttribute01">
            <summary>Задает stub Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.Fakes.StubCompilationRelaxationsAttribute.Match(System.Object)">
            <summary>Задает заглушка Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.Runtime.CompilerServices.Fakes.StubCompilationRelaxationsAttribute.MatchObject">
            <summary>Задает stub Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.Runtime.CompilerServices.Fakes.StubCompilationRelaxationsAttribute.TypeIdGet">
            <summary>Задает stub Attribute.get_TypeId()</summary>
        </member>
        <member name="P:System.Runtime.CompilerServices.Fakes.StubCompilationRelaxationsAttribute.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Runtime.CompilerServices.Fakes.StubCompilationRelaxationsAttribute.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.CompilerServices.Fakes.StubCompilationRelaxationsAttribute.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.CompilerServices.Fakes.StubCompilationRelaxationsAttribute.TypeId">
            <summary>Задает stub Attribute.get_TypeId()</summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.Fakes.StubCompilerGlobalScopeAttribute">
            <summary>Тип заглушки System.Runtime.CompilerServices.CompilerGlobalScopeAttribute</summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.Fakes.StubCompilerGlobalScopeAttribute.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.Fakes.StubCompilerGlobalScopeAttribute.Equals(System.Object)">
            <summary>Задает заглушка Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:System.Runtime.CompilerServices.Fakes.StubCompilerGlobalScopeAttribute.EqualsObject">
            <summary>Задает stub Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.Fakes.StubCompilerGlobalScopeAttribute.GetHashCode">
            <summary>Задает заглушка Attribute.GetHashCode()</summary>
        </member>
        <member name="F:System.Runtime.CompilerServices.Fakes.StubCompilerGlobalScopeAttribute.GetHashCode01">
            <summary>Задает stub Attribute.GetHashCode()</summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.Fakes.StubCompilerGlobalScopeAttribute.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCompilerGlobalScopeAttribute</summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.Fakes.StubCompilerGlobalScopeAttribute.IsDefaultAttribute">
            <summary>Задает заглушка Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:System.Runtime.CompilerServices.Fakes.StubCompilerGlobalScopeAttribute.IsDefaultAttribute01">
            <summary>Задает stub Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.Fakes.StubCompilerGlobalScopeAttribute.Match(System.Object)">
            <summary>Задает заглушка Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.Runtime.CompilerServices.Fakes.StubCompilerGlobalScopeAttribute.MatchObject">
            <summary>Задает stub Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.Runtime.CompilerServices.Fakes.StubCompilerGlobalScopeAttribute.TypeIdGet">
            <summary>Задает stub Attribute.get_TypeId()</summary>
        </member>
        <member name="P:System.Runtime.CompilerServices.Fakes.StubCompilerGlobalScopeAttribute.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Runtime.CompilerServices.Fakes.StubCompilerGlobalScopeAttribute.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.CompilerServices.Fakes.StubCompilerGlobalScopeAttribute.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.CompilerServices.Fakes.StubCompilerGlobalScopeAttribute.TypeId">
            <summary>Задает stub Attribute.get_TypeId()</summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.Fakes.StubCustomConstantAttribute">
            <summary>Тип заглушки System.Runtime.CompilerServices.CustomConstantAttribute</summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.Fakes.StubCustomConstantAttribute.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.Fakes.StubCustomConstantAttribute.Equals(System.Object)">
            <summary>Задает заглушка Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:System.Runtime.CompilerServices.Fakes.StubCustomConstantAttribute.EqualsObject">
            <summary>Задает stub Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.Fakes.StubCustomConstantAttribute.GetHashCode">
            <summary>Задает заглушка Attribute.GetHashCode()</summary>
        </member>
        <member name="F:System.Runtime.CompilerServices.Fakes.StubCustomConstantAttribute.GetHashCode01">
            <summary>Задает stub Attribute.GetHashCode()</summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.Fakes.StubCustomConstantAttribute.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCustomConstantAttribute</summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.Fakes.StubCustomConstantAttribute.IsDefaultAttribute">
            <summary>Задает заглушка Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:System.Runtime.CompilerServices.Fakes.StubCustomConstantAttribute.IsDefaultAttribute01">
            <summary>Задает stub Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.Fakes.StubCustomConstantAttribute.Match(System.Object)">
            <summary>Задает заглушка Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.Runtime.CompilerServices.Fakes.StubCustomConstantAttribute.MatchObject">
            <summary>Задает stub Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.Runtime.CompilerServices.Fakes.StubCustomConstantAttribute.TypeIdGet">
            <summary>Задает stub Attribute.get_TypeId()</summary>
        </member>
        <member name="F:System.Runtime.CompilerServices.Fakes.StubCustomConstantAttribute.ValueGet">
            <summary>Задает stub CustomConstantAttribute.get_Value()</summary>
        </member>
        <member name="P:System.Runtime.CompilerServices.Fakes.StubCustomConstantAttribute.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Runtime.CompilerServices.Fakes.StubCustomConstantAttribute.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.CompilerServices.Fakes.StubCustomConstantAttribute.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.CompilerServices.Fakes.StubCustomConstantAttribute.TypeId">
            <summary>Задает stub Attribute.get_TypeId()</summary>
        </member>
        <member name="P:System.Runtime.CompilerServices.Fakes.StubCustomConstantAttribute.Value">
            <summary>Задает stub CustomConstantAttribute.get_Value()</summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.Fakes.StubDiscardableAttribute">
            <summary>Тип заглушки System.Runtime.CompilerServices.DiscardableAttribute</summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.Fakes.StubDiscardableAttribute.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.Fakes.StubDiscardableAttribute.Equals(System.Object)">
            <summary>Задает заглушка Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:System.Runtime.CompilerServices.Fakes.StubDiscardableAttribute.EqualsObject">
            <summary>Задает stub Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.Fakes.StubDiscardableAttribute.GetHashCode">
            <summary>Задает заглушка Attribute.GetHashCode()</summary>
        </member>
        <member name="F:System.Runtime.CompilerServices.Fakes.StubDiscardableAttribute.GetHashCode01">
            <summary>Задает stub Attribute.GetHashCode()</summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.Fakes.StubDiscardableAttribute.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubDiscardableAttribute</summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.Fakes.StubDiscardableAttribute.IsDefaultAttribute">
            <summary>Задает заглушка Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:System.Runtime.CompilerServices.Fakes.StubDiscardableAttribute.IsDefaultAttribute01">
            <summary>Задает stub Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.Fakes.StubDiscardableAttribute.Match(System.Object)">
            <summary>Задает заглушка Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.Runtime.CompilerServices.Fakes.StubDiscardableAttribute.MatchObject">
            <summary>Задает stub Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.Runtime.CompilerServices.Fakes.StubDiscardableAttribute.TypeIdGet">
            <summary>Задает stub Attribute.get_TypeId()</summary>
        </member>
        <member name="P:System.Runtime.CompilerServices.Fakes.StubDiscardableAttribute.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Runtime.CompilerServices.Fakes.StubDiscardableAttribute.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.CompilerServices.Fakes.StubDiscardableAttribute.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.CompilerServices.Fakes.StubDiscardableAttribute.TypeId">
            <summary>Задает stub Attribute.get_TypeId()</summary>
        </member>
        <member name="T:System.Runtime.ConstrainedExecution.Fakes.StubCriticalFinalizerObject">
            <summary>Тип заглушки System.Runtime.ConstrainedExecution.CriticalFinalizerObject</summary>
        </member>
        <member name="M:System.Runtime.ConstrainedExecution.Fakes.StubCriticalFinalizerObject.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.ConstrainedExecution.Fakes.StubCriticalFinalizerObject.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCriticalFinalizerObject</summary>
        </member>
        <member name="P:System.Runtime.ConstrainedExecution.Fakes.StubCriticalFinalizerObject.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Runtime.ConstrainedExecution.Fakes.StubCriticalFinalizerObject.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.ConstrainedExecution.Fakes.StubCriticalFinalizerObject.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Runtime.ExceptionServices.Fakes.StubFirstChanceExceptionEventArgs">
            <summary>Тип заглушки System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs</summary>
        </member>
        <member name="M:System.Runtime.ExceptionServices.Fakes.StubFirstChanceExceptionEventArgs.#ctor(System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.ExceptionServices.Fakes.StubFirstChanceExceptionEventArgs.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubFirstChanceExceptionEventArgs</summary>
        </member>
        <member name="P:System.Runtime.ExceptionServices.Fakes.StubFirstChanceExceptionEventArgs.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Runtime.ExceptionServices.Fakes.StubFirstChanceExceptionEventArgs.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.ExceptionServices.Fakes.StubFirstChanceExceptionEventArgs.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Runtime.Hosting.Fakes.StubApplicationActivator">
            <summary>Тип заглушки System.Runtime.Hosting.ApplicationActivator</summary>
        </member>
        <member name="M:System.Runtime.Hosting.Fakes.StubApplicationActivator.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.Hosting.Fakes.StubApplicationActivator.CreateInstance(System.ActivationContext)">
            <summary>Задает заглушка ApplicationActivator.CreateInstance(ActivationContext activationContext)</summary>
        </member>
        <member name="M:System.Runtime.Hosting.Fakes.StubApplicationActivator.CreateInstance(System.ActivationContext,System.String[])">
            <summary>Задает заглушка ApplicationActivator.CreateInstance(ActivationContext activationContext, String[] activationCustomData)</summary>
        </member>
        <member name="F:System.Runtime.Hosting.Fakes.StubApplicationActivator.CreateInstanceActivationContext">
            <summary>Задает stub ApplicationActivator.CreateInstance(ActivationContext activationContext)</summary>
        </member>
        <member name="F:System.Runtime.Hosting.Fakes.StubApplicationActivator.CreateInstanceActivationContextStringArray">
            <summary>Задает stub ApplicationActivator.CreateInstance(ActivationContext activationContext, String[] activationCustomData)</summary>
        </member>
        <member name="M:System.Runtime.Hosting.Fakes.StubApplicationActivator.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubApplicationActivator</summary>
        </member>
        <member name="P:System.Runtime.Hosting.Fakes.StubApplicationActivator.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Runtime.Hosting.Fakes.StubApplicationActivator.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.Hosting.Fakes.StubApplicationActivator.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Runtime.InteropServices.ComTypes.Fakes.StubIBindCtx">
            <summary>Тип заглушки System.Runtime.InteropServices.ComTypes.IBindCtx</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIBindCtx.#ctor">
            <summary>Инициализирует новый экземпляр type StubIBindCtx</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIBindCtx.EnumObjectParamIEnumStringOut">
            <summary>Задает stub IBindCtx.EnumObjectParam(IEnumString&amp; ppenum)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIBindCtx.GetBindOptionsBIND_OPTSRef">
            <summary>Задает stub IBindCtx.GetBindOptions(BIND_OPTS&amp; pbindopts)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIBindCtx.GetObjectParamStringObjectOut">
            <summary>Задает stub IBindCtx.GetObjectParam(String pszKey, Object&amp; ppunk)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIBindCtx.GetRunningObjectTableIRunningObjectTableOut">
            <summary>Задает stub IBindCtx.GetRunningObjectTable(IRunningObjectTable&amp; pprot)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIBindCtx.RegisterObjectBoundObject">
            <summary>Задает stub IBindCtx.RegisterObjectBound(Object punk)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIBindCtx.RegisterObjectParamStringObject">
            <summary>Задает stub IBindCtx.RegisterObjectParam(String pszKey, Object punk)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIBindCtx.ReleaseBoundObjects">
            <summary>Задает stub IBindCtx.ReleaseBoundObjects()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIBindCtx.RevokeObjectBoundObject">
            <summary>Задает stub IBindCtx.RevokeObjectBound(Object punk)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIBindCtx.RevokeObjectParamString">
            <summary>Задает stub IBindCtx.RevokeObjectParam(String pszKey)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIBindCtx.SetBindOptionsBIND_OPTSRef">
            <summary>Задает stub IBindCtx.SetBindOptions(BIND_OPTS&amp; pbindopts)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIBindCtx.global::System#Runtime#InteropServices#ComTypes#IBindCtx#EnumObjectParam(System.Runtime.InteropServices.ComTypes.IEnumString@)">
            <summary>Задает заглушка IBindCtx.EnumObjectParam(IEnumString&amp; ppenum)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIBindCtx.global::System#Runtime#InteropServices#ComTypes#IBindCtx#GetBindOptions(System.Runtime.InteropServices.ComTypes.BIND_OPTS@)">
            <summary>Задает заглушка IBindCtx.GetBindOptions(BIND_OPTS&amp; pbindopts)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIBindCtx.global::System#Runtime#InteropServices#ComTypes#IBindCtx#GetObjectParam(System.String,System.Object@)">
            <summary>Задает заглушка IBindCtx.GetObjectParam(String pszKey, Object&amp; ppunk)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIBindCtx.global::System#Runtime#InteropServices#ComTypes#IBindCtx#GetRunningObjectTable(System.Runtime.InteropServices.ComTypes.IRunningObjectTable@)">
            <summary>Задает заглушка IBindCtx.GetRunningObjectTable(IRunningObjectTable&amp; pprot)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIBindCtx.global::System#Runtime#InteropServices#ComTypes#IBindCtx#RegisterObjectBound(System.Object)">
            <summary>Задает заглушка IBindCtx.RegisterObjectBound(Object punk)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIBindCtx.global::System#Runtime#InteropServices#ComTypes#IBindCtx#RegisterObjectParam(System.String,System.Object)">
            <summary>Задает заглушка IBindCtx.RegisterObjectParam(String pszKey, Object punk)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIBindCtx.global::System#Runtime#InteropServices#ComTypes#IBindCtx#ReleaseBoundObjects">
            <summary>Задает заглушка IBindCtx.ReleaseBoundObjects()</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIBindCtx.global::System#Runtime#InteropServices#ComTypes#IBindCtx#RevokeObjectBound(System.Object)">
            <summary>Задает заглушка IBindCtx.RevokeObjectBound(Object punk)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIBindCtx.global::System#Runtime#InteropServices#ComTypes#IBindCtx#RevokeObjectParam(System.String)">
            <summary>Задает заглушка IBindCtx.RevokeObjectParam(String pszKey)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIBindCtx.global::System#Runtime#InteropServices#ComTypes#IBindCtx#SetBindOptions(System.Runtime.InteropServices.ComTypes.BIND_OPTS@)">
            <summary>Задает заглушка IBindCtx.SetBindOptions(BIND_OPTS&amp; pbindopts)</summary>
        </member>
        <member name="T:System.Runtime.InteropServices.ComTypes.Fakes.StubIConnectionPoint">
            <summary>Тип заглушки System.Runtime.InteropServices.ComTypes.IConnectionPoint</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIConnectionPoint.#ctor">
            <summary>Инициализирует новый экземпляр type StubIConnectionPoint</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIConnectionPoint.AdviseObjectInt32Out">
            <summary>Задает stub IConnectionPoint.Advise(Object pUnkSink, Int32&amp; pdwCookie)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIConnectionPoint.EnumConnectionsIEnumConnectionsOut">
            <summary>Задает stub IConnectionPoint.EnumConnections(IEnumConnections&amp; ppEnum)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIConnectionPoint.GetConnectionInterfaceGuidOut">
            <summary>Задает stub IConnectionPoint.GetConnectionInterface(Guid&amp; pIID)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIConnectionPoint.GetConnectionPointContainerIConnectionPointContainerOut">
            <summary>Задает stub IConnectionPoint.GetConnectionPointContainer(IConnectionPointContainer&amp; ppCPC)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIConnectionPoint.global::System#Runtime#InteropServices#ComTypes#IConnectionPoint#Advise(System.Object,System.Int32@)">
            <summary>Задает заглушка IConnectionPoint.Advise(Object pUnkSink, Int32&amp; pdwCookie)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIConnectionPoint.global::System#Runtime#InteropServices#ComTypes#IConnectionPoint#EnumConnections(System.Runtime.InteropServices.ComTypes.IEnumConnections@)">
            <summary>Задает заглушка IConnectionPoint.EnumConnections(IEnumConnections&amp; ppEnum)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIConnectionPoint.global::System#Runtime#InteropServices#ComTypes#IConnectionPoint#GetConnectionInterface(System.Guid@)">
            <summary>Задает заглушка IConnectionPoint.GetConnectionInterface(Guid&amp; pIID)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIConnectionPoint.global::System#Runtime#InteropServices#ComTypes#IConnectionPoint#GetConnectionPointContainer(System.Runtime.InteropServices.ComTypes.IConnectionPointContainer@)">
            <summary>Задает заглушка IConnectionPoint.GetConnectionPointContainer(IConnectionPointContainer&amp; ppCPC)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIConnectionPoint.global::System#Runtime#InteropServices#ComTypes#IConnectionPoint#Unadvise(System.Int32)">
            <summary>Задает заглушка IConnectionPoint.Unadvise(Int32 dwCookie)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIConnectionPoint.UnadviseInt32">
            <summary>Задает stub IConnectionPoint.Unadvise(Int32 dwCookie)</summary>
        </member>
        <member name="T:System.Runtime.InteropServices.ComTypes.Fakes.StubIConnectionPointContainer">
            <summary>Тип заглушки System.Runtime.InteropServices.ComTypes.IConnectionPointContainer</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIConnectionPointContainer.#ctor">
            <summary>Инициализирует новый экземпляр type StubIConnectionPointContainer</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIConnectionPointContainer.EnumConnectionPointsIEnumConnectionPointsOut">
            <summary>Задает stub IConnectionPointContainer.EnumConnectionPoints(IEnumConnectionPoints&amp; ppEnum)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIConnectionPointContainer.FindConnectionPointGuidRefIConnectionPointOut">
            <summary>Задает stub IConnectionPointContainer.FindConnectionPoint(Guid&amp; riid, IConnectionPoint&amp; ppCP)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIConnectionPointContainer.global::System#Runtime#InteropServices#ComTypes#IConnectionPointContainer#EnumConnectionPoints(System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints@)">
            <summary>Задает заглушка IConnectionPointContainer.EnumConnectionPoints(IEnumConnectionPoints&amp; ppEnum)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIConnectionPointContainer.global::System#Runtime#InteropServices#ComTypes#IConnectionPointContainer#FindConnectionPoint(System.Guid@,System.Runtime.InteropServices.ComTypes.IConnectionPoint@)">
            <summary>Задает заглушка IConnectionPointContainer.FindConnectionPoint(Guid&amp; riid, IConnectionPoint&amp; ppCP)</summary>
        </member>
        <member name="T:System.Runtime.InteropServices.ComTypes.Fakes.StubIEnumConnectionPoints">
            <summary>Тип заглушки System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIEnumConnectionPoints.#ctor">
            <summary>Инициализирует новый экземпляр type StubIEnumConnectionPoints</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIEnumConnectionPoints.CloneIEnumConnectionPointsOut">
            <summary>Задает stub IEnumConnectionPoints.Clone(IEnumConnectionPoints&amp; ppenum)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIEnumConnectionPoints.NextInt32IConnectionPointArrayIntPtr">
            <summary>Задает stub IEnumConnectionPoints.Next(Int32 celt, IConnectionPoint[] rgelt, IntPtr pceltFetched)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIEnumConnectionPoints.Reset">
            <summary>Задает stub IEnumConnectionPoints.Reset()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIEnumConnectionPoints.SkipInt32">
            <summary>Задает stub IEnumConnectionPoints.Skip(Int32 celt)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIEnumConnectionPoints.global::System#Runtime#InteropServices#ComTypes#IEnumConnectionPoints#Clone(System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints@)">
            <summary>Задает заглушка IEnumConnectionPoints.Clone(IEnumConnectionPoints&amp; ppenum)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIEnumConnectionPoints.global::System#Runtime#InteropServices#ComTypes#IEnumConnectionPoints#Next(System.Int32,System.Runtime.InteropServices.ComTypes.IConnectionPoint[],System.IntPtr)">
            <summary>Задает заглушка IEnumConnectionPoints.Next(Int32 celt, IConnectionPoint[] rgelt, IntPtr pceltFetched)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIEnumConnectionPoints.global::System#Runtime#InteropServices#ComTypes#IEnumConnectionPoints#Reset">
            <summary>Задает заглушка IEnumConnectionPoints.Reset()</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIEnumConnectionPoints.global::System#Runtime#InteropServices#ComTypes#IEnumConnectionPoints#Skip(System.Int32)">
            <summary>Задает заглушка IEnumConnectionPoints.Skip(Int32 celt)</summary>
        </member>
        <member name="T:System.Runtime.InteropServices.ComTypes.Fakes.StubIEnumConnections">
            <summary>Тип заглушки System.Runtime.InteropServices.ComTypes.IEnumConnections</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIEnumConnections.#ctor">
            <summary>Инициализирует новый экземпляр type StubIEnumConnections</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIEnumConnections.CloneIEnumConnectionsOut">
            <summary>Задает stub IEnumConnections.Clone(IEnumConnections&amp; ppenum)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIEnumConnections.NextInt32CONNECTDATAArrayIntPtr">
            <summary>Задает stub IEnumConnections.Next(Int32 celt, CONNECTDATA[] rgelt, IntPtr pceltFetched)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIEnumConnections.Reset">
            <summary>Задает stub IEnumConnections.Reset()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIEnumConnections.SkipInt32">
            <summary>Задает stub IEnumConnections.Skip(Int32 celt)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIEnumConnections.global::System#Runtime#InteropServices#ComTypes#IEnumConnections#Clone(System.Runtime.InteropServices.ComTypes.IEnumConnections@)">
            <summary>Задает заглушка IEnumConnections.Clone(IEnumConnections&amp; ppenum)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIEnumConnections.global::System#Runtime#InteropServices#ComTypes#IEnumConnections#Next(System.Int32,System.Runtime.InteropServices.ComTypes.CONNECTDATA[],System.IntPtr)">
            <summary>Задает заглушка IEnumConnections.Next(Int32 celt, CONNECTDATA[] rgelt, IntPtr pceltFetched)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIEnumConnections.global::System#Runtime#InteropServices#ComTypes#IEnumConnections#Reset">
            <summary>Задает заглушка IEnumConnections.Reset()</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIEnumConnections.global::System#Runtime#InteropServices#ComTypes#IEnumConnections#Skip(System.Int32)">
            <summary>Задает заглушка IEnumConnections.Skip(Int32 celt)</summary>
        </member>
        <member name="T:System.Runtime.InteropServices.ComTypes.Fakes.StubIEnumMoniker">
            <summary>Тип заглушки System.Runtime.InteropServices.ComTypes.IEnumMoniker</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIEnumMoniker.#ctor">
            <summary>Инициализирует новый экземпляр type StubIEnumMoniker</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIEnumMoniker.CloneIEnumMonikerOut">
            <summary>Задает stub IEnumMoniker.Clone(IEnumMoniker&amp; ppenum)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIEnumMoniker.NextInt32IMonikerArrayIntPtr">
            <summary>Задает stub IEnumMoniker.Next(Int32 celt, IMoniker[] rgelt, IntPtr pceltFetched)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIEnumMoniker.Reset">
            <summary>Задает stub IEnumMoniker.Reset()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIEnumMoniker.SkipInt32">
            <summary>Задает stub IEnumMoniker.Skip(Int32 celt)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIEnumMoniker.global::System#Runtime#InteropServices#ComTypes#IEnumMoniker#Clone(System.Runtime.InteropServices.ComTypes.IEnumMoniker@)">
            <summary>Задает заглушка IEnumMoniker.Clone(IEnumMoniker&amp; ppenum)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIEnumMoniker.global::System#Runtime#InteropServices#ComTypes#IEnumMoniker#Next(System.Int32,System.Runtime.InteropServices.ComTypes.IMoniker[],System.IntPtr)">
            <summary>Задает заглушка IEnumMoniker.Next(Int32 celt, IMoniker[] rgelt, IntPtr pceltFetched)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIEnumMoniker.global::System#Runtime#InteropServices#ComTypes#IEnumMoniker#Reset">
            <summary>Задает заглушка IEnumMoniker.Reset()</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIEnumMoniker.global::System#Runtime#InteropServices#ComTypes#IEnumMoniker#Skip(System.Int32)">
            <summary>Задает заглушка IEnumMoniker.Skip(Int32 celt)</summary>
        </member>
        <member name="T:System.Runtime.InteropServices.ComTypes.Fakes.StubIEnumString">
            <summary>Тип заглушки System.Runtime.InteropServices.ComTypes.IEnumString</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIEnumString.#ctor">
            <summary>Инициализирует новый экземпляр type StubIEnumString</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIEnumString.CloneIEnumStringOut">
            <summary>Задает stub IEnumString.Clone(IEnumString&amp; ppenum)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIEnumString.NextInt32StringArrayIntPtr">
            <summary>Задает stub IEnumString.Next(Int32 celt, String[] rgelt, IntPtr pceltFetched)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIEnumString.Reset">
            <summary>Задает stub IEnumString.Reset()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIEnumString.SkipInt32">
            <summary>Задает stub IEnumString.Skip(Int32 celt)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIEnumString.global::System#Runtime#InteropServices#ComTypes#IEnumString#Clone(System.Runtime.InteropServices.ComTypes.IEnumString@)">
            <summary>Задает заглушка IEnumString.Clone(IEnumString&amp; ppenum)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIEnumString.global::System#Runtime#InteropServices#ComTypes#IEnumString#Next(System.Int32,System.String[],System.IntPtr)">
            <summary>Задает заглушка IEnumString.Next(Int32 celt, String[] rgelt, IntPtr pceltFetched)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIEnumString.global::System#Runtime#InteropServices#ComTypes#IEnumString#Reset">
            <summary>Задает заглушка IEnumString.Reset()</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIEnumString.global::System#Runtime#InteropServices#ComTypes#IEnumString#Skip(System.Int32)">
            <summary>Задает заглушка IEnumString.Skip(Int32 celt)</summary>
        </member>
        <member name="T:System.Runtime.InteropServices.ComTypes.Fakes.StubIEnumVARIANT">
            <summary>Тип заглушки System.Runtime.InteropServices.ComTypes.IEnumVARIANT</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIEnumVARIANT.#ctor">
            <summary>Инициализирует новый экземпляр type StubIEnumVARIANT</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIEnumVARIANT.Clone">
            <summary>Задает stub IEnumVARIANT.Clone()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIEnumVARIANT.NextInt32ObjectArrayIntPtr">
            <summary>Задает stub IEnumVARIANT.Next(Int32 celt, Object[] rgVar, IntPtr pceltFetched)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIEnumVARIANT.Reset">
            <summary>Задает stub IEnumVARIANT.Reset()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIEnumVARIANT.SkipInt32">
            <summary>Задает stub IEnumVARIANT.Skip(Int32 celt)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIEnumVARIANT.global::System#Runtime#InteropServices#ComTypes#IEnumVARIANT#Clone">
            <summary>Задает заглушка IEnumVARIANT.Clone()</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIEnumVARIANT.global::System#Runtime#InteropServices#ComTypes#IEnumVARIANT#Next(System.Int32,System.Object[],System.IntPtr)">
            <summary>Задает заглушка IEnumVARIANT.Next(Int32 celt, Object[] rgVar, IntPtr pceltFetched)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIEnumVARIANT.global::System#Runtime#InteropServices#ComTypes#IEnumVARIANT#Reset">
            <summary>Задает заглушка IEnumVARIANT.Reset()</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIEnumVARIANT.global::System#Runtime#InteropServices#ComTypes#IEnumVARIANT#Skip(System.Int32)">
            <summary>Задает заглушка IEnumVARIANT.Skip(Int32 celt)</summary>
        </member>
        <member name="T:System.Runtime.InteropServices.ComTypes.Fakes.StubIMoniker">
            <summary>Тип заглушки System.Runtime.InteropServices.ComTypes.IMoniker</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIMoniker.#ctor">
            <summary>Инициализирует новый экземпляр type StubIMoniker</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIMoniker.BindToObjectIBindCtxIMonikerGuidRefObjectOut">
            <summary>Задает stub IMoniker.BindToObject(IBindCtx pbc, IMoniker pmkToLeft, Guid&amp; riidResult, Object&amp; ppvResult)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIMoniker.BindToStorageIBindCtxIMonikerGuidRefObjectOut">
            <summary>Задает stub IMoniker.BindToStorage(IBindCtx pbc, IMoniker pmkToLeft, Guid&amp; riid, Object&amp; ppvObj)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIMoniker.CommonPrefixWithIMonikerIMonikerOut">
            <summary>Задает stub IMoniker.CommonPrefixWith(IMoniker pmkOther, IMoniker&amp; ppmkPrefix)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIMoniker.ComposeWithIMonikerBooleanIMonikerOut">
            <summary>Задает stub IMoniker.ComposeWith(IMoniker pmkRight, Boolean fOnlyIfNotGeneric, IMoniker&amp; ppmkComposite)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIMoniker.EnumBooleanIEnumMonikerOut">
            <summary>Задает stub IMoniker.Enum(Boolean fForward, IEnumMoniker&amp; ppenumMoniker)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIMoniker.GetClassIDGuidOut">
            <summary>Задает stub IMoniker.GetClassID(Guid&amp; pClassID)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIMoniker.GetDisplayNameIBindCtxIMonikerStringOut">
            <summary>Задает stub IMoniker.GetDisplayName(IBindCtx pbc, IMoniker pmkToLeft, String&amp; ppszDisplayName)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIMoniker.GetSizeMaxInt64Out">
            <summary>Задает stub IMoniker.GetSizeMax(Int64&amp; pcbSize)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIMoniker.GetTimeOfLastChangeIBindCtxIMonikerFILETIMEOut">
            <summary>Задает stub IMoniker.GetTimeOfLastChange(IBindCtx pbc, IMoniker pmkToLeft, FILETIME&amp; pFileTime)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIMoniker.HashInt32Out">
            <summary>Задает stub IMoniker.Hash(Int32&amp; pdwHash)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIMoniker.InverseIMonikerOut">
            <summary>Задает stub IMoniker.Inverse(IMoniker&amp; ppmk)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIMoniker.IsDirty">
            <summary>Задает stub IMoniker.IsDirty()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIMoniker.IsEqualIMoniker">
            <summary>Задает stub IMoniker.IsEqual(IMoniker pmkOtherMoniker)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIMoniker.IsRunningIBindCtxIMonikerIMoniker">
            <summary>Задает stub IMoniker.IsRunning(IBindCtx pbc, IMoniker pmkToLeft, IMoniker pmkNewlyRunning)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIMoniker.IsSystemMonikerInt32Out">
            <summary>Задает stub IMoniker.IsSystemMoniker(Int32&amp; pdwMksys)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIMoniker.LoadIStream">
            <summary>Задает stub IMoniker.Load(IStream pStm)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIMoniker.ParseDisplayNameIBindCtxIMonikerStringInt32OutIMonikerOut">
            <summary>Задает stub IMoniker.ParseDisplayName(IBindCtx pbc, IMoniker pmkToLeft, String pszDisplayName, Int32&amp; pchEaten, IMoniker&amp; ppmkOut)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIMoniker.ReduceIBindCtxInt32IMonikerRefIMonikerOut">
            <summary>Задает stub IMoniker.Reduce(IBindCtx pbc, Int32 dwReduceHowFar, IMoniker&amp; ppmkToLeft, IMoniker&amp; ppmkReduced)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIMoniker.RelativePathToIMonikerIMonikerOut">
            <summary>Задает stub IMoniker.RelativePathTo(IMoniker pmkOther, IMoniker&amp; ppmkRelPath)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIMoniker.SaveIStreamBoolean">
            <summary>Задает stub IMoniker.Save(IStream pStm, Boolean fClearDirty)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIMoniker.global::System#Runtime#InteropServices#ComTypes#IMoniker#BindToObject(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.Guid@,System.Object@)">
            <summary>Задает заглушка IMoniker.BindToObject(IBindCtx pbc, IMoniker pmkToLeft, Guid&amp; riidResult, Object&amp; ppvResult)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIMoniker.global::System#Runtime#InteropServices#ComTypes#IMoniker#BindToStorage(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.Guid@,System.Object@)">
            <summary>Задает заглушка IMoniker.BindToStorage(IBindCtx pbc, IMoniker pmkToLeft, Guid&amp; riid, Object&amp; ppvObj)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIMoniker.global::System#Runtime#InteropServices#ComTypes#IMoniker#CommonPrefixWith(System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.IMoniker@)">
            <summary>Задает заглушка IMoniker.CommonPrefixWith(IMoniker pmkOther, IMoniker&amp; ppmkPrefix)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIMoniker.global::System#Runtime#InteropServices#ComTypes#IMoniker#ComposeWith(System.Runtime.InteropServices.ComTypes.IMoniker,System.Boolean,System.Runtime.InteropServices.ComTypes.IMoniker@)">
            <summary>Задает заглушка IMoniker.ComposeWith(IMoniker pmkRight, Boolean fOnlyIfNotGeneric, IMoniker&amp; ppmkComposite)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIMoniker.global::System#Runtime#InteropServices#ComTypes#IMoniker#Enum(System.Boolean,System.Runtime.InteropServices.ComTypes.IEnumMoniker@)">
            <summary>Задает заглушка IMoniker.Enum(Boolean fForward, IEnumMoniker&amp; ppenumMoniker)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIMoniker.global::System#Runtime#InteropServices#ComTypes#IMoniker#GetClassID(System.Guid@)">
            <summary>Задает заглушка IMoniker.GetClassID(Guid&amp; pClassID)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIMoniker.global::System#Runtime#InteropServices#ComTypes#IMoniker#GetDisplayName(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.String@)">
            <summary>Задает заглушка IMoniker.GetDisplayName(IBindCtx pbc, IMoniker pmkToLeft, String&amp; ppszDisplayName)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIMoniker.global::System#Runtime#InteropServices#ComTypes#IMoniker#GetSizeMax(System.Int64@)">
            <summary>Задает заглушка IMoniker.GetSizeMax(Int64&amp; pcbSize)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIMoniker.global::System#Runtime#InteropServices#ComTypes#IMoniker#GetTimeOfLastChange(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.FILETIME@)">
            <summary>Задает заглушка IMoniker.GetTimeOfLastChange(IBindCtx pbc, IMoniker pmkToLeft, FILETIME&amp; pFileTime)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIMoniker.global::System#Runtime#InteropServices#ComTypes#IMoniker#Hash(System.Int32@)">
            <summary>Задает заглушка IMoniker.Hash(Int32&amp; pdwHash)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIMoniker.global::System#Runtime#InteropServices#ComTypes#IMoniker#Inverse(System.Runtime.InteropServices.ComTypes.IMoniker@)">
            <summary>Задает заглушка IMoniker.Inverse(IMoniker&amp; ppmk)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIMoniker.global::System#Runtime#InteropServices#ComTypes#IMoniker#IsDirty">
            <summary>Задает заглушка IMoniker.IsDirty()</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIMoniker.global::System#Runtime#InteropServices#ComTypes#IMoniker#IsEqual(System.Runtime.InteropServices.ComTypes.IMoniker)">
            <summary>Задает заглушка IMoniker.IsEqual(IMoniker pmkOtherMoniker)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIMoniker.global::System#Runtime#InteropServices#ComTypes#IMoniker#IsRunning(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.IMoniker)">
            <summary>Задает заглушка IMoniker.IsRunning(IBindCtx pbc, IMoniker pmkToLeft, IMoniker pmkNewlyRunning)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIMoniker.global::System#Runtime#InteropServices#ComTypes#IMoniker#IsSystemMoniker(System.Int32@)">
            <summary>Задает заглушка IMoniker.IsSystemMoniker(Int32&amp; pdwMksys)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIMoniker.global::System#Runtime#InteropServices#ComTypes#IMoniker#Load(System.Runtime.InteropServices.ComTypes.IStream)">
            <summary>Задает заглушка IMoniker.Load(IStream pStm)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIMoniker.global::System#Runtime#InteropServices#ComTypes#IMoniker#ParseDisplayName(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.String,System.Int32@,System.Runtime.InteropServices.ComTypes.IMoniker@)">
            <summary>Задает заглушка IMoniker.ParseDisplayName(IBindCtx pbc, IMoniker pmkToLeft, String pszDisplayName, Int32&amp; pchEaten, IMoniker&amp; ppmkOut)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIMoniker.global::System#Runtime#InteropServices#ComTypes#IMoniker#Reduce(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Int32,System.Runtime.InteropServices.ComTypes.IMoniker@,System.Runtime.InteropServices.ComTypes.IMoniker@)">
            <summary>Задает заглушка IMoniker.Reduce(IBindCtx pbc, Int32 dwReduceHowFar, IMoniker&amp; ppmkToLeft, IMoniker&amp; ppmkReduced)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIMoniker.global::System#Runtime#InteropServices#ComTypes#IMoniker#RelativePathTo(System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.IMoniker@)">
            <summary>Задает заглушка IMoniker.RelativePathTo(IMoniker pmkOther, IMoniker&amp; ppmkRelPath)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIMoniker.global::System#Runtime#InteropServices#ComTypes#IMoniker#Save(System.Runtime.InteropServices.ComTypes.IStream,System.Boolean)">
            <summary>Задает заглушка IMoniker.Save(IStream pStm, Boolean fClearDirty)</summary>
        </member>
        <member name="T:System.Runtime.InteropServices.ComTypes.Fakes.StubIPersistFile">
            <summary>Тип заглушки System.Runtime.InteropServices.ComTypes.IPersistFile</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIPersistFile.#ctor">
            <summary>Инициализирует новый экземпляр type StubIPersistFile</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIPersistFile.GetClassIDGuidOut">
            <summary>Задает stub IPersistFile.GetClassID(Guid&amp; pClassID)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIPersistFile.GetCurFileStringOut">
            <summary>Задает stub IPersistFile.GetCurFile(String&amp; ppszFileName)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIPersistFile.IsDirty">
            <summary>Задает stub IPersistFile.IsDirty()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIPersistFile.LoadStringInt32">
            <summary>Задает stub IPersistFile.Load(String pszFileName, Int32 dwMode)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIPersistFile.SaveCompletedString">
            <summary>Задает stub IPersistFile.SaveCompleted(String pszFileName)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIPersistFile.SaveStringBoolean">
            <summary>Задает stub IPersistFile.Save(String pszFileName, Boolean fRemember)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIPersistFile.global::System#Runtime#InteropServices#ComTypes#IPersistFile#GetClassID(System.Guid@)">
            <summary>Задает заглушка IPersistFile.GetClassID(Guid&amp; pClassID)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIPersistFile.global::System#Runtime#InteropServices#ComTypes#IPersistFile#GetCurFile(System.String@)">
            <summary>Задает заглушка IPersistFile.GetCurFile(String&amp; ppszFileName)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIPersistFile.global::System#Runtime#InteropServices#ComTypes#IPersistFile#IsDirty">
            <summary>Задает заглушка IPersistFile.IsDirty()</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIPersistFile.global::System#Runtime#InteropServices#ComTypes#IPersistFile#Load(System.String,System.Int32)">
            <summary>Задает заглушка IPersistFile.Load(String pszFileName, Int32 dwMode)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIPersistFile.global::System#Runtime#InteropServices#ComTypes#IPersistFile#Save(System.String,System.Boolean)">
            <summary>Задает заглушка IPersistFile.Save(String pszFileName, Boolean fRemember)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIPersistFile.global::System#Runtime#InteropServices#ComTypes#IPersistFile#SaveCompleted(System.String)">
            <summary>Задает заглушка IPersistFile.SaveCompleted(String pszFileName)</summary>
        </member>
        <member name="T:System.Runtime.InteropServices.ComTypes.Fakes.StubIRunningObjectTable">
            <summary>Тип заглушки System.Runtime.InteropServices.ComTypes.IRunningObjectTable</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIRunningObjectTable.#ctor">
            <summary>Инициализирует новый экземпляр type StubIRunningObjectTable</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIRunningObjectTable.EnumRunningIEnumMonikerOut">
            <summary>Задает stub IRunningObjectTable.EnumRunning(IEnumMoniker&amp; ppenumMoniker)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIRunningObjectTable.GetObjectIMonikerObjectOut">
            <summary>Задает stub IRunningObjectTable.GetObject(IMoniker pmkObjectName, Object&amp; ppunkObject)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIRunningObjectTable.GetTimeOfLastChangeIMonikerFILETIMEOut">
            <summary>Задает stub IRunningObjectTable.GetTimeOfLastChange(IMoniker pmkObjectName, FILETIME&amp; pfiletime)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIRunningObjectTable.IsRunningIMoniker">
            <summary>Задает stub IRunningObjectTable.IsRunning(IMoniker pmkObjectName)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIRunningObjectTable.NoteChangeTimeInt32FILETIMERef">
            <summary>Задает stub IRunningObjectTable.NoteChangeTime(Int32 dwRegister, FILETIME&amp; pfiletime)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIRunningObjectTable.RegisterInt32ObjectIMoniker">
            <summary>Задает stub IRunningObjectTable.Register(Int32 grfFlags, Object punkObject, IMoniker pmkObjectName)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIRunningObjectTable.RevokeInt32">
            <summary>Задает stub IRunningObjectTable.Revoke(Int32 dwRegister)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIRunningObjectTable.global::System#Runtime#InteropServices#ComTypes#IRunningObjectTable#EnumRunning(System.Runtime.InteropServices.ComTypes.IEnumMoniker@)">
            <summary>Задает заглушка IRunningObjectTable.EnumRunning(IEnumMoniker&amp; ppenumMoniker)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIRunningObjectTable.global::System#Runtime#InteropServices#ComTypes#IRunningObjectTable#GetObject(System.Runtime.InteropServices.ComTypes.IMoniker,System.Object@)">
            <summary>Задает заглушка IRunningObjectTable.GetObject(IMoniker pmkObjectName, Object&amp; ppunkObject)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIRunningObjectTable.global::System#Runtime#InteropServices#ComTypes#IRunningObjectTable#GetTimeOfLastChange(System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.FILETIME@)">
            <summary>Задает заглушка IRunningObjectTable.GetTimeOfLastChange(IMoniker pmkObjectName, FILETIME&amp; pfiletime)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIRunningObjectTable.global::System#Runtime#InteropServices#ComTypes#IRunningObjectTable#IsRunning(System.Runtime.InteropServices.ComTypes.IMoniker)">
            <summary>Задает заглушка IRunningObjectTable.IsRunning(IMoniker pmkObjectName)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIRunningObjectTable.global::System#Runtime#InteropServices#ComTypes#IRunningObjectTable#NoteChangeTime(System.Int32,System.Runtime.InteropServices.ComTypes.FILETIME@)">
            <summary>Задает заглушка IRunningObjectTable.NoteChangeTime(Int32 dwRegister, FILETIME&amp; pfiletime)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIRunningObjectTable.global::System#Runtime#InteropServices#ComTypes#IRunningObjectTable#Register(System.Int32,System.Object,System.Runtime.InteropServices.ComTypes.IMoniker)">
            <summary>Задает заглушка IRunningObjectTable.Register(Int32 grfFlags, Object punkObject, IMoniker pmkObjectName)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIRunningObjectTable.global::System#Runtime#InteropServices#ComTypes#IRunningObjectTable#Revoke(System.Int32)">
            <summary>Задает заглушка IRunningObjectTable.Revoke(Int32 dwRegister)</summary>
        </member>
        <member name="T:System.Runtime.InteropServices.ComTypes.Fakes.StubIStream">
            <summary>Тип заглушки System.Runtime.InteropServices.ComTypes.IStream</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIStream.#ctor">
            <summary>Инициализирует новый экземпляр type StubIStream</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIStream.CloneIStreamOut">
            <summary>Задает stub IStream.Clone(IStream&amp; ppstm)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIStream.CommitInt32">
            <summary>Задает stub IStream.Commit(Int32 grfCommitFlags)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIStream.CopyToIStreamInt64IntPtrIntPtr">
            <summary>Задает stub IStream.CopyTo(IStream pstm, Int64 cb, IntPtr pcbRead, IntPtr pcbWritten)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIStream.LockRegionInt64Int64Int32">
            <summary>Задает stub IStream.LockRegion(Int64 libOffset, Int64 cb, Int32 dwLockType)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIStream.ReadByteArrayInt32IntPtr">
            <summary>Задает stub IStream.Read(Byte[] pv, Int32 cb, IntPtr pcbRead)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIStream.Revert">
            <summary>Задает stub IStream.Revert()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIStream.SeekInt64Int32IntPtr">
            <summary>Задает stub IStream.Seek(Int64 dlibMove, Int32 dwOrigin, IntPtr plibNewPosition)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIStream.SetSizeInt64">
            <summary>Задает stub IStream.SetSize(Int64 libNewSize)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIStream.StatSTATSTGOutInt32">
            <summary>Задает stub IStream.Stat(STATSTG&amp; pstatstg, Int32 grfStatFlag)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIStream.global::System#Runtime#InteropServices#ComTypes#IStream#Clone(System.Runtime.InteropServices.ComTypes.IStream@)">
            <summary>Задает заглушка IStream.Clone(IStream&amp; ppstm)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIStream.global::System#Runtime#InteropServices#ComTypes#IStream#Commit(System.Int32)">
            <summary>Задает заглушка IStream.Commit(Int32 grfCommitFlags)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIStream.global::System#Runtime#InteropServices#ComTypes#IStream#CopyTo(System.Runtime.InteropServices.ComTypes.IStream,System.Int64,System.IntPtr,System.IntPtr)">
            <summary>Задает заглушка IStream.CopyTo(IStream pstm, Int64 cb, IntPtr pcbRead, IntPtr pcbWritten)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIStream.global::System#Runtime#InteropServices#ComTypes#IStream#LockRegion(System.Int64,System.Int64,System.Int32)">
            <summary>Задает заглушка IStream.LockRegion(Int64 libOffset, Int64 cb, Int32 dwLockType)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIStream.global::System#Runtime#InteropServices#ComTypes#IStream#Read(System.Byte[],System.Int32,System.IntPtr)">
            <summary>Задает заглушка IStream.Read(Byte[] pv, Int32 cb, IntPtr pcbRead)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIStream.global::System#Runtime#InteropServices#ComTypes#IStream#Revert">
            <summary>Задает заглушка IStream.Revert()</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIStream.global::System#Runtime#InteropServices#ComTypes#IStream#Seek(System.Int64,System.Int32,System.IntPtr)">
            <summary>Задает заглушка IStream.Seek(Int64 dlibMove, Int32 dwOrigin, IntPtr plibNewPosition)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIStream.global::System#Runtime#InteropServices#ComTypes#IStream#SetSize(System.Int64)">
            <summary>Задает заглушка IStream.SetSize(Int64 libNewSize)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIStream.global::System#Runtime#InteropServices#ComTypes#IStream#Stat(System.Runtime.InteropServices.ComTypes.STATSTG@,System.Int32)">
            <summary>Задает заглушка IStream.Stat(STATSTG&amp; pstatstg, Int32 grfStatFlag)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIStream.global::System#Runtime#InteropServices#ComTypes#IStream#UnlockRegion(System.Int64,System.Int64,System.Int32)">
            <summary>Задает заглушка IStream.UnlockRegion(Int64 libOffset, Int64 cb, Int32 dwLockType)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubIStream.global::System#Runtime#InteropServices#ComTypes#IStream#Write(System.Byte[],System.Int32,System.IntPtr)">
            <summary>Задает заглушка IStream.Write(Byte[] pv, Int32 cb, IntPtr pcbWritten)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIStream.UnlockRegionInt64Int64Int32">
            <summary>Задает stub IStream.UnlockRegion(Int64 libOffset, Int64 cb, Int32 dwLockType)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubIStream.WriteByteArrayInt32IntPtr">
            <summary>Задает stub IStream.Write(Byte[] pv, Int32 cb, IntPtr pcbWritten)</summary>
        </member>
        <member name="T:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeComp">
            <summary>Тип заглушки System.Runtime.InteropServices.ComTypes.ITypeComp</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeComp.#ctor">
            <summary>Инициализирует новый экземпляр type StubITypeComp</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeComp.BindStringInt32Int16ITypeInfoOutDESCKINDOutBINDPTROut">
            <summary>Задает stub ITypeComp.Bind(String szName, Int32 lHashVal, Int16 wFlags, ITypeInfo&amp; ppTInfo, DESCKIND&amp; pDescKind, BINDPTR&amp; pBindPtr)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeComp.BindTypeStringInt32ITypeInfoOutITypeCompOut">
            <summary>Задает stub ITypeComp.BindType(String szName, Int32 lHashVal, ITypeInfo&amp; ppTInfo, ITypeComp&amp; ppTComp)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeComp.global::System#Runtime#InteropServices#ComTypes#ITypeComp#Bind(System.String,System.Int32,System.Int16,System.Runtime.InteropServices.ComTypes.ITypeInfo@,System.Runtime.InteropServices.ComTypes.DESCKIND@,System.Runtime.InteropServices.ComTypes.BINDPTR@)">
            <summary>Задает заглушка ITypeComp.Bind(String szName, Int32 lHashVal, Int16 wFlags, ITypeInfo&amp; ppTInfo, DESCKIND&amp; pDescKind, BINDPTR&amp; pBindPtr)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeComp.global::System#Runtime#InteropServices#ComTypes#ITypeComp#BindType(System.String,System.Int32,System.Runtime.InteropServices.ComTypes.ITypeInfo@,System.Runtime.InteropServices.ComTypes.ITypeComp@)">
            <summary>Задает заглушка ITypeComp.BindType(String szName, Int32 lHashVal, ITypeInfo&amp; ppTInfo, ITypeComp&amp; ppTComp)</summary>
        </member>
        <member name="T:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo">
            <summary>Тип заглушки System.Runtime.InteropServices.ComTypes.ITypeInfo</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo.#ctor">
            <summary>Инициализирует новый экземпляр type StubITypeInfo</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo.AddressOfMemberInt32INVOKEKINDIntPtrOut">
            <summary>Задает stub ITypeInfo.AddressOfMember(Int32 memid, INVOKEKIND invKind, IntPtr&amp; ppv)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo.CreateInstanceObjectGuidRefObjectOut">
            <summary>Задает stub ITypeInfo.CreateInstance(Object pUnkOuter, Guid&amp; riid, Object&amp; ppvObj)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo.GetContainingTypeLibITypeLibOutInt32Out">
            <summary>Задает stub ITypeInfo.GetContainingTypeLib(ITypeLib&amp; ppTLB, Int32&amp; pIndex)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo.GetDllEntryInt32INVOKEKINDIntPtrIntPtrIntPtr">
            <summary>Задает stub ITypeInfo.GetDllEntry(Int32 memid, INVOKEKIND invKind, IntPtr pBstrDllName, IntPtr pBstrName, IntPtr pwOrdinal)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo.GetDocumentationInt32StringOutStringOutInt32OutStringOut">
            <summary>Задает stub ITypeInfo.GetDocumentation(Int32 index, String&amp; strName, String&amp; strDocString, Int32&amp; dwHelpContext, String&amp; strHelpFile)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo.GetFuncDescInt32IntPtrOut">
            <summary>Задает stub ITypeInfo.GetFuncDesc(Int32 index, IntPtr&amp; ppFuncDesc)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo.GetIDsOfNamesStringArrayInt32Int32Array">
            <summary>Задает stub ITypeInfo.GetIDsOfNames(String[] rgszNames, Int32 cNames, Int32[] pMemId)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo.GetImplTypeFlagsInt32IMPLTYPEFLAGSOut">
            <summary>Задает stub ITypeInfo.GetImplTypeFlags(Int32 index, IMPLTYPEFLAGS&amp; pImplTypeFlags)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo.GetMopsInt32StringOut">
            <summary>Задает stub ITypeInfo.GetMops(Int32 memid, String&amp; pBstrMops)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo.GetNamesInt32StringArrayInt32Int32Out">
            <summary>Задает stub ITypeInfo.GetNames(Int32 memid, String[] rgBstrNames, Int32 cMaxNames, Int32&amp; pcNames)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo.GetRefTypeInfoInt32ITypeInfoOut">
            <summary>Задает stub ITypeInfo.GetRefTypeInfo(Int32 hRef, ITypeInfo&amp; ppTI)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo.GetRefTypeOfImplTypeInt32Int32Out">
            <summary>Задает stub ITypeInfo.GetRefTypeOfImplType(Int32 index, Int32&amp; href)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo.GetTypeAttrIntPtrOut">
            <summary>Задает stub ITypeInfo.GetTypeAttr(IntPtr&amp; ppTypeAttr)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo.GetTypeCompITypeCompOut">
            <summary>Задает stub ITypeInfo.GetTypeComp(ITypeComp&amp; ppTComp)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo.GetVarDescInt32IntPtrOut">
            <summary>Задает stub ITypeInfo.GetVarDesc(Int32 index, IntPtr&amp; ppVarDesc)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo.InvokeObjectInt32Int16DISPPARAMSRefIntPtrIntPtrInt32Out">
            <summary>Задает stub ITypeInfo.Invoke(Object pvInstance, Int32 memid, Int16 wFlags, DISPPARAMS&amp; pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, Int32&amp; puArgErr)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo.ReleaseFuncDescIntPtr">
            <summary>Задает stub ITypeInfo.ReleaseFuncDesc(IntPtr pFuncDesc)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo.ReleaseTypeAttrIntPtr">
            <summary>Задает stub ITypeInfo.ReleaseTypeAttr(IntPtr pTypeAttr)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo.ReleaseVarDescIntPtr">
            <summary>Задает stub ITypeInfo.ReleaseVarDesc(IntPtr pVarDesc)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo.global::System#Runtime#InteropServices#ComTypes#ITypeInfo#AddressOfMember(System.Int32,System.Runtime.InteropServices.ComTypes.INVOKEKIND,System.IntPtr@)">
            <summary>Задает заглушка ITypeInfo.AddressOfMember(Int32 memid, INVOKEKIND invKind, IntPtr&amp; ppv)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo.global::System#Runtime#InteropServices#ComTypes#ITypeInfo#CreateInstance(System.Object,System.Guid@,System.Object@)">
            <summary>Задает заглушка ITypeInfo.CreateInstance(Object pUnkOuter, Guid&amp; riid, Object&amp; ppvObj)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo.global::System#Runtime#InteropServices#ComTypes#ITypeInfo#GetContainingTypeLib(System.Runtime.InteropServices.ComTypes.ITypeLib@,System.Int32@)">
            <summary>Задает заглушка ITypeInfo.GetContainingTypeLib(ITypeLib&amp; ppTLB, Int32&amp; pIndex)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo.global::System#Runtime#InteropServices#ComTypes#ITypeInfo#GetDllEntry(System.Int32,System.Runtime.InteropServices.ComTypes.INVOKEKIND,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>Задает заглушка ITypeInfo.GetDllEntry(Int32 memid, INVOKEKIND invKind, IntPtr pBstrDllName, IntPtr pBstrName, IntPtr pwOrdinal)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo.global::System#Runtime#InteropServices#ComTypes#ITypeInfo#GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)">
            <summary>Задает заглушка ITypeInfo.GetDocumentation(Int32 index, String&amp; strName, String&amp; strDocString, Int32&amp; dwHelpContext, String&amp; strHelpFile)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo.global::System#Runtime#InteropServices#ComTypes#ITypeInfo#GetFuncDesc(System.Int32,System.IntPtr@)">
            <summary>Задает заглушка ITypeInfo.GetFuncDesc(Int32 index, IntPtr&amp; ppFuncDesc)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo.global::System#Runtime#InteropServices#ComTypes#ITypeInfo#GetIDsOfNames(System.String[],System.Int32,System.Int32[])">
            <summary>Задает заглушка ITypeInfo.GetIDsOfNames(String[] rgszNames, Int32 cNames, Int32[] pMemId)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo.global::System#Runtime#InteropServices#ComTypes#ITypeInfo#GetImplTypeFlags(System.Int32,System.Runtime.InteropServices.ComTypes.IMPLTYPEFLAGS@)">
            <summary>Задает заглушка ITypeInfo.GetImplTypeFlags(Int32 index, IMPLTYPEFLAGS&amp; pImplTypeFlags)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo.global::System#Runtime#InteropServices#ComTypes#ITypeInfo#GetMops(System.Int32,System.String@)">
            <summary>Задает заглушка ITypeInfo.GetMops(Int32 memid, String&amp; pBstrMops)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo.global::System#Runtime#InteropServices#ComTypes#ITypeInfo#GetNames(System.Int32,System.String[],System.Int32,System.Int32@)">
            <summary>Задает заглушка ITypeInfo.GetNames(Int32 memid, String[] rgBstrNames, Int32 cMaxNames, Int32&amp; pcNames)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo.global::System#Runtime#InteropServices#ComTypes#ITypeInfo#GetRefTypeInfo(System.Int32,System.Runtime.InteropServices.ComTypes.ITypeInfo@)">
            <summary>Задает заглушка ITypeInfo.GetRefTypeInfo(Int32 hRef, ITypeInfo&amp; ppTI)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo.global::System#Runtime#InteropServices#ComTypes#ITypeInfo#GetRefTypeOfImplType(System.Int32,System.Int32@)">
            <summary>Задает заглушка ITypeInfo.GetRefTypeOfImplType(Int32 index, Int32&amp; href)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo.global::System#Runtime#InteropServices#ComTypes#ITypeInfo#GetTypeAttr(System.IntPtr@)">
            <summary>Задает заглушка ITypeInfo.GetTypeAttr(IntPtr&amp; ppTypeAttr)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo.global::System#Runtime#InteropServices#ComTypes#ITypeInfo#GetTypeComp(System.Runtime.InteropServices.ComTypes.ITypeComp@)">
            <summary>Задает заглушка ITypeInfo.GetTypeComp(ITypeComp&amp; ppTComp)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo.global::System#Runtime#InteropServices#ComTypes#ITypeInfo#GetVarDesc(System.Int32,System.IntPtr@)">
            <summary>Задает заглушка ITypeInfo.GetVarDesc(Int32 index, IntPtr&amp; ppVarDesc)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo.global::System#Runtime#InteropServices#ComTypes#ITypeInfo#Invoke(System.Object,System.Int32,System.Int16,System.Runtime.InteropServices.ComTypes.DISPPARAMS@,System.IntPtr,System.IntPtr,System.Int32@)">
            <summary>Задает заглушка ITypeInfo.Invoke(Object pvInstance, Int32 memid, Int16 wFlags, DISPPARAMS&amp; pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, Int32&amp; puArgErr)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo.global::System#Runtime#InteropServices#ComTypes#ITypeInfo#ReleaseFuncDesc(System.IntPtr)">
            <summary>Задает заглушка ITypeInfo.ReleaseFuncDesc(IntPtr pFuncDesc)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo.global::System#Runtime#InteropServices#ComTypes#ITypeInfo#ReleaseTypeAttr(System.IntPtr)">
            <summary>Задает заглушка ITypeInfo.ReleaseTypeAttr(IntPtr pTypeAttr)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo.global::System#Runtime#InteropServices#ComTypes#ITypeInfo#ReleaseVarDesc(System.IntPtr)">
            <summary>Задает заглушка ITypeInfo.ReleaseVarDesc(IntPtr pVarDesc)</summary>
        </member>
        <member name="T:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2">
            <summary>Тип заглушки System.Runtime.InteropServices.ComTypes.ITypeInfo2</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.#ctor">
            <summary>Инициализирует новый экземпляр type StubITypeInfo2</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.AddressOfMemberInt32INVOKEKINDIntPtrOut">
            <summary>Задает stub ITypeInfo2.AddressOfMember(Int32 memid, INVOKEKIND invKind, IntPtr&amp; ppv)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.AddressOfMemberInt32INVOKEKINDIntPtrOut01">
            <summary>Задает stub ITypeInfo.AddressOfMember(Int32 memid, INVOKEKIND invKind, IntPtr&amp; ppv)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.CreateInstanceObjectGuidRefObjectOut">
            <summary>Задает stub ITypeInfo2.CreateInstance(Object pUnkOuter, Guid&amp; riid, Object&amp; ppvObj)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.CreateInstanceObjectGuidRefObjectOut01">
            <summary>Задает stub ITypeInfo.CreateInstance(Object pUnkOuter, Guid&amp; riid, Object&amp; ppvObj)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.GetAllCustDataIntPtr">
            <summary>Задает stub ITypeInfo2.GetAllCustData(IntPtr pCustData)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.GetAllFuncCustDataInt32IntPtr">
            <summary>Задает stub ITypeInfo2.GetAllFuncCustData(Int32 index, IntPtr pCustData)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.GetAllImplTypeCustDataInt32IntPtr">
            <summary>Задает stub ITypeInfo2.GetAllImplTypeCustData(Int32 index, IntPtr pCustData)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.GetAllParamCustDataInt32Int32IntPtr">
            <summary>Задает stub ITypeInfo2.GetAllParamCustData(Int32 indexFunc, Int32 indexParam, IntPtr pCustData)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.GetAllVarCustDataInt32IntPtr">
            <summary>Задает stub ITypeInfo2.GetAllVarCustData(Int32 index, IntPtr pCustData)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.GetContainingTypeLibITypeLibOutInt32Out">
            <summary>Задает stub ITypeInfo2.GetContainingTypeLib(ITypeLib&amp; ppTLB, Int32&amp; pIndex)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.GetContainingTypeLibITypeLibOutInt32Out01">
            <summary>Задает stub ITypeInfo.GetContainingTypeLib(ITypeLib&amp; ppTLB, Int32&amp; pIndex)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.GetCustDataGuidRefObjectOut">
            <summary>Задает stub ITypeInfo2.GetCustData(Guid&amp; guid, Object&amp; pVarVal)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.GetDllEntryInt32INVOKEKINDIntPtrIntPtrIntPtr">
            <summary>Задает stub ITypeInfo2.GetDllEntry(Int32 memid, INVOKEKIND invKind, IntPtr pBstrDllName, IntPtr pBstrName, IntPtr pwOrdinal)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.GetDllEntryInt32INVOKEKINDIntPtrIntPtrIntPtr01">
            <summary>Задает stub ITypeInfo.GetDllEntry(Int32 memid, INVOKEKIND invKind, IntPtr pBstrDllName, IntPtr pBstrName, IntPtr pwOrdinal)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.GetDocumentation2Int32StringOutInt32OutStringOut">
            <summary>Задает stub ITypeInfo2.GetDocumentation2(Int32 memid, String&amp; pbstrHelpString, Int32&amp; pdwHelpStringContext, String&amp; pbstrHelpStringDll)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.GetDocumentationInt32StringOutStringOutInt32OutStringOut">
            <summary>Задает stub ITypeInfo2.GetDocumentation(Int32 index, String&amp; strName, String&amp; strDocString, Int32&amp; dwHelpContext, String&amp; strHelpFile)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.GetDocumentationInt32StringOutStringOutInt32OutStringOut01">
            <summary>Задает stub ITypeInfo.GetDocumentation(Int32 index, String&amp; strName, String&amp; strDocString, Int32&amp; dwHelpContext, String&amp; strHelpFile)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.GetFuncCustDataInt32GuidRefObjectOut">
            <summary>Задает stub ITypeInfo2.GetFuncCustData(Int32 index, Guid&amp; guid, Object&amp; pVarVal)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.GetFuncDescInt32IntPtrOut">
            <summary>Задает stub ITypeInfo2.GetFuncDesc(Int32 index, IntPtr&amp; ppFuncDesc)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.GetFuncDescInt32IntPtrOut01">
            <summary>Задает stub ITypeInfo.GetFuncDesc(Int32 index, IntPtr&amp; ppFuncDesc)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.GetFuncIndexOfMemIdInt32INVOKEKINDInt32Out">
            <summary>Задает stub ITypeInfo2.GetFuncIndexOfMemId(Int32 memid, INVOKEKIND invKind, Int32&amp; pFuncIndex)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.GetIDsOfNamesStringArrayInt32Int32Array">
            <summary>Задает stub ITypeInfo2.GetIDsOfNames(String[] rgszNames, Int32 cNames, Int32[] pMemId)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.GetIDsOfNamesStringArrayInt32Int32Array01">
            <summary>Задает stub ITypeInfo.GetIDsOfNames(String[] rgszNames, Int32 cNames, Int32[] pMemId)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.GetImplTypeCustDataInt32GuidRefObjectOut">
            <summary>Задает stub ITypeInfo2.GetImplTypeCustData(Int32 index, Guid&amp; guid, Object&amp; pVarVal)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.GetImplTypeFlagsInt32IMPLTYPEFLAGSOut">
            <summary>Задает stub ITypeInfo2.GetImplTypeFlags(Int32 index, IMPLTYPEFLAGS&amp; pImplTypeFlags)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.GetImplTypeFlagsInt32IMPLTYPEFLAGSOut01">
            <summary>Задает stub ITypeInfo.GetImplTypeFlags(Int32 index, IMPLTYPEFLAGS&amp; pImplTypeFlags)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.GetMopsInt32StringOut">
            <summary>Задает stub ITypeInfo2.GetMops(Int32 memid, String&amp; pBstrMops)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.GetMopsInt32StringOut01">
            <summary>Задает stub ITypeInfo.GetMops(Int32 memid, String&amp; pBstrMops)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.GetNamesInt32StringArrayInt32Int32Out">
            <summary>Задает stub ITypeInfo2.GetNames(Int32 memid, String[] rgBstrNames, Int32 cMaxNames, Int32&amp; pcNames)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.GetNamesInt32StringArrayInt32Int32Out01">
            <summary>Задает stub ITypeInfo.GetNames(Int32 memid, String[] rgBstrNames, Int32 cMaxNames, Int32&amp; pcNames)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.GetParamCustDataInt32Int32GuidRefObjectOut">
            <summary>Задает stub ITypeInfo2.GetParamCustData(Int32 indexFunc, Int32 indexParam, Guid&amp; guid, Object&amp; pVarVal)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.GetRefTypeInfoInt32ITypeInfoOut">
            <summary>Задает stub ITypeInfo2.GetRefTypeInfo(Int32 hRef, ITypeInfo&amp; ppTI)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.GetRefTypeInfoInt32ITypeInfoOut01">
            <summary>Задает stub ITypeInfo.GetRefTypeInfo(Int32 hRef, ITypeInfo&amp; ppTI)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.GetRefTypeOfImplTypeInt32Int32Out">
            <summary>Задает stub ITypeInfo2.GetRefTypeOfImplType(Int32 index, Int32&amp; href)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.GetRefTypeOfImplTypeInt32Int32Out01">
            <summary>Задает stub ITypeInfo.GetRefTypeOfImplType(Int32 index, Int32&amp; href)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.GetTypeAttrIntPtrOut">
            <summary>Задает stub ITypeInfo2.GetTypeAttr(IntPtr&amp; ppTypeAttr)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.GetTypeAttrIntPtrOut01">
            <summary>Задает stub ITypeInfo.GetTypeAttr(IntPtr&amp; ppTypeAttr)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.GetTypeCompITypeCompOut">
            <summary>Задает stub ITypeInfo2.GetTypeComp(ITypeComp&amp; ppTComp)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.GetTypeCompITypeCompOut01">
            <summary>Задает stub ITypeInfo.GetTypeComp(ITypeComp&amp; ppTComp)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.GetTypeFlagsInt32Out">
            <summary>Задает stub ITypeInfo2.GetTypeFlags(Int32&amp; pTypeFlags)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.GetTypeKindTYPEKINDOut">
            <summary>Задает stub ITypeInfo2.GetTypeKind(TYPEKIND&amp; pTypeKind)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.GetVarCustDataInt32GuidRefObjectOut">
            <summary>Задает stub ITypeInfo2.GetVarCustData(Int32 index, Guid&amp; guid, Object&amp; pVarVal)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.GetVarDescInt32IntPtrOut">
            <summary>Задает stub ITypeInfo2.GetVarDesc(Int32 index, IntPtr&amp; ppVarDesc)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.GetVarDescInt32IntPtrOut01">
            <summary>Задает stub ITypeInfo.GetVarDesc(Int32 index, IntPtr&amp; ppVarDesc)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.GetVarIndexOfMemIdInt32Int32Out">
            <summary>Задает stub ITypeInfo2.GetVarIndexOfMemId(Int32 memid, Int32&amp; pVarIndex)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.InvokeObjectInt32Int16DISPPARAMSRefIntPtrIntPtrInt32Out">
            <summary>Задает stub ITypeInfo2.Invoke(Object pvInstance, Int32 memid, Int16 wFlags, DISPPARAMS&amp; pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, Int32&amp; puArgErr)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.InvokeObjectInt32Int16DISPPARAMSRefIntPtrIntPtrInt32Out01">
            <summary>Задает stub ITypeInfo.Invoke(Object pvInstance, Int32 memid, Int16 wFlags, DISPPARAMS&amp; pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, Int32&amp; puArgErr)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.ReleaseFuncDescIntPtr">
            <summary>Задает stub ITypeInfo2.ReleaseFuncDesc(IntPtr pFuncDesc)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.ReleaseFuncDescIntPtr01">
            <summary>Задает stub ITypeInfo.ReleaseFuncDesc(IntPtr pFuncDesc)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.ReleaseTypeAttrIntPtr">
            <summary>Задает stub ITypeInfo2.ReleaseTypeAttr(IntPtr pTypeAttr)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.ReleaseTypeAttrIntPtr01">
            <summary>Задает stub ITypeInfo.ReleaseTypeAttr(IntPtr pTypeAttr)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.ReleaseVarDescIntPtr">
            <summary>Задает stub ITypeInfo2.ReleaseVarDesc(IntPtr pVarDesc)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.ReleaseVarDescIntPtr01">
            <summary>Задает stub ITypeInfo.ReleaseVarDesc(IntPtr pVarDesc)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.global::System#Runtime#InteropServices#ComTypes#ITypeInfo#AddressOfMember(System.Int32,System.Runtime.InteropServices.ComTypes.INVOKEKIND,System.IntPtr@)">
            <summary>Задает заглушка ITypeInfo.AddressOfMember(Int32 memid, INVOKEKIND invKind, IntPtr&amp; ppv)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.global::System#Runtime#InteropServices#ComTypes#ITypeInfo#CreateInstance(System.Object,System.Guid@,System.Object@)">
            <summary>Задает заглушка ITypeInfo.CreateInstance(Object pUnkOuter, Guid&amp; riid, Object&amp; ppvObj)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.global::System#Runtime#InteropServices#ComTypes#ITypeInfo#GetContainingTypeLib(System.Runtime.InteropServices.ComTypes.ITypeLib@,System.Int32@)">
            <summary>Задает заглушка ITypeInfo.GetContainingTypeLib(ITypeLib&amp; ppTLB, Int32&amp; pIndex)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.global::System#Runtime#InteropServices#ComTypes#ITypeInfo#GetDllEntry(System.Int32,System.Runtime.InteropServices.ComTypes.INVOKEKIND,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>Задает заглушка ITypeInfo.GetDllEntry(Int32 memid, INVOKEKIND invKind, IntPtr pBstrDllName, IntPtr pBstrName, IntPtr pwOrdinal)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.global::System#Runtime#InteropServices#ComTypes#ITypeInfo#GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)">
            <summary>Задает заглушка ITypeInfo.GetDocumentation(Int32 index, String&amp; strName, String&amp; strDocString, Int32&amp; dwHelpContext, String&amp; strHelpFile)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.global::System#Runtime#InteropServices#ComTypes#ITypeInfo#GetFuncDesc(System.Int32,System.IntPtr@)">
            <summary>Задает заглушка ITypeInfo.GetFuncDesc(Int32 index, IntPtr&amp; ppFuncDesc)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.global::System#Runtime#InteropServices#ComTypes#ITypeInfo#GetIDsOfNames(System.String[],System.Int32,System.Int32[])">
            <summary>Задает заглушка ITypeInfo.GetIDsOfNames(String[] rgszNames, Int32 cNames, Int32[] pMemId)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.global::System#Runtime#InteropServices#ComTypes#ITypeInfo#GetImplTypeFlags(System.Int32,System.Runtime.InteropServices.ComTypes.IMPLTYPEFLAGS@)">
            <summary>Задает заглушка ITypeInfo.GetImplTypeFlags(Int32 index, IMPLTYPEFLAGS&amp; pImplTypeFlags)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.global::System#Runtime#InteropServices#ComTypes#ITypeInfo#GetMops(System.Int32,System.String@)">
            <summary>Задает заглушка ITypeInfo.GetMops(Int32 memid, String&amp; pBstrMops)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.global::System#Runtime#InteropServices#ComTypes#ITypeInfo#GetNames(System.Int32,System.String[],System.Int32,System.Int32@)">
            <summary>Задает заглушка ITypeInfo.GetNames(Int32 memid, String[] rgBstrNames, Int32 cMaxNames, Int32&amp; pcNames)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.global::System#Runtime#InteropServices#ComTypes#ITypeInfo#GetRefTypeInfo(System.Int32,System.Runtime.InteropServices.ComTypes.ITypeInfo@)">
            <summary>Задает заглушка ITypeInfo.GetRefTypeInfo(Int32 hRef, ITypeInfo&amp; ppTI)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.global::System#Runtime#InteropServices#ComTypes#ITypeInfo#GetRefTypeOfImplType(System.Int32,System.Int32@)">
            <summary>Задает заглушка ITypeInfo.GetRefTypeOfImplType(Int32 index, Int32&amp; href)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.global::System#Runtime#InteropServices#ComTypes#ITypeInfo#GetTypeAttr(System.IntPtr@)">
            <summary>Задает заглушка ITypeInfo.GetTypeAttr(IntPtr&amp; ppTypeAttr)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.global::System#Runtime#InteropServices#ComTypes#ITypeInfo#GetTypeComp(System.Runtime.InteropServices.ComTypes.ITypeComp@)">
            <summary>Задает заглушка ITypeInfo.GetTypeComp(ITypeComp&amp; ppTComp)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.global::System#Runtime#InteropServices#ComTypes#ITypeInfo#GetVarDesc(System.Int32,System.IntPtr@)">
            <summary>Задает заглушка ITypeInfo.GetVarDesc(Int32 index, IntPtr&amp; ppVarDesc)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.global::System#Runtime#InteropServices#ComTypes#ITypeInfo#Invoke(System.Object,System.Int32,System.Int16,System.Runtime.InteropServices.ComTypes.DISPPARAMS@,System.IntPtr,System.IntPtr,System.Int32@)">
            <summary>Задает заглушка ITypeInfo.Invoke(Object pvInstance, Int32 memid, Int16 wFlags, DISPPARAMS&amp; pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, Int32&amp; puArgErr)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.global::System#Runtime#InteropServices#ComTypes#ITypeInfo#ReleaseFuncDesc(System.IntPtr)">
            <summary>Задает заглушка ITypeInfo.ReleaseFuncDesc(IntPtr pFuncDesc)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.global::System#Runtime#InteropServices#ComTypes#ITypeInfo#ReleaseTypeAttr(System.IntPtr)">
            <summary>Задает заглушка ITypeInfo.ReleaseTypeAttr(IntPtr pTypeAttr)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.global::System#Runtime#InteropServices#ComTypes#ITypeInfo#ReleaseVarDesc(System.IntPtr)">
            <summary>Задает заглушка ITypeInfo.ReleaseVarDesc(IntPtr pVarDesc)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.global::System#Runtime#InteropServices#ComTypes#ITypeInfo2#AddressOfMember(System.Int32,System.Runtime.InteropServices.ComTypes.INVOKEKIND,System.IntPtr@)">
            <summary>Задает заглушка ITypeInfo2.AddressOfMember(Int32 memid, INVOKEKIND invKind, IntPtr&amp; ppv)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.global::System#Runtime#InteropServices#ComTypes#ITypeInfo2#CreateInstance(System.Object,System.Guid@,System.Object@)">
            <summary>Задает заглушка ITypeInfo2.CreateInstance(Object pUnkOuter, Guid&amp; riid, Object&amp; ppvObj)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.global::System#Runtime#InteropServices#ComTypes#ITypeInfo2#GetAllCustData(System.IntPtr)">
            <summary>Задает заглушка ITypeInfo2.GetAllCustData(IntPtr pCustData)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.global::System#Runtime#InteropServices#ComTypes#ITypeInfo2#GetAllFuncCustData(System.Int32,System.IntPtr)">
            <summary>Задает заглушка ITypeInfo2.GetAllFuncCustData(Int32 index, IntPtr pCustData)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.global::System#Runtime#InteropServices#ComTypes#ITypeInfo2#GetAllImplTypeCustData(System.Int32,System.IntPtr)">
            <summary>Задает заглушка ITypeInfo2.GetAllImplTypeCustData(Int32 index, IntPtr pCustData)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.global::System#Runtime#InteropServices#ComTypes#ITypeInfo2#GetAllParamCustData(System.Int32,System.Int32,System.IntPtr)">
            <summary>Задает заглушка ITypeInfo2.GetAllParamCustData(Int32 indexFunc, Int32 indexParam, IntPtr pCustData)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.global::System#Runtime#InteropServices#ComTypes#ITypeInfo2#GetAllVarCustData(System.Int32,System.IntPtr)">
            <summary>Задает заглушка ITypeInfo2.GetAllVarCustData(Int32 index, IntPtr pCustData)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.global::System#Runtime#InteropServices#ComTypes#ITypeInfo2#GetContainingTypeLib(System.Runtime.InteropServices.ComTypes.ITypeLib@,System.Int32@)">
            <summary>Задает заглушка ITypeInfo2.GetContainingTypeLib(ITypeLib&amp; ppTLB, Int32&amp; pIndex)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.global::System#Runtime#InteropServices#ComTypes#ITypeInfo2#GetCustData(System.Guid@,System.Object@)">
            <summary>Задает заглушка ITypeInfo2.GetCustData(Guid&amp; guid, Object&amp; pVarVal)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.global::System#Runtime#InteropServices#ComTypes#ITypeInfo2#GetDllEntry(System.Int32,System.Runtime.InteropServices.ComTypes.INVOKEKIND,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>Задает заглушка ITypeInfo2.GetDllEntry(Int32 memid, INVOKEKIND invKind, IntPtr pBstrDllName, IntPtr pBstrName, IntPtr pwOrdinal)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.global::System#Runtime#InteropServices#ComTypes#ITypeInfo2#GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)">
            <summary>Задает заглушка ITypeInfo2.GetDocumentation(Int32 index, String&amp; strName, String&amp; strDocString, Int32&amp; dwHelpContext, String&amp; strHelpFile)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.global::System#Runtime#InteropServices#ComTypes#ITypeInfo2#GetDocumentation2(System.Int32,System.String@,System.Int32@,System.String@)">
            <summary>Задает заглушка ITypeInfo2.GetDocumentation2(Int32 memid, String&amp; pbstrHelpString, Int32&amp; pdwHelpStringContext, String&amp; pbstrHelpStringDll)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.global::System#Runtime#InteropServices#ComTypes#ITypeInfo2#GetFuncCustData(System.Int32,System.Guid@,System.Object@)">
            <summary>Задает заглушка ITypeInfo2.GetFuncCustData(Int32 index, Guid&amp; guid, Object&amp; pVarVal)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.global::System#Runtime#InteropServices#ComTypes#ITypeInfo2#GetFuncDesc(System.Int32,System.IntPtr@)">
            <summary>Задает заглушка ITypeInfo2.GetFuncDesc(Int32 index, IntPtr&amp; ppFuncDesc)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.global::System#Runtime#InteropServices#ComTypes#ITypeInfo2#GetFuncIndexOfMemId(System.Int32,System.Runtime.InteropServices.ComTypes.INVOKEKIND,System.Int32@)">
            <summary>Задает заглушка ITypeInfo2.GetFuncIndexOfMemId(Int32 memid, INVOKEKIND invKind, Int32&amp; pFuncIndex)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.global::System#Runtime#InteropServices#ComTypes#ITypeInfo2#GetIDsOfNames(System.String[],System.Int32,System.Int32[])">
            <summary>Задает заглушка ITypeInfo2.GetIDsOfNames(String[] rgszNames, Int32 cNames, Int32[] pMemId)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.global::System#Runtime#InteropServices#ComTypes#ITypeInfo2#GetImplTypeCustData(System.Int32,System.Guid@,System.Object@)">
            <summary>Задает заглушка ITypeInfo2.GetImplTypeCustData(Int32 index, Guid&amp; guid, Object&amp; pVarVal)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.global::System#Runtime#InteropServices#ComTypes#ITypeInfo2#GetImplTypeFlags(System.Int32,System.Runtime.InteropServices.ComTypes.IMPLTYPEFLAGS@)">
            <summary>Задает заглушка ITypeInfo2.GetImplTypeFlags(Int32 index, IMPLTYPEFLAGS&amp; pImplTypeFlags)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.global::System#Runtime#InteropServices#ComTypes#ITypeInfo2#GetMops(System.Int32,System.String@)">
            <summary>Задает заглушка ITypeInfo2.GetMops(Int32 memid, String&amp; pBstrMops)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.global::System#Runtime#InteropServices#ComTypes#ITypeInfo2#GetNames(System.Int32,System.String[],System.Int32,System.Int32@)">
            <summary>Задает заглушка ITypeInfo2.GetNames(Int32 memid, String[] rgBstrNames, Int32 cMaxNames, Int32&amp; pcNames)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.global::System#Runtime#InteropServices#ComTypes#ITypeInfo2#GetParamCustData(System.Int32,System.Int32,System.Guid@,System.Object@)">
            <summary>Задает заглушка ITypeInfo2.GetParamCustData(Int32 indexFunc, Int32 indexParam, Guid&amp; guid, Object&amp; pVarVal)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.global::System#Runtime#InteropServices#ComTypes#ITypeInfo2#GetRefTypeInfo(System.Int32,System.Runtime.InteropServices.ComTypes.ITypeInfo@)">
            <summary>Задает заглушка ITypeInfo2.GetRefTypeInfo(Int32 hRef, ITypeInfo&amp; ppTI)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.global::System#Runtime#InteropServices#ComTypes#ITypeInfo2#GetRefTypeOfImplType(System.Int32,System.Int32@)">
            <summary>Задает заглушка ITypeInfo2.GetRefTypeOfImplType(Int32 index, Int32&amp; href)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.global::System#Runtime#InteropServices#ComTypes#ITypeInfo2#GetTypeAttr(System.IntPtr@)">
            <summary>Задает заглушка ITypeInfo2.GetTypeAttr(IntPtr&amp; ppTypeAttr)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.global::System#Runtime#InteropServices#ComTypes#ITypeInfo2#GetTypeComp(System.Runtime.InteropServices.ComTypes.ITypeComp@)">
            <summary>Задает заглушка ITypeInfo2.GetTypeComp(ITypeComp&amp; ppTComp)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.global::System#Runtime#InteropServices#ComTypes#ITypeInfo2#GetTypeFlags(System.Int32@)">
            <summary>Задает заглушка ITypeInfo2.GetTypeFlags(Int32&amp; pTypeFlags)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.global::System#Runtime#InteropServices#ComTypes#ITypeInfo2#GetTypeKind(System.Runtime.InteropServices.ComTypes.TYPEKIND@)">
            <summary>Задает заглушка ITypeInfo2.GetTypeKind(TYPEKIND&amp; pTypeKind)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.global::System#Runtime#InteropServices#ComTypes#ITypeInfo2#GetVarCustData(System.Int32,System.Guid@,System.Object@)">
            <summary>Задает заглушка ITypeInfo2.GetVarCustData(Int32 index, Guid&amp; guid, Object&amp; pVarVal)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.global::System#Runtime#InteropServices#ComTypes#ITypeInfo2#GetVarDesc(System.Int32,System.IntPtr@)">
            <summary>Задает заглушка ITypeInfo2.GetVarDesc(Int32 index, IntPtr&amp; ppVarDesc)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.global::System#Runtime#InteropServices#ComTypes#ITypeInfo2#GetVarIndexOfMemId(System.Int32,System.Int32@)">
            <summary>Задает заглушка ITypeInfo2.GetVarIndexOfMemId(Int32 memid, Int32&amp; pVarIndex)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.global::System#Runtime#InteropServices#ComTypes#ITypeInfo2#Invoke(System.Object,System.Int32,System.Int16,System.Runtime.InteropServices.ComTypes.DISPPARAMS@,System.IntPtr,System.IntPtr,System.Int32@)">
            <summary>Задает заглушка ITypeInfo2.Invoke(Object pvInstance, Int32 memid, Int16 wFlags, DISPPARAMS&amp; pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, Int32&amp; puArgErr)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.global::System#Runtime#InteropServices#ComTypes#ITypeInfo2#ReleaseFuncDesc(System.IntPtr)">
            <summary>Задает заглушка ITypeInfo2.ReleaseFuncDesc(IntPtr pFuncDesc)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.global::System#Runtime#InteropServices#ComTypes#ITypeInfo2#ReleaseTypeAttr(System.IntPtr)">
            <summary>Задает заглушка ITypeInfo2.ReleaseTypeAttr(IntPtr pTypeAttr)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeInfo2.global::System#Runtime#InteropServices#ComTypes#ITypeInfo2#ReleaseVarDesc(System.IntPtr)">
            <summary>Задает заглушка ITypeInfo2.ReleaseVarDesc(IntPtr pVarDesc)</summary>
        </member>
        <member name="T:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeLib">
            <summary>Тип заглушки System.Runtime.InteropServices.ComTypes.ITypeLib</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeLib.#ctor">
            <summary>Инициализирует новый экземпляр type StubITypeLib</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeLib.FindNameStringInt32ITypeInfoArrayInt32ArrayInt16Ref">
            <summary>Задает stub ITypeLib.FindName(String szNameBuf, Int32 lHashVal, ITypeInfo[] ppTInfo, Int32[] rgMemId, Int16&amp; pcFound)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeLib.GetDocumentationInt32StringOutStringOutInt32OutStringOut">
            <summary>Задает stub ITypeLib.GetDocumentation(Int32 index, String&amp; strName, String&amp; strDocString, Int32&amp; dwHelpContext, String&amp; strHelpFile)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeLib.GetLibAttrIntPtrOut">
            <summary>Задает stub ITypeLib.GetLibAttr(IntPtr&amp; ppTLibAttr)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeLib.GetTypeCompITypeCompOut">
            <summary>Задает stub ITypeLib.GetTypeComp(ITypeComp&amp; ppTComp)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeLib.GetTypeInfoCount">
            <summary>Задает stub ITypeLib.GetTypeInfoCount()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeLib.GetTypeInfoInt32ITypeInfoOut">
            <summary>Задает stub ITypeLib.GetTypeInfo(Int32 index, ITypeInfo&amp; ppTI)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeLib.GetTypeInfoOfGuidGuidRefITypeInfoOut">
            <summary>Задает stub ITypeLib.GetTypeInfoOfGuid(Guid&amp; guid, ITypeInfo&amp; ppTInfo)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeLib.GetTypeInfoTypeInt32TYPEKINDOut">
            <summary>Задает stub ITypeLib.GetTypeInfoType(Int32 index, TYPEKIND&amp; pTKind)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeLib.IsNameStringInt32">
            <summary>Задает stub ITypeLib.IsName(String szNameBuf, Int32 lHashVal)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeLib.ReleaseTLibAttrIntPtr">
            <summary>Задает stub ITypeLib.ReleaseTLibAttr(IntPtr pTLibAttr)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeLib.global::System#Runtime#InteropServices#ComTypes#ITypeLib#FindName(System.String,System.Int32,System.Runtime.InteropServices.ComTypes.ITypeInfo[],System.Int32[],System.Int16@)">
            <summary>Задает заглушка ITypeLib.FindName(String szNameBuf, Int32 lHashVal, ITypeInfo[] ppTInfo, Int32[] rgMemId, Int16&amp; pcFound)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeLib.global::System#Runtime#InteropServices#ComTypes#ITypeLib#GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)">
            <summary>Задает заглушка ITypeLib.GetDocumentation(Int32 index, String&amp; strName, String&amp; strDocString, Int32&amp; dwHelpContext, String&amp; strHelpFile)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeLib.global::System#Runtime#InteropServices#ComTypes#ITypeLib#GetLibAttr(System.IntPtr@)">
            <summary>Задает заглушка ITypeLib.GetLibAttr(IntPtr&amp; ppTLibAttr)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeLib.global::System#Runtime#InteropServices#ComTypes#ITypeLib#GetTypeComp(System.Runtime.InteropServices.ComTypes.ITypeComp@)">
            <summary>Задает заглушка ITypeLib.GetTypeComp(ITypeComp&amp; ppTComp)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeLib.global::System#Runtime#InteropServices#ComTypes#ITypeLib#GetTypeInfo(System.Int32,System.Runtime.InteropServices.ComTypes.ITypeInfo@)">
            <summary>Задает заглушка ITypeLib.GetTypeInfo(Int32 index, ITypeInfo&amp; ppTI)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeLib.global::System#Runtime#InteropServices#ComTypes#ITypeLib#GetTypeInfoCount">
            <summary>Задает заглушка ITypeLib.GetTypeInfoCount()</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeLib.global::System#Runtime#InteropServices#ComTypes#ITypeLib#GetTypeInfoOfGuid(System.Guid@,System.Runtime.InteropServices.ComTypes.ITypeInfo@)">
            <summary>Задает заглушка ITypeLib.GetTypeInfoOfGuid(Guid&amp; guid, ITypeInfo&amp; ppTInfo)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeLib.global::System#Runtime#InteropServices#ComTypes#ITypeLib#GetTypeInfoType(System.Int32,System.Runtime.InteropServices.ComTypes.TYPEKIND@)">
            <summary>Задает заглушка ITypeLib.GetTypeInfoType(Int32 index, TYPEKIND&amp; pTKind)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeLib.global::System#Runtime#InteropServices#ComTypes#ITypeLib#IsName(System.String,System.Int32)">
            <summary>Задает заглушка ITypeLib.IsName(String szNameBuf, Int32 lHashVal)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeLib.global::System#Runtime#InteropServices#ComTypes#ITypeLib#ReleaseTLibAttr(System.IntPtr)">
            <summary>Задает заглушка ITypeLib.ReleaseTLibAttr(IntPtr pTLibAttr)</summary>
        </member>
        <member name="T:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeLib2">
            <summary>Тип заглушки System.Runtime.InteropServices.ComTypes.ITypeLib2</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeLib2.#ctor">
            <summary>Инициализирует новый экземпляр type StubITypeLib2</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeLib2.FindNameStringInt32ITypeInfoArrayInt32ArrayInt16Ref">
            <summary>Задает stub ITypeLib2.FindName(String szNameBuf, Int32 lHashVal, ITypeInfo[] ppTInfo, Int32[] rgMemId, Int16&amp; pcFound)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeLib2.FindNameStringInt32ITypeInfoArrayInt32ArrayInt16Ref01">
            <summary>Задает stub ITypeLib.FindName(String szNameBuf, Int32 lHashVal, ITypeInfo[] ppTInfo, Int32[] rgMemId, Int16&amp; pcFound)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeLib2.GetAllCustDataIntPtr">
            <summary>Задает stub ITypeLib2.GetAllCustData(IntPtr pCustData)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeLib2.GetCustDataGuidRefObjectOut">
            <summary>Задает stub ITypeLib2.GetCustData(Guid&amp; guid, Object&amp; pVarVal)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeLib2.GetDocumentation2Int32StringOutInt32OutStringOut">
            <summary>Задает stub ITypeLib2.GetDocumentation2(Int32 index, String&amp; pbstrHelpString, Int32&amp; pdwHelpStringContext, String&amp; pbstrHelpStringDll)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeLib2.GetDocumentationInt32StringOutStringOutInt32OutStringOut">
            <summary>Задает stub ITypeLib2.GetDocumentation(Int32 index, String&amp; strName, String&amp; strDocString, Int32&amp; dwHelpContext, String&amp; strHelpFile)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeLib2.GetDocumentationInt32StringOutStringOutInt32OutStringOut01">
            <summary>Задает stub ITypeLib.GetDocumentation(Int32 index, String&amp; strName, String&amp; strDocString, Int32&amp; dwHelpContext, String&amp; strHelpFile)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeLib2.GetLibAttrIntPtrOut">
            <summary>Задает stub ITypeLib2.GetLibAttr(IntPtr&amp; ppTLibAttr)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeLib2.GetLibAttrIntPtrOut01">
            <summary>Задает stub ITypeLib.GetLibAttr(IntPtr&amp; ppTLibAttr)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeLib2.GetLibStatisticsIntPtrInt32Out">
            <summary>Задает stub ITypeLib2.GetLibStatistics(IntPtr pcUniqueNames, Int32&amp; pcchUniqueNames)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeLib2.GetTypeCompITypeCompOut">
            <summary>Задает stub ITypeLib2.GetTypeComp(ITypeComp&amp; ppTComp)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeLib2.GetTypeCompITypeCompOut01">
            <summary>Задает stub ITypeLib.GetTypeComp(ITypeComp&amp; ppTComp)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeLib2.GetTypeInfoCount">
            <summary>Задает stub ITypeLib2.GetTypeInfoCount()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeLib2.GetTypeInfoCount01">
            <summary>Задает stub ITypeLib.GetTypeInfoCount()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeLib2.GetTypeInfoInt32ITypeInfoOut">
            <summary>Задает stub ITypeLib2.GetTypeInfo(Int32 index, ITypeInfo&amp; ppTI)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeLib2.GetTypeInfoInt32ITypeInfoOut01">
            <summary>Задает stub ITypeLib.GetTypeInfo(Int32 index, ITypeInfo&amp; ppTI)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeLib2.GetTypeInfoOfGuidGuidRefITypeInfoOut">
            <summary>Задает stub ITypeLib2.GetTypeInfoOfGuid(Guid&amp; guid, ITypeInfo&amp; ppTInfo)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeLib2.GetTypeInfoOfGuidGuidRefITypeInfoOut01">
            <summary>Задает stub ITypeLib.GetTypeInfoOfGuid(Guid&amp; guid, ITypeInfo&amp; ppTInfo)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeLib2.GetTypeInfoTypeInt32TYPEKINDOut">
            <summary>Задает stub ITypeLib2.GetTypeInfoType(Int32 index, TYPEKIND&amp; pTKind)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeLib2.GetTypeInfoTypeInt32TYPEKINDOut01">
            <summary>Задает stub ITypeLib.GetTypeInfoType(Int32 index, TYPEKIND&amp; pTKind)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeLib2.IsNameStringInt32">
            <summary>Задает stub ITypeLib2.IsName(String szNameBuf, Int32 lHashVal)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeLib2.IsNameStringInt3201">
            <summary>Задает stub ITypeLib.IsName(String szNameBuf, Int32 lHashVal)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeLib2.ReleaseTLibAttrIntPtr">
            <summary>Задает stub ITypeLib2.ReleaseTLibAttr(IntPtr pTLibAttr)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeLib2.ReleaseTLibAttrIntPtr01">
            <summary>Задает stub ITypeLib.ReleaseTLibAttr(IntPtr pTLibAttr)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeLib2.global::System#Runtime#InteropServices#ComTypes#ITypeLib#FindName(System.String,System.Int32,System.Runtime.InteropServices.ComTypes.ITypeInfo[],System.Int32[],System.Int16@)">
            <summary>Задает заглушка ITypeLib.FindName(String szNameBuf, Int32 lHashVal, ITypeInfo[] ppTInfo, Int32[] rgMemId, Int16&amp; pcFound)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeLib2.global::System#Runtime#InteropServices#ComTypes#ITypeLib#GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)">
            <summary>Задает заглушка ITypeLib.GetDocumentation(Int32 index, String&amp; strName, String&amp; strDocString, Int32&amp; dwHelpContext, String&amp; strHelpFile)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeLib2.global::System#Runtime#InteropServices#ComTypes#ITypeLib#GetLibAttr(System.IntPtr@)">
            <summary>Задает заглушка ITypeLib.GetLibAttr(IntPtr&amp; ppTLibAttr)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeLib2.global::System#Runtime#InteropServices#ComTypes#ITypeLib#GetTypeComp(System.Runtime.InteropServices.ComTypes.ITypeComp@)">
            <summary>Задает заглушка ITypeLib.GetTypeComp(ITypeComp&amp; ppTComp)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeLib2.global::System#Runtime#InteropServices#ComTypes#ITypeLib#GetTypeInfo(System.Int32,System.Runtime.InteropServices.ComTypes.ITypeInfo@)">
            <summary>Задает заглушка ITypeLib.GetTypeInfo(Int32 index, ITypeInfo&amp; ppTI)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeLib2.global::System#Runtime#InteropServices#ComTypes#ITypeLib#GetTypeInfoCount">
            <summary>Задает заглушка ITypeLib.GetTypeInfoCount()</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeLib2.global::System#Runtime#InteropServices#ComTypes#ITypeLib#GetTypeInfoOfGuid(System.Guid@,System.Runtime.InteropServices.ComTypes.ITypeInfo@)">
            <summary>Задает заглушка ITypeLib.GetTypeInfoOfGuid(Guid&amp; guid, ITypeInfo&amp; ppTInfo)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeLib2.global::System#Runtime#InteropServices#ComTypes#ITypeLib#GetTypeInfoType(System.Int32,System.Runtime.InteropServices.ComTypes.TYPEKIND@)">
            <summary>Задает заглушка ITypeLib.GetTypeInfoType(Int32 index, TYPEKIND&amp; pTKind)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeLib2.global::System#Runtime#InteropServices#ComTypes#ITypeLib#IsName(System.String,System.Int32)">
            <summary>Задает заглушка ITypeLib.IsName(String szNameBuf, Int32 lHashVal)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeLib2.global::System#Runtime#InteropServices#ComTypes#ITypeLib#ReleaseTLibAttr(System.IntPtr)">
            <summary>Задает заглушка ITypeLib.ReleaseTLibAttr(IntPtr pTLibAttr)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeLib2.global::System#Runtime#InteropServices#ComTypes#ITypeLib2#FindName(System.String,System.Int32,System.Runtime.InteropServices.ComTypes.ITypeInfo[],System.Int32[],System.Int16@)">
            <summary>Задает заглушка ITypeLib2.FindName(String szNameBuf, Int32 lHashVal, ITypeInfo[] ppTInfo, Int32[] rgMemId, Int16&amp; pcFound)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeLib2.global::System#Runtime#InteropServices#ComTypes#ITypeLib2#GetAllCustData(System.IntPtr)">
            <summary>Задает заглушка ITypeLib2.GetAllCustData(IntPtr pCustData)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeLib2.global::System#Runtime#InteropServices#ComTypes#ITypeLib2#GetCustData(System.Guid@,System.Object@)">
            <summary>Задает заглушка ITypeLib2.GetCustData(Guid&amp; guid, Object&amp; pVarVal)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeLib2.global::System#Runtime#InteropServices#ComTypes#ITypeLib2#GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)">
            <summary>Задает заглушка ITypeLib2.GetDocumentation(Int32 index, String&amp; strName, String&amp; strDocString, Int32&amp; dwHelpContext, String&amp; strHelpFile)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeLib2.global::System#Runtime#InteropServices#ComTypes#ITypeLib2#GetDocumentation2(System.Int32,System.String@,System.Int32@,System.String@)">
            <summary>Задает заглушка ITypeLib2.GetDocumentation2(Int32 index, String&amp; pbstrHelpString, Int32&amp; pdwHelpStringContext, String&amp; pbstrHelpStringDll)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeLib2.global::System#Runtime#InteropServices#ComTypes#ITypeLib2#GetLibAttr(System.IntPtr@)">
            <summary>Задает заглушка ITypeLib2.GetLibAttr(IntPtr&amp; ppTLibAttr)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeLib2.global::System#Runtime#InteropServices#ComTypes#ITypeLib2#GetLibStatistics(System.IntPtr,System.Int32@)">
            <summary>Задает заглушка ITypeLib2.GetLibStatistics(IntPtr pcUniqueNames, Int32&amp; pcchUniqueNames)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeLib2.global::System#Runtime#InteropServices#ComTypes#ITypeLib2#GetTypeComp(System.Runtime.InteropServices.ComTypes.ITypeComp@)">
            <summary>Задает заглушка ITypeLib2.GetTypeComp(ITypeComp&amp; ppTComp)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeLib2.global::System#Runtime#InteropServices#ComTypes#ITypeLib2#GetTypeInfo(System.Int32,System.Runtime.InteropServices.ComTypes.ITypeInfo@)">
            <summary>Задает заглушка ITypeLib2.GetTypeInfo(Int32 index, ITypeInfo&amp; ppTI)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeLib2.global::System#Runtime#InteropServices#ComTypes#ITypeLib2#GetTypeInfoCount">
            <summary>Задает заглушка ITypeLib2.GetTypeInfoCount()</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeLib2.global::System#Runtime#InteropServices#ComTypes#ITypeLib2#GetTypeInfoOfGuid(System.Guid@,System.Runtime.InteropServices.ComTypes.ITypeInfo@)">
            <summary>Задает заглушка ITypeLib2.GetTypeInfoOfGuid(Guid&amp; guid, ITypeInfo&amp; ppTInfo)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeLib2.global::System#Runtime#InteropServices#ComTypes#ITypeLib2#GetTypeInfoType(System.Int32,System.Runtime.InteropServices.ComTypes.TYPEKIND@)">
            <summary>Задает заглушка ITypeLib2.GetTypeInfoType(Int32 index, TYPEKIND&amp; pTKind)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeLib2.global::System#Runtime#InteropServices#ComTypes#ITypeLib2#IsName(System.String,System.Int32)">
            <summary>Задает заглушка ITypeLib2.IsName(String szNameBuf, Int32 lHashVal)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.ComTypes.Fakes.StubITypeLib2.global::System#Runtime#InteropServices#ComTypes#ITypeLib2#ReleaseTLibAttr(System.IntPtr)">
            <summary>Задает заглушка ITypeLib2.ReleaseTLibAttr(IntPtr pTLibAttr)</summary>
        </member>
        <member name="T:System.Runtime.InteropServices.Fakes.StubCOMException">
            <summary>Тип заглушки System.Runtime.InteropServices.COMException</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubCOMException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubCOMException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubCOMException.#ctor(System.String,System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubCOMException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubCOMException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubCOMException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubCOMException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubCOMException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubCOMException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubCOMException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubCOMException.ErrorCodeGet">
            <summary>Задает stub ExternalException.get_ErrorCode()</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubCOMException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubCOMException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubCOMException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubCOMException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubCOMException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubCOMException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubCOMException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCOMException</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubCOMException.MessageGet">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubCOMException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubCOMException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubCOMException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubCOMException.ToString">
            <summary>Задает заглушка COMException.ToString()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubCOMException.ToString01">
            <summary>Задает stub COMException.ToString()</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubCOMException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubCOMException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubCOMException.ErrorCode">
            <summary>Задает stub ExternalException.get_ErrorCode()</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubCOMException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubCOMException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubCOMException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubCOMException.Message">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubCOMException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubCOMException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Runtime.InteropServices.Fakes.StubCriticalHandle">
            <summary>Тип заглушки System.Runtime.InteropServices.CriticalHandle</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubCriticalHandle.#ctor(System.IntPtr)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubCriticalHandle.Dispose(System.Boolean)">
            <summary>Задает заглушка CriticalHandle.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubCriticalHandle.DisposeBoolean">
            <summary>Задает stub CriticalHandle.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubCriticalHandle.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCriticalHandle</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubCriticalHandle.IsInvalidGet">
            <summary>Задает stub CriticalHandle.get_IsInvalid()</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubCriticalHandle.ReleaseHandle">
            <summary>Задает заглушка CriticalHandle.ReleaseHandle()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubCriticalHandle.ReleaseHandle01">
            <summary>Задает stub CriticalHandle.ReleaseHandle()</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubCriticalHandle.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubCriticalHandle.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubCriticalHandle.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubCriticalHandle.IsInvalid">
            <summary>Задает stub CriticalHandle.get_IsInvalid()</summary>
        </member>
        <member name="T:System.Runtime.InteropServices.Fakes.StubExternalException">
            <summary>Тип заглушки System.Runtime.InteropServices.ExternalException</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubExternalException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubExternalException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubExternalException.#ctor(System.String,System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubExternalException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubExternalException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubExternalException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubExternalException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubExternalException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubExternalException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubExternalException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubExternalException.ErrorCodeGet">
            <summary>Задает stub ExternalException.get_ErrorCode()</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubExternalException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubExternalException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubExternalException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubExternalException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubExternalException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubExternalException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubExternalException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubExternalException</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubExternalException.MessageGet">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubExternalException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubExternalException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubExternalException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubExternalException.ToString">
            <summary>Задает заглушка ExternalException.ToString()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubExternalException.ToString01">
            <summary>Задает stub ExternalException.ToString()</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubExternalException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubExternalException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubExternalException.ErrorCode">
            <summary>Задает stub ExternalException.get_ErrorCode()</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubExternalException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubExternalException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubExternalException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubExternalException.Message">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubExternalException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubExternalException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Runtime.InteropServices.Fakes.StubICustomAdapter">
            <summary>Тип заглушки System.Runtime.InteropServices.ICustomAdapter</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubICustomAdapter.#ctor">
            <summary>Инициализирует новый экземпляр type StubICustomAdapter</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubICustomAdapter.GetUnderlyingObject">
            <summary>Задает stub ICustomAdapter.GetUnderlyingObject()</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubICustomAdapter.global::System#Runtime#InteropServices#ICustomAdapter#GetUnderlyingObject">
            <summary>Задает заглушка ICustomAdapter.GetUnderlyingObject()</summary>
        </member>
        <member name="T:System.Runtime.InteropServices.Fakes.StubICustomFactory">
            <summary>Тип заглушки System.Runtime.InteropServices.ICustomFactory</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubICustomFactory.#ctor">
            <summary>Инициализирует новый экземпляр type StubICustomFactory</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubICustomFactory.CreateInstanceType">
            <summary>Задает stub ICustomFactory.CreateInstance(Type serverType)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubICustomFactory.global::System#Runtime#InteropServices#ICustomFactory#CreateInstance(System.Type)">
            <summary>Задает заглушка ICustomFactory.CreateInstance(Type serverType)</summary>
        </member>
        <member name="T:System.Runtime.InteropServices.Fakes.StubICustomMarshaler">
            <summary>Тип заглушки System.Runtime.InteropServices.ICustomMarshaler</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubICustomMarshaler.#ctor">
            <summary>Инициализирует новый экземпляр type StubICustomMarshaler</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubICustomMarshaler.CleanUpManagedDataObject">
            <summary>Задает stub ICustomMarshaler.CleanUpManagedData(Object ManagedObj)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubICustomMarshaler.CleanUpNativeDataIntPtr">
            <summary>Задает stub ICustomMarshaler.CleanUpNativeData(IntPtr pNativeData)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubICustomMarshaler.GetNativeDataSize">
            <summary>Задает stub ICustomMarshaler.GetNativeDataSize()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubICustomMarshaler.MarshalManagedToNativeObject">
            <summary>Задает stub ICustomMarshaler.MarshalManagedToNative(Object ManagedObj)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubICustomMarshaler.MarshalNativeToManagedIntPtr">
            <summary>Задает stub ICustomMarshaler.MarshalNativeToManaged(IntPtr pNativeData)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubICustomMarshaler.global::System#Runtime#InteropServices#ICustomMarshaler#CleanUpManagedData(System.Object)">
            <summary>Задает заглушка ICustomMarshaler.CleanUpManagedData(Object ManagedObj)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubICustomMarshaler.global::System#Runtime#InteropServices#ICustomMarshaler#CleanUpNativeData(System.IntPtr)">
            <summary>Задает заглушка ICustomMarshaler.CleanUpNativeData(IntPtr pNativeData)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubICustomMarshaler.global::System#Runtime#InteropServices#ICustomMarshaler#GetNativeDataSize">
            <summary>Задает заглушка ICustomMarshaler.GetNativeDataSize()</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubICustomMarshaler.global::System#Runtime#InteropServices#ICustomMarshaler#MarshalManagedToNative(System.Object)">
            <summary>Задает заглушка ICustomMarshaler.MarshalManagedToNative(Object ManagedObj)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubICustomMarshaler.global::System#Runtime#InteropServices#ICustomMarshaler#MarshalNativeToManaged(System.IntPtr)">
            <summary>Задает заглушка ICustomMarshaler.MarshalNativeToManaged(IntPtr pNativeData)</summary>
        </member>
        <member name="T:System.Runtime.InteropServices.Fakes.StubICustomQueryInterface">
            <summary>Тип заглушки System.Runtime.InteropServices.ICustomQueryInterface</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubICustomQueryInterface.#ctor">
            <summary>Инициализирует новый экземпляр type StubICustomQueryInterface</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubICustomQueryInterface.GetInterfaceGuidRefIntPtrOut">
            <summary>Задает stub ICustomQueryInterface.GetInterface(Guid&amp; iid, IntPtr&amp; ppv)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubICustomQueryInterface.global::System#Runtime#InteropServices#ICustomQueryInterface#GetInterface(System.Guid@,System.IntPtr@)">
            <summary>Задает заглушка ICustomQueryInterface.GetInterface(Guid&amp; iid, IntPtr&amp; ppv)</summary>
        </member>
        <member name="T:System.Runtime.InteropServices.Fakes.StubIRegistrationServices">
            <summary>Тип заглушки System.Runtime.InteropServices.IRegistrationServices</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubIRegistrationServices.#ctor">
            <summary>Инициализирует новый экземпляр type StubIRegistrationServices</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubIRegistrationServices.GetManagedCategoryGuid">
            <summary>Задает stub IRegistrationServices.GetManagedCategoryGuid()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubIRegistrationServices.GetProgIdForTypeType">
            <summary>Задает stub IRegistrationServices.GetProgIdForType(Type type)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubIRegistrationServices.GetRegistrableTypesInAssemblyAssembly">
            <summary>Задает stub IRegistrationServices.GetRegistrableTypesInAssembly(Assembly assembly)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubIRegistrationServices.RegisterAssemblyAssemblyAssemblyRegistrationFlags">
            <summary>Задает stub IRegistrationServices.RegisterAssembly(Assembly assembly, AssemblyRegistrationFlags flags)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubIRegistrationServices.RegisterTypeForComClientsTypeGuidRef">
            <summary>Задает stub IRegistrationServices.RegisterTypeForComClients(Type type, Guid&amp; g)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubIRegistrationServices.global::System#Runtime#InteropServices#IRegistrationServices#GetManagedCategoryGuid">
            <summary>Задает заглушка IRegistrationServices.GetManagedCategoryGuid()</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubIRegistrationServices.global::System#Runtime#InteropServices#IRegistrationServices#GetProgIdForType(System.Type)">
            <summary>Задает заглушка IRegistrationServices.GetProgIdForType(Type type)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubIRegistrationServices.global::System#Runtime#InteropServices#IRegistrationServices#GetRegistrableTypesInAssembly(System.Reflection.Assembly)">
            <summary>Задает заглушка IRegistrationServices.GetRegistrableTypesInAssembly(Assembly assembly)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubIRegistrationServices.global::System#Runtime#InteropServices#IRegistrationServices#RegisterAssembly(System.Reflection.Assembly,System.Runtime.InteropServices.AssemblyRegistrationFlags)">
            <summary>Задает заглушка IRegistrationServices.RegisterAssembly(Assembly assembly, AssemblyRegistrationFlags flags)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubIRegistrationServices.global::System#Runtime#InteropServices#IRegistrationServices#RegisterTypeForComClients(System.Type,System.Guid@)">
            <summary>Задает заглушка IRegistrationServices.RegisterTypeForComClients(Type type, Guid&amp; g)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubIRegistrationServices.global::System#Runtime#InteropServices#IRegistrationServices#TypeRepresentsComType(System.Type)">
            <summary>Задает заглушка IRegistrationServices.TypeRepresentsComType(Type type)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubIRegistrationServices.global::System#Runtime#InteropServices#IRegistrationServices#TypeRequiresRegistration(System.Type)">
            <summary>Задает заглушка IRegistrationServices.TypeRequiresRegistration(Type type)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubIRegistrationServices.global::System#Runtime#InteropServices#IRegistrationServices#UnregisterAssembly(System.Reflection.Assembly)">
            <summary>Задает заглушка IRegistrationServices.UnregisterAssembly(Assembly assembly)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubIRegistrationServices.TypeRepresentsComTypeType">
            <summary>Задает stub IRegistrationServices.TypeRepresentsComType(Type type)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubIRegistrationServices.TypeRequiresRegistrationType">
            <summary>Задает stub IRegistrationServices.TypeRequiresRegistration(Type type)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubIRegistrationServices.UnregisterAssemblyAssembly">
            <summary>Задает stub IRegistrationServices.UnregisterAssembly(Assembly assembly)</summary>
        </member>
        <member name="T:System.Runtime.InteropServices.Fakes.StubITypeLibConverter">
            <summary>Тип заглушки System.Runtime.InteropServices.ITypeLibConverter</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubITypeLibConverter.#ctor">
            <summary>Инициализирует новый экземпляр type StubITypeLibConverter</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubITypeLibConverter.ConvertAssemblyToTypeLibAssemblyStringTypeLibExporterFlagsITypeLibExporterNotifySink">
            <summary>Задает stub ITypeLibConverter.ConvertAssemblyToTypeLib(Assembly assembly, String typeLibName, TypeLibExporterFlags flags, ITypeLibExporterNotifySink notifySink)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubITypeLibConverter.ConvertTypeLibToAssemblyObjectStringInt32ITypeLibImporterNotifySinkByteArrayStrongNameKeyPairBoolean">
            <summary>Задает stub ITypeLibConverter.ConvertTypeLibToAssembly(Object typeLib, String asmFileName, Int32 flags, ITypeLibImporterNotifySink notifySink, Byte[] publicKey, StrongNameKeyPair keyPair, Boolean unsafeInterfaces)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubITypeLibConverter.ConvertTypeLibToAssemblyObjectStringTypeLibImporterFlagsITypeLibImporterNotifySinkByteArrayStrongNameKeyPairStringVersion">
            <summary>Задает stub ITypeLibConverter.ConvertTypeLibToAssembly(Object typeLib, String asmFileName, TypeLibImporterFlags flags, ITypeLibImporterNotifySink notifySink, Byte[] publicKey, StrongNameKeyPair keyPair, String asmNamespace, Version asmVersion)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubITypeLibConverter.GetPrimaryInteropAssemblyGuidInt32Int32Int32StringOutStringOut">
            <summary>Задает stub ITypeLibConverter.GetPrimaryInteropAssembly(Guid g, Int32 major, Int32 minor, Int32 lcid, String&amp; asmName, String&amp; asmCodeBase)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubITypeLibConverter.global::System#Runtime#InteropServices#ITypeLibConverter#ConvertAssemblyToTypeLib(System.Reflection.Assembly,System.String,System.Runtime.InteropServices.TypeLibExporterFlags,System.Runtime.InteropServices.ITypeLibExporterNotifySink)">
            <summary>Задает заглушка ITypeLibConverter.ConvertAssemblyToTypeLib(Assembly assembly, String typeLibName, TypeLibExporterFlags flags, ITypeLibExporterNotifySink notifySink)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubITypeLibConverter.global::System#Runtime#InteropServices#ITypeLibConverter#ConvertTypeLibToAssembly(System.Object,System.String,System.Int32,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.Boolean)">
            <summary>Задает заглушка ITypeLibConverter.ConvertTypeLibToAssembly(Object typeLib, String asmFileName, Int32 flags, ITypeLibImporterNotifySink notifySink, Byte[] publicKey, StrongNameKeyPair keyPair, Boolean unsafeInterfaces)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubITypeLibConverter.global::System#Runtime#InteropServices#ITypeLibConverter#ConvertTypeLibToAssembly(System.Object,System.String,System.Runtime.InteropServices.TypeLibImporterFlags,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.String,System.Version)">
            <summary>Задает заглушка ITypeLibConverter.ConvertTypeLibToAssembly(Object typeLib, String asmFileName, TypeLibImporterFlags flags, ITypeLibImporterNotifySink notifySink, Byte[] publicKey, StrongNameKeyPair keyPair, String asmNamespace, Version asmVersion)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubITypeLibConverter.global::System#Runtime#InteropServices#ITypeLibConverter#GetPrimaryInteropAssembly(System.Guid,System.Int32,System.Int32,System.Int32,System.String@,System.String@)">
            <summary>Задает заглушка ITypeLibConverter.GetPrimaryInteropAssembly(Guid g, Int32 major, Int32 minor, Int32 lcid, String&amp; asmName, String&amp; asmCodeBase)</summary>
        </member>
        <member name="T:System.Runtime.InteropServices.Fakes.StubITypeLibExporterNameProvider">
            <summary>Тип заглушки System.Runtime.InteropServices.ITypeLibExporterNameProvider</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubITypeLibExporterNameProvider.#ctor">
            <summary>Инициализирует новый экземпляр type StubITypeLibExporterNameProvider</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubITypeLibExporterNameProvider.GetNames">
            <summary>Задает stub ITypeLibExporterNameProvider.GetNames()</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubITypeLibExporterNameProvider.global::System#Runtime#InteropServices#ITypeLibExporterNameProvider#GetNames">
            <summary>Задает заглушка ITypeLibExporterNameProvider.GetNames()</summary>
        </member>
        <member name="T:System.Runtime.InteropServices.Fakes.StubITypeLibExporterNotifySink">
            <summary>Тип заглушки System.Runtime.InteropServices.ITypeLibExporterNotifySink</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubITypeLibExporterNotifySink.#ctor">
            <summary>Инициализирует новый экземпляр type StubITypeLibExporterNotifySink</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubITypeLibExporterNotifySink.ReportEventExporterEventKindInt32String">
            <summary>Задает stub ITypeLibExporterNotifySink.ReportEvent(ExporterEventKind eventKind, Int32 eventCode, String eventMsg)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubITypeLibExporterNotifySink.ResolveRefAssembly">
            <summary>Задает stub ITypeLibExporterNotifySink.ResolveRef(Assembly assembly)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubITypeLibExporterNotifySink.global::System#Runtime#InteropServices#ITypeLibExporterNotifySink#ReportEvent(System.Runtime.InteropServices.ExporterEventKind,System.Int32,System.String)">
            <summary>Задает заглушка ITypeLibExporterNotifySink.ReportEvent(ExporterEventKind eventKind, Int32 eventCode, String eventMsg)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubITypeLibExporterNotifySink.global::System#Runtime#InteropServices#ITypeLibExporterNotifySink#ResolveRef(System.Reflection.Assembly)">
            <summary>Задает заглушка ITypeLibExporterNotifySink.ResolveRef(Assembly assembly)</summary>
        </member>
        <member name="T:System.Runtime.InteropServices.Fakes.StubITypeLibImporterNotifySink">
            <summary>Тип заглушки System.Runtime.InteropServices.ITypeLibImporterNotifySink</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubITypeLibImporterNotifySink.#ctor">
            <summary>Инициализирует новый экземпляр type StubITypeLibImporterNotifySink</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubITypeLibImporterNotifySink.ReportEventImporterEventKindInt32String">
            <summary>Задает stub ITypeLibImporterNotifySink.ReportEvent(ImporterEventKind eventKind, Int32 eventCode, String eventMsg)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubITypeLibImporterNotifySink.ResolveRefObject">
            <summary>Задает stub ITypeLibImporterNotifySink.ResolveRef(Object typeLib)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubITypeLibImporterNotifySink.global::System#Runtime#InteropServices#ITypeLibImporterNotifySink#ReportEvent(System.Runtime.InteropServices.ImporterEventKind,System.Int32,System.String)">
            <summary>Задает заглушка ITypeLibImporterNotifySink.ReportEvent(ImporterEventKind eventKind, Int32 eventCode, String eventMsg)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubITypeLibImporterNotifySink.global::System#Runtime#InteropServices#ITypeLibImporterNotifySink#ResolveRef(System.Object)">
            <summary>Задает заглушка ITypeLibImporterNotifySink.ResolveRef(Object typeLib)</summary>
        </member>
        <member name="T:System.Runtime.InteropServices.Fakes.StubInvalidComObjectException">
            <summary>Тип заглушки System.Runtime.InteropServices.InvalidComObjectException</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubInvalidComObjectException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubInvalidComObjectException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubInvalidComObjectException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubInvalidComObjectException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubInvalidComObjectException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubInvalidComObjectException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubInvalidComObjectException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubInvalidComObjectException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubInvalidComObjectException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubInvalidComObjectException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubInvalidComObjectException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubInvalidComObjectException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubInvalidComObjectException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubInvalidComObjectException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubInvalidComObjectException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubInvalidComObjectException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubInvalidComObjectException</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubInvalidComObjectException.MessageGet">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubInvalidComObjectException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubInvalidComObjectException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubInvalidComObjectException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubInvalidComObjectException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubInvalidComObjectException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubInvalidComObjectException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubInvalidComObjectException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubInvalidComObjectException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubInvalidComObjectException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubInvalidComObjectException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubInvalidComObjectException.Message">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubInvalidComObjectException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubInvalidComObjectException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Runtime.InteropServices.Fakes.StubInvalidOleVariantTypeException">
            <summary>Тип заглушки System.Runtime.InteropServices.InvalidOleVariantTypeException</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubInvalidOleVariantTypeException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubInvalidOleVariantTypeException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubInvalidOleVariantTypeException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubInvalidOleVariantTypeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubInvalidOleVariantTypeException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubInvalidOleVariantTypeException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubInvalidOleVariantTypeException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubInvalidOleVariantTypeException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubInvalidOleVariantTypeException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubInvalidOleVariantTypeException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubInvalidOleVariantTypeException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubInvalidOleVariantTypeException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubInvalidOleVariantTypeException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubInvalidOleVariantTypeException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubInvalidOleVariantTypeException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubInvalidOleVariantTypeException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubInvalidOleVariantTypeException</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubInvalidOleVariantTypeException.MessageGet">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubInvalidOleVariantTypeException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubInvalidOleVariantTypeException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubInvalidOleVariantTypeException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubInvalidOleVariantTypeException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubInvalidOleVariantTypeException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubInvalidOleVariantTypeException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubInvalidOleVariantTypeException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubInvalidOleVariantTypeException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubInvalidOleVariantTypeException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubInvalidOleVariantTypeException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubInvalidOleVariantTypeException.Message">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubInvalidOleVariantTypeException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubInvalidOleVariantTypeException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Runtime.InteropServices.Fakes.StubMarshalDirectiveException">
            <summary>Тип заглушки System.Runtime.InteropServices.MarshalDirectiveException</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubMarshalDirectiveException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubMarshalDirectiveException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubMarshalDirectiveException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubMarshalDirectiveException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubMarshalDirectiveException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubMarshalDirectiveException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubMarshalDirectiveException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubMarshalDirectiveException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubMarshalDirectiveException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubMarshalDirectiveException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubMarshalDirectiveException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubMarshalDirectiveException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubMarshalDirectiveException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubMarshalDirectiveException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubMarshalDirectiveException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubMarshalDirectiveException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubMarshalDirectiveException</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubMarshalDirectiveException.MessageGet">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubMarshalDirectiveException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubMarshalDirectiveException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubMarshalDirectiveException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubMarshalDirectiveException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubMarshalDirectiveException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubMarshalDirectiveException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubMarshalDirectiveException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubMarshalDirectiveException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubMarshalDirectiveException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubMarshalDirectiveException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubMarshalDirectiveException.Message">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubMarshalDirectiveException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubMarshalDirectiveException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Runtime.InteropServices.Fakes.StubRegistrationServices">
            <summary>Тип заглушки System.Runtime.InteropServices.RegistrationServices</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubRegistrationServices.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubRegistrationServices.GetManagedCategoryGuid">
            <summary>Задает заглушка RegistrationServices.GetManagedCategoryGuid()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubRegistrationServices.GetManagedCategoryGuid01">
            <summary>Задает stub RegistrationServices.GetManagedCategoryGuid()</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubRegistrationServices.GetProgIdForType(System.Type)">
            <summary>Задает заглушка RegistrationServices.GetProgIdForType(Type type)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubRegistrationServices.GetProgIdForTypeType">
            <summary>Задает stub RegistrationServices.GetProgIdForType(Type type)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubRegistrationServices.GetRegistrableTypesInAssembly(System.Reflection.Assembly)">
            <summary>Задает заглушка RegistrationServices.GetRegistrableTypesInAssembly(Assembly assembly)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubRegistrationServices.GetRegistrableTypesInAssemblyAssembly">
            <summary>Задает stub RegistrationServices.GetRegistrableTypesInAssembly(Assembly assembly)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubRegistrationServices.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubRegistrationServices</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubRegistrationServices.RegisterAssembly(System.Reflection.Assembly,System.Runtime.InteropServices.AssemblyRegistrationFlags)">
            <summary>Задает заглушка RegistrationServices.RegisterAssembly(Assembly assembly, AssemblyRegistrationFlags flags)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubRegistrationServices.RegisterAssemblyAssemblyAssemblyRegistrationFlags">
            <summary>Задает stub RegistrationServices.RegisterAssembly(Assembly assembly, AssemblyRegistrationFlags flags)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubRegistrationServices.RegisterTypeForComClients(System.Type,System.Runtime.InteropServices.RegistrationClassContext,System.Runtime.InteropServices.RegistrationConnectionType)">
            <summary>Задает заглушка RegistrationServices.RegisterTypeForComClients(Type type, RegistrationClassContext classContext, RegistrationConnectionType flags)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubRegistrationServices.RegisterTypeForComClients(System.Type,System.Guid@)">
            <summary>Задает заглушка RegistrationServices.RegisterTypeForComClients(Type type, Guid&amp; g)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubRegistrationServices.RegisterTypeForComClientsTypeGuidRef">
            <summary>Задает stub RegistrationServices.RegisterTypeForComClients(Type type, Guid&amp; g)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubRegistrationServices.RegisterTypeForComClientsTypeRegistrationClassContextRegistrationConnectionType">
            <summary>Задает stub RegistrationServices.RegisterTypeForComClients(Type type, RegistrationClassContext classContext, RegistrationConnectionType flags)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubRegistrationServices.TypeRepresentsComType(System.Type)">
            <summary>Задает заглушка RegistrationServices.TypeRepresentsComType(Type type)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubRegistrationServices.TypeRepresentsComTypeType">
            <summary>Задает stub RegistrationServices.TypeRepresentsComType(Type type)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubRegistrationServices.TypeRequiresRegistration(System.Type)">
            <summary>Задает заглушка RegistrationServices.TypeRequiresRegistration(Type type)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubRegistrationServices.TypeRequiresRegistrationType">
            <summary>Задает stub RegistrationServices.TypeRequiresRegistration(Type type)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubRegistrationServices.UnregisterAssembly(System.Reflection.Assembly)">
            <summary>Задает заглушка RegistrationServices.UnregisterAssembly(Assembly assembly)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubRegistrationServices.UnregisterAssemblyAssembly">
            <summary>Задает stub RegistrationServices.UnregisterAssembly(Assembly assembly)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubRegistrationServices.UnregisterTypeForComClients(System.Int32)">
            <summary>Задает заглушка RegistrationServices.UnregisterTypeForComClients(Int32 cookie)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubRegistrationServices.UnregisterTypeForComClientsInt32">
            <summary>Задает stub RegistrationServices.UnregisterTypeForComClients(Int32 cookie)</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubRegistrationServices.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubRegistrationServices.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubRegistrationServices.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Runtime.InteropServices.Fakes.StubSEHException">
            <summary>Тип заглушки System.Runtime.InteropServices.SEHException</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubSEHException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubSEHException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubSEHException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubSEHException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubSEHException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubSEHException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubSEHException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubSEHException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubSEHException.CanResume">
            <summary>Задает заглушка SEHException.CanResume()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubSEHException.CanResume01">
            <summary>Задает stub SEHException.CanResume()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubSEHException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubSEHException.ErrorCodeGet">
            <summary>Задает stub ExternalException.get_ErrorCode()</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubSEHException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubSEHException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubSEHException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubSEHException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubSEHException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubSEHException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubSEHException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubSEHException</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubSEHException.MessageGet">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubSEHException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubSEHException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubSEHException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubSEHException.ToString">
            <summary>Задает заглушка ExternalException.ToString()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubSEHException.ToString01">
            <summary>Задает stub ExternalException.ToString()</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubSEHException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubSEHException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubSEHException.ErrorCode">
            <summary>Задает stub ExternalException.get_ErrorCode()</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubSEHException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubSEHException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubSEHException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubSEHException.Message">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubSEHException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubSEHException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Runtime.InteropServices.Fakes.StubSafeArrayRankMismatchException">
            <summary>Тип заглушки System.Runtime.InteropServices.SafeArrayRankMismatchException</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubSafeArrayRankMismatchException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubSafeArrayRankMismatchException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubSafeArrayRankMismatchException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubSafeArrayRankMismatchException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubSafeArrayRankMismatchException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubSafeArrayRankMismatchException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubSafeArrayRankMismatchException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubSafeArrayRankMismatchException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubSafeArrayRankMismatchException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubSafeArrayRankMismatchException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubSafeArrayRankMismatchException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubSafeArrayRankMismatchException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubSafeArrayRankMismatchException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubSafeArrayRankMismatchException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubSafeArrayRankMismatchException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubSafeArrayRankMismatchException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubSafeArrayRankMismatchException</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubSafeArrayRankMismatchException.MessageGet">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubSafeArrayRankMismatchException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubSafeArrayRankMismatchException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubSafeArrayRankMismatchException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubSafeArrayRankMismatchException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubSafeArrayRankMismatchException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubSafeArrayRankMismatchException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubSafeArrayRankMismatchException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubSafeArrayRankMismatchException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubSafeArrayRankMismatchException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubSafeArrayRankMismatchException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubSafeArrayRankMismatchException.Message">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubSafeArrayRankMismatchException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubSafeArrayRankMismatchException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Runtime.InteropServices.Fakes.StubSafeArrayTypeMismatchException">
            <summary>Тип заглушки System.Runtime.InteropServices.SafeArrayTypeMismatchException</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubSafeArrayTypeMismatchException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubSafeArrayTypeMismatchException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubSafeArrayTypeMismatchException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubSafeArrayTypeMismatchException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubSafeArrayTypeMismatchException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubSafeArrayTypeMismatchException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubSafeArrayTypeMismatchException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubSafeArrayTypeMismatchException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubSafeArrayTypeMismatchException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubSafeArrayTypeMismatchException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubSafeArrayTypeMismatchException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubSafeArrayTypeMismatchException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubSafeArrayTypeMismatchException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubSafeArrayTypeMismatchException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubSafeArrayTypeMismatchException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubSafeArrayTypeMismatchException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubSafeArrayTypeMismatchException</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubSafeArrayTypeMismatchException.MessageGet">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubSafeArrayTypeMismatchException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubSafeArrayTypeMismatchException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubSafeArrayTypeMismatchException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubSafeArrayTypeMismatchException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubSafeArrayTypeMismatchException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubSafeArrayTypeMismatchException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubSafeArrayTypeMismatchException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubSafeArrayTypeMismatchException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubSafeArrayTypeMismatchException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubSafeArrayTypeMismatchException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubSafeArrayTypeMismatchException.Message">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubSafeArrayTypeMismatchException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubSafeArrayTypeMismatchException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Runtime.InteropServices.Fakes.StubSafeBuffer">
            <summary>Тип заглушки System.Runtime.InteropServices.SafeBuffer</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubSafeBuffer.#ctor(System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubSafeBuffer.Dispose(System.Boolean)">
            <summary>Задает заглушка SafeHandle.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubSafeBuffer.DisposeBoolean">
            <summary>Задает stub SafeHandle.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubSafeBuffer.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubSafeBuffer</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubSafeBuffer.IsInvalidGet">
            <summary>Задает stub SafeHandleZeroOrMinusOneIsInvalid.get_IsInvalid()</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubSafeBuffer.ReleaseHandle">
            <summary>Задает заглушка SafeHandle.ReleaseHandle()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubSafeBuffer.ReleaseHandle01">
            <summary>Задает stub SafeHandle.ReleaseHandle()</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubSafeBuffer.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubSafeBuffer.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubSafeBuffer.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubSafeBuffer.IsInvalid">
            <summary>Задает stub SafeHandleZeroOrMinusOneIsInvalid.get_IsInvalid()</summary>
        </member>
        <member name="T:System.Runtime.InteropServices.Fakes.StubSafeHandle">
            <summary>Тип заглушки System.Runtime.InteropServices.SafeHandle</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubSafeHandle.#ctor(System.IntPtr,System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubSafeHandle.Dispose(System.Boolean)">
            <summary>Задает заглушка SafeHandle.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubSafeHandle.DisposeBoolean">
            <summary>Задает stub SafeHandle.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubSafeHandle.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubSafeHandle</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubSafeHandle.IsInvalidGet">
            <summary>Задает stub SafeHandle.get_IsInvalid()</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.StubSafeHandle.ReleaseHandle">
            <summary>Задает заглушка SafeHandle.ReleaseHandle()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.StubSafeHandle.ReleaseHandle01">
            <summary>Задает stub SafeHandle.ReleaseHandle()</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubSafeHandle.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubSafeHandle.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubSafeHandle.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.StubSafeHandle.IsInvalid">
            <summary>Задает stub SafeHandle.get_IsInvalid()</summary>
        </member>
        <member name="T:System.Runtime.InteropServices.Fakes.Stub_Activator">
            <summary>Тип заглушки System.Runtime.InteropServices._Activator</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_Activator.#ctor">
            <summary>Инициализирует новый экземпляр type Stub_Activator</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_Activator.GetIDsOfNamesGuidRefIntPtrUInt32UInt32IntPtr">
            <summary>Задает stub _Activator.GetIDsOfNames(Guid&amp; riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_Activator.GetTypeInfoCountUInt32Out">
            <summary>Задает stub _Activator.GetTypeInfoCount(UInt32&amp; pcTInfo)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_Activator.GetTypeInfoUInt32UInt32IntPtr">
            <summary>Задает stub _Activator.GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_Activator.InvokeUInt32GuidRefUInt32Int16IntPtrIntPtrIntPtrIntPtr">
            <summary>Задает stub _Activator.Invoke(UInt32 dispIdMember, Guid&amp; riid, UInt32 lcid, Int16 wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_Activator.global::System#Runtime#InteropServices#_Activator#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
            <summary>Задает заглушка _Activator.GetIDsOfNames(Guid&amp; riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_Activator.global::System#Runtime#InteropServices#_Activator#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
            <summary>Задает заглушка _Activator.GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_Activator.global::System#Runtime#InteropServices#_Activator#GetTypeInfoCount(System.UInt32@)">
            <summary>Задает заглушка _Activator.GetTypeInfoCount(UInt32&amp; pcTInfo)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_Activator.global::System#Runtime#InteropServices#_Activator#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>Задает заглушка _Activator.Invoke(UInt32 dispIdMember, Guid&amp; riid, UInt32 lcid, Int16 wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)</summary>
        </member>
        <member name="T:System.Runtime.InteropServices.Fakes.Stub_AssemblyBuilder">
            <summary>Тип заглушки System.Runtime.InteropServices._AssemblyBuilder</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_AssemblyBuilder.#ctor">
            <summary>Инициализирует новый экземпляр type Stub_AssemblyBuilder</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_AssemblyBuilder.GetIDsOfNamesGuidRefIntPtrUInt32UInt32IntPtr">
            <summary>Задает stub _AssemblyBuilder.GetIDsOfNames(Guid&amp; riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_AssemblyBuilder.GetTypeInfoCountUInt32Out">
            <summary>Задает stub _AssemblyBuilder.GetTypeInfoCount(UInt32&amp; pcTInfo)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_AssemblyBuilder.GetTypeInfoUInt32UInt32IntPtr">
            <summary>Задает stub _AssemblyBuilder.GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_AssemblyBuilder.InvokeUInt32GuidRefUInt32Int16IntPtrIntPtrIntPtrIntPtr">
            <summary>Задает stub _AssemblyBuilder.Invoke(UInt32 dispIdMember, Guid&amp; riid, UInt32 lcid, Int16 wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_AssemblyBuilder.global::System#Runtime#InteropServices#_AssemblyBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
            <summary>Задает заглушка _AssemblyBuilder.GetIDsOfNames(Guid&amp; riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_AssemblyBuilder.global::System#Runtime#InteropServices#_AssemblyBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
            <summary>Задает заглушка _AssemblyBuilder.GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_AssemblyBuilder.global::System#Runtime#InteropServices#_AssemblyBuilder#GetTypeInfoCount(System.UInt32@)">
            <summary>Задает заглушка _AssemblyBuilder.GetTypeInfoCount(UInt32&amp; pcTInfo)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_AssemblyBuilder.global::System#Runtime#InteropServices#_AssemblyBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>Задает заглушка _AssemblyBuilder.Invoke(UInt32 dispIdMember, Guid&amp; riid, UInt32 lcid, Int16 wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)</summary>
        </member>
        <member name="T:System.Runtime.InteropServices.Fakes.Stub_AssemblyName">
            <summary>Тип заглушки System.Runtime.InteropServices._AssemblyName</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_AssemblyName.#ctor">
            <summary>Инициализирует новый экземпляр type Stub_AssemblyName</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_AssemblyName.GetIDsOfNamesGuidRefIntPtrUInt32UInt32IntPtr">
            <summary>Задает stub _AssemblyName.GetIDsOfNames(Guid&amp; riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_AssemblyName.GetTypeInfoCountUInt32Out">
            <summary>Задает stub _AssemblyName.GetTypeInfoCount(UInt32&amp; pcTInfo)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_AssemblyName.GetTypeInfoUInt32UInt32IntPtr">
            <summary>Задает stub _AssemblyName.GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_AssemblyName.InvokeUInt32GuidRefUInt32Int16IntPtrIntPtrIntPtrIntPtr">
            <summary>Задает stub _AssemblyName.Invoke(UInt32 dispIdMember, Guid&amp; riid, UInt32 lcid, Int16 wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_AssemblyName.global::System#Runtime#InteropServices#_AssemblyName#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
            <summary>Задает заглушка _AssemblyName.GetIDsOfNames(Guid&amp; riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_AssemblyName.global::System#Runtime#InteropServices#_AssemblyName#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
            <summary>Задает заглушка _AssemblyName.GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_AssemblyName.global::System#Runtime#InteropServices#_AssemblyName#GetTypeInfoCount(System.UInt32@)">
            <summary>Задает заглушка _AssemblyName.GetTypeInfoCount(UInt32&amp; pcTInfo)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_AssemblyName.global::System#Runtime#InteropServices#_AssemblyName#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>Задает заглушка _AssemblyName.Invoke(UInt32 dispIdMember, Guid&amp; riid, UInt32 lcid, Int16 wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)</summary>
        </member>
        <member name="T:System.Runtime.InteropServices.Fakes.Stub_Attribute">
            <summary>Тип заглушки System.Runtime.InteropServices._Attribute</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_Attribute.#ctor">
            <summary>Инициализирует новый экземпляр type Stub_Attribute</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_Attribute.GetIDsOfNamesGuidRefIntPtrUInt32UInt32IntPtr">
            <summary>Задает stub _Attribute.GetIDsOfNames(Guid&amp; riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_Attribute.GetTypeInfoCountUInt32Out">
            <summary>Задает stub _Attribute.GetTypeInfoCount(UInt32&amp; pcTInfo)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_Attribute.GetTypeInfoUInt32UInt32IntPtr">
            <summary>Задает stub _Attribute.GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_Attribute.InvokeUInt32GuidRefUInt32Int16IntPtrIntPtrIntPtrIntPtr">
            <summary>Задает stub _Attribute.Invoke(UInt32 dispIdMember, Guid&amp; riid, UInt32 lcid, Int16 wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_Attribute.global::System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
            <summary>Задает заглушка _Attribute.GetIDsOfNames(Guid&amp; riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_Attribute.global::System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
            <summary>Задает заглушка _Attribute.GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_Attribute.global::System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)">
            <summary>Задает заглушка _Attribute.GetTypeInfoCount(UInt32&amp; pcTInfo)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_Attribute.global::System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>Задает заглушка _Attribute.Invoke(UInt32 dispIdMember, Guid&amp; riid, UInt32 lcid, Int16 wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)</summary>
        </member>
        <member name="T:System.Runtime.InteropServices.Fakes.Stub_ConstructorBuilder">
            <summary>Тип заглушки System.Runtime.InteropServices._ConstructorBuilder</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_ConstructorBuilder.#ctor">
            <summary>Инициализирует новый экземпляр type Stub_ConstructorBuilder</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_ConstructorBuilder.GetIDsOfNamesGuidRefIntPtrUInt32UInt32IntPtr">
            <summary>Задает stub _ConstructorBuilder.GetIDsOfNames(Guid&amp; riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_ConstructorBuilder.GetTypeInfoCountUInt32Out">
            <summary>Задает stub _ConstructorBuilder.GetTypeInfoCount(UInt32&amp; pcTInfo)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_ConstructorBuilder.GetTypeInfoUInt32UInt32IntPtr">
            <summary>Задает stub _ConstructorBuilder.GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_ConstructorBuilder.InvokeUInt32GuidRefUInt32Int16IntPtrIntPtrIntPtrIntPtr">
            <summary>Задает stub _ConstructorBuilder.Invoke(UInt32 dispIdMember, Guid&amp; riid, UInt32 lcid, Int16 wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_ConstructorBuilder.global::System#Runtime#InteropServices#_ConstructorBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
            <summary>Задает заглушка _ConstructorBuilder.GetIDsOfNames(Guid&amp; riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_ConstructorBuilder.global::System#Runtime#InteropServices#_ConstructorBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
            <summary>Задает заглушка _ConstructorBuilder.GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_ConstructorBuilder.global::System#Runtime#InteropServices#_ConstructorBuilder#GetTypeInfoCount(System.UInt32@)">
            <summary>Задает заглушка _ConstructorBuilder.GetTypeInfoCount(UInt32&amp; pcTInfo)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_ConstructorBuilder.global::System#Runtime#InteropServices#_ConstructorBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>Задает заглушка _ConstructorBuilder.Invoke(UInt32 dispIdMember, Guid&amp; riid, UInt32 lcid, Int16 wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)</summary>
        </member>
        <member name="T:System.Runtime.InteropServices.Fakes.Stub_CustomAttributeBuilder">
            <summary>Тип заглушки System.Runtime.InteropServices._CustomAttributeBuilder</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_CustomAttributeBuilder.#ctor">
            <summary>Инициализирует новый экземпляр type Stub_CustomAttributeBuilder</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_CustomAttributeBuilder.GetIDsOfNamesGuidRefIntPtrUInt32UInt32IntPtr">
            <summary>Задает stub _CustomAttributeBuilder.GetIDsOfNames(Guid&amp; riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_CustomAttributeBuilder.GetTypeInfoCountUInt32Out">
            <summary>Задает stub _CustomAttributeBuilder.GetTypeInfoCount(UInt32&amp; pcTInfo)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_CustomAttributeBuilder.GetTypeInfoUInt32UInt32IntPtr">
            <summary>Задает stub _CustomAttributeBuilder.GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_CustomAttributeBuilder.InvokeUInt32GuidRefUInt32Int16IntPtrIntPtrIntPtrIntPtr">
            <summary>Задает stub _CustomAttributeBuilder.Invoke(UInt32 dispIdMember, Guid&amp; riid, UInt32 lcid, Int16 wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_CustomAttributeBuilder.global::System#Runtime#InteropServices#_CustomAttributeBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
            <summary>Задает заглушка _CustomAttributeBuilder.GetIDsOfNames(Guid&amp; riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_CustomAttributeBuilder.global::System#Runtime#InteropServices#_CustomAttributeBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
            <summary>Задает заглушка _CustomAttributeBuilder.GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_CustomAttributeBuilder.global::System#Runtime#InteropServices#_CustomAttributeBuilder#GetTypeInfoCount(System.UInt32@)">
            <summary>Задает заглушка _CustomAttributeBuilder.GetTypeInfoCount(UInt32&amp; pcTInfo)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_CustomAttributeBuilder.global::System#Runtime#InteropServices#_CustomAttributeBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>Задает заглушка _CustomAttributeBuilder.Invoke(UInt32 dispIdMember, Guid&amp; riid, UInt32 lcid, Int16 wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)</summary>
        </member>
        <member name="T:System.Runtime.InteropServices.Fakes.Stub_EnumBuilder">
            <summary>Тип заглушки System.Runtime.InteropServices._EnumBuilder</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_EnumBuilder.#ctor">
            <summary>Инициализирует новый экземпляр type Stub_EnumBuilder</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_EnumBuilder.GetIDsOfNamesGuidRefIntPtrUInt32UInt32IntPtr">
            <summary>Задает stub _EnumBuilder.GetIDsOfNames(Guid&amp; riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_EnumBuilder.GetTypeInfoCountUInt32Out">
            <summary>Задает stub _EnumBuilder.GetTypeInfoCount(UInt32&amp; pcTInfo)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_EnumBuilder.GetTypeInfoUInt32UInt32IntPtr">
            <summary>Задает stub _EnumBuilder.GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_EnumBuilder.InvokeUInt32GuidRefUInt32Int16IntPtrIntPtrIntPtrIntPtr">
            <summary>Задает stub _EnumBuilder.Invoke(UInt32 dispIdMember, Guid&amp; riid, UInt32 lcid, Int16 wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_EnumBuilder.global::System#Runtime#InteropServices#_EnumBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
            <summary>Задает заглушка _EnumBuilder.GetIDsOfNames(Guid&amp; riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_EnumBuilder.global::System#Runtime#InteropServices#_EnumBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
            <summary>Задает заглушка _EnumBuilder.GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_EnumBuilder.global::System#Runtime#InteropServices#_EnumBuilder#GetTypeInfoCount(System.UInt32@)">
            <summary>Задает заглушка _EnumBuilder.GetTypeInfoCount(UInt32&amp; pcTInfo)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_EnumBuilder.global::System#Runtime#InteropServices#_EnumBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>Задает заглушка _EnumBuilder.Invoke(UInt32 dispIdMember, Guid&amp; riid, UInt32 lcid, Int16 wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)</summary>
        </member>
        <member name="T:System.Runtime.InteropServices.Fakes.Stub_EventBuilder">
            <summary>Тип заглушки System.Runtime.InteropServices._EventBuilder</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_EventBuilder.#ctor">
            <summary>Инициализирует новый экземпляр type Stub_EventBuilder</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_EventBuilder.GetIDsOfNamesGuidRefIntPtrUInt32UInt32IntPtr">
            <summary>Задает stub _EventBuilder.GetIDsOfNames(Guid&amp; riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_EventBuilder.GetTypeInfoCountUInt32Out">
            <summary>Задает stub _EventBuilder.GetTypeInfoCount(UInt32&amp; pcTInfo)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_EventBuilder.GetTypeInfoUInt32UInt32IntPtr">
            <summary>Задает stub _EventBuilder.GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_EventBuilder.InvokeUInt32GuidRefUInt32Int16IntPtrIntPtrIntPtrIntPtr">
            <summary>Задает stub _EventBuilder.Invoke(UInt32 dispIdMember, Guid&amp; riid, UInt32 lcid, Int16 wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_EventBuilder.global::System#Runtime#InteropServices#_EventBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
            <summary>Задает заглушка _EventBuilder.GetIDsOfNames(Guid&amp; riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_EventBuilder.global::System#Runtime#InteropServices#_EventBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
            <summary>Задает заглушка _EventBuilder.GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_EventBuilder.global::System#Runtime#InteropServices#_EventBuilder#GetTypeInfoCount(System.UInt32@)">
            <summary>Задает заглушка _EventBuilder.GetTypeInfoCount(UInt32&amp; pcTInfo)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_EventBuilder.global::System#Runtime#InteropServices#_EventBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>Задает заглушка _EventBuilder.Invoke(UInt32 dispIdMember, Guid&amp; riid, UInt32 lcid, Int16 wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)</summary>
        </member>
        <member name="T:System.Runtime.InteropServices.Fakes.Stub_Exception">
            <summary>Тип заглушки System.Runtime.InteropServices._Exception</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_Exception.#ctor">
            <summary>Инициализирует новый экземпляр type Stub_Exception</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_Exception.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции Stub_Exception.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_Exception.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции Stub_Exception.Source как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_Exception.EqualsObject">
            <summary>Задает stub _Exception.Equals(Object obj)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_Exception.GetBaseException">
            <summary>Задает stub _Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_Exception.GetHashCode">
            <summary>Задает stub _Exception.GetHashCode()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_Exception.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub _Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_Exception.GetType">
            <summary>Задает stub _Exception.GetType()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_Exception.HelpLinkGet">
            <summary>Задает stub _Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_Exception.HelpLinkSetString">
            <summary>Задает stub _Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_Exception.InnerExceptionGet">
            <summary>Задает stub _Exception.get_InnerException()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_Exception.MessageGet">
            <summary>Задает stub _Exception.get_Message()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_Exception.SourceGet">
            <summary>Задает stub _Exception.get_Source()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_Exception.SourceSetString">
            <summary>Задает stub _Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_Exception.StackTraceGet">
            <summary>Задает stub _Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_Exception.global::System#Runtime#InteropServices#_Exception#Equals(System.Object)">
            <summary>Задает заглушка _Exception.Equals(Object obj)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_Exception.global::System#Runtime#InteropServices#_Exception#GetBaseException">
            <summary>Задает заглушка _Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_Exception.global::System#Runtime#InteropServices#_Exception#GetHashCode">
            <summary>Задает заглушка _Exception.GetHashCode()</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_Exception.global::System#Runtime#InteropServices#_Exception#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка _Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_Exception.global::System#Runtime#InteropServices#_Exception#GetType">
            <summary>Задает заглушка _Exception.GetType()</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_Exception.global::System#Runtime#InteropServices#_Exception#ToString">
            <summary>Задает заглушка _Exception.ToString()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_Exception.TargetSiteGet">
            <summary>Задает stub _Exception.get_TargetSite()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_Exception.ToString">
            <summary>Задает stub _Exception.ToString()</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.Stub_Exception.global::System#Runtime#InteropServices#_Exception#HelpLink">
            <summary>Задает stub _Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.Stub_Exception.global::System#Runtime#InteropServices#_Exception#InnerException">
            <summary>Задает stub _Exception.get_InnerException()</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.Stub_Exception.global::System#Runtime#InteropServices#_Exception#Message">
            <summary>Задает stub _Exception.get_Message()</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.Stub_Exception.global::System#Runtime#InteropServices#_Exception#Source">
            <summary>Задает stub _Exception.get_Source()</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.Stub_Exception.global::System#Runtime#InteropServices#_Exception#StackTrace">
            <summary>Задает stub _Exception.get_StackTrace()</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.Stub_Exception.global::System#Runtime#InteropServices#_Exception#TargetSite">
            <summary>Задает stub _Exception.get_TargetSite()</summary>
        </member>
        <member name="T:System.Runtime.InteropServices.Fakes.Stub_FieldBuilder">
            <summary>Тип заглушки System.Runtime.InteropServices._FieldBuilder</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_FieldBuilder.#ctor">
            <summary>Инициализирует новый экземпляр type Stub_FieldBuilder</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_FieldBuilder.GetIDsOfNamesGuidRefIntPtrUInt32UInt32IntPtr">
            <summary>Задает stub _FieldBuilder.GetIDsOfNames(Guid&amp; riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_FieldBuilder.GetTypeInfoCountUInt32Out">
            <summary>Задает stub _FieldBuilder.GetTypeInfoCount(UInt32&amp; pcTInfo)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_FieldBuilder.GetTypeInfoUInt32UInt32IntPtr">
            <summary>Задает stub _FieldBuilder.GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_FieldBuilder.InvokeUInt32GuidRefUInt32Int16IntPtrIntPtrIntPtrIntPtr">
            <summary>Задает stub _FieldBuilder.Invoke(UInt32 dispIdMember, Guid&amp; riid, UInt32 lcid, Int16 wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_FieldBuilder.global::System#Runtime#InteropServices#_FieldBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
            <summary>Задает заглушка _FieldBuilder.GetIDsOfNames(Guid&amp; riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_FieldBuilder.global::System#Runtime#InteropServices#_FieldBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
            <summary>Задает заглушка _FieldBuilder.GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_FieldBuilder.global::System#Runtime#InteropServices#_FieldBuilder#GetTypeInfoCount(System.UInt32@)">
            <summary>Задает заглушка _FieldBuilder.GetTypeInfoCount(UInt32&amp; pcTInfo)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_FieldBuilder.global::System#Runtime#InteropServices#_FieldBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>Задает заглушка _FieldBuilder.Invoke(UInt32 dispIdMember, Guid&amp; riid, UInt32 lcid, Int16 wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)</summary>
        </member>
        <member name="T:System.Runtime.InteropServices.Fakes.Stub_ILGenerator">
            <summary>Тип заглушки System.Runtime.InteropServices._ILGenerator</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_ILGenerator.#ctor">
            <summary>Инициализирует новый экземпляр type Stub_ILGenerator</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_ILGenerator.GetIDsOfNamesGuidRefIntPtrUInt32UInt32IntPtr">
            <summary>Задает stub _ILGenerator.GetIDsOfNames(Guid&amp; riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_ILGenerator.GetTypeInfoCountUInt32Out">
            <summary>Задает stub _ILGenerator.GetTypeInfoCount(UInt32&amp; pcTInfo)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_ILGenerator.GetTypeInfoUInt32UInt32IntPtr">
            <summary>Задает stub _ILGenerator.GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_ILGenerator.InvokeUInt32GuidRefUInt32Int16IntPtrIntPtrIntPtrIntPtr">
            <summary>Задает stub _ILGenerator.Invoke(UInt32 dispIdMember, Guid&amp; riid, UInt32 lcid, Int16 wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_ILGenerator.global::System#Runtime#InteropServices#_ILGenerator#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
            <summary>Задает заглушка _ILGenerator.GetIDsOfNames(Guid&amp; riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_ILGenerator.global::System#Runtime#InteropServices#_ILGenerator#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
            <summary>Задает заглушка _ILGenerator.GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_ILGenerator.global::System#Runtime#InteropServices#_ILGenerator#GetTypeInfoCount(System.UInt32@)">
            <summary>Задает заглушка _ILGenerator.GetTypeInfoCount(UInt32&amp; pcTInfo)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_ILGenerator.global::System#Runtime#InteropServices#_ILGenerator#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>Задает заглушка _ILGenerator.Invoke(UInt32 dispIdMember, Guid&amp; riid, UInt32 lcid, Int16 wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)</summary>
        </member>
        <member name="T:System.Runtime.InteropServices.Fakes.Stub_LocalBuilder">
            <summary>Тип заглушки System.Runtime.InteropServices._LocalBuilder</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_LocalBuilder.#ctor">
            <summary>Инициализирует новый экземпляр type Stub_LocalBuilder</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_LocalBuilder.GetIDsOfNamesGuidRefIntPtrUInt32UInt32IntPtr">
            <summary>Задает stub _LocalBuilder.GetIDsOfNames(Guid&amp; riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_LocalBuilder.GetTypeInfoCountUInt32Out">
            <summary>Задает stub _LocalBuilder.GetTypeInfoCount(UInt32&amp; pcTInfo)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_LocalBuilder.GetTypeInfoUInt32UInt32IntPtr">
            <summary>Задает stub _LocalBuilder.GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_LocalBuilder.InvokeUInt32GuidRefUInt32Int16IntPtrIntPtrIntPtrIntPtr">
            <summary>Задает stub _LocalBuilder.Invoke(UInt32 dispIdMember, Guid&amp; riid, UInt32 lcid, Int16 wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_LocalBuilder.global::System#Runtime#InteropServices#_LocalBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
            <summary>Задает заглушка _LocalBuilder.GetIDsOfNames(Guid&amp; riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_LocalBuilder.global::System#Runtime#InteropServices#_LocalBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
            <summary>Задает заглушка _LocalBuilder.GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_LocalBuilder.global::System#Runtime#InteropServices#_LocalBuilder#GetTypeInfoCount(System.UInt32@)">
            <summary>Задает заглушка _LocalBuilder.GetTypeInfoCount(UInt32&amp; pcTInfo)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_LocalBuilder.global::System#Runtime#InteropServices#_LocalBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>Задает заглушка _LocalBuilder.Invoke(UInt32 dispIdMember, Guid&amp; riid, UInt32 lcid, Int16 wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)</summary>
        </member>
        <member name="T:System.Runtime.InteropServices.Fakes.Stub_MemberInfo">
            <summary>Тип заглушки System.Runtime.InteropServices._MemberInfo</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_MemberInfo.#ctor">
            <summary>Инициализирует новый экземпляр type Stub_MemberInfo</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_MemberInfo.DeclaringTypeGet">
            <summary>Задает stub _MemberInfo.get_DeclaringType()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_MemberInfo.EqualsObject">
            <summary>Задает stub _MemberInfo.Equals(Object other)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_MemberInfo.GetCustomAttributesBoolean">
            <summary>Задает stub _MemberInfo.GetCustomAttributes(Boolean inherit)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_MemberInfo.GetCustomAttributesTypeBoolean">
            <summary>Задает stub _MemberInfo.GetCustomAttributes(Type attributeType, Boolean inherit)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_MemberInfo.GetHashCode">
            <summary>Задает stub _MemberInfo.GetHashCode()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_MemberInfo.GetIDsOfNamesGuidRefIntPtrUInt32UInt32IntPtr">
            <summary>Задает stub _MemberInfo.GetIDsOfNames(Guid&amp; riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_MemberInfo.GetType">
            <summary>Задает stub _MemberInfo.GetType()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_MemberInfo.GetTypeInfoCountUInt32Out">
            <summary>Задает stub _MemberInfo.GetTypeInfoCount(UInt32&amp; pcTInfo)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_MemberInfo.GetTypeInfoUInt32UInt32IntPtr">
            <summary>Задает stub _MemberInfo.GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_MemberInfo.InvokeUInt32GuidRefUInt32Int16IntPtrIntPtrIntPtrIntPtr">
            <summary>Задает stub _MemberInfo.Invoke(UInt32 dispIdMember, Guid&amp; riid, UInt32 lcid, Int16 wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_MemberInfo.IsDefinedTypeBoolean">
            <summary>Задает stub _MemberInfo.IsDefined(Type attributeType, Boolean inherit)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_MemberInfo.MemberTypeGet">
            <summary>Задает stub _MemberInfo.get_MemberType()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_MemberInfo.NameGet">
            <summary>Задает stub _MemberInfo.get_Name()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_MemberInfo.ReflectedTypeGet">
            <summary>Задает stub _MemberInfo.get_ReflectedType()</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_MemberInfo.global::System#Runtime#InteropServices#_MemberInfo#Equals(System.Object)">
            <summary>Задает заглушка _MemberInfo.Equals(Object other)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_MemberInfo.global::System#Runtime#InteropServices#_MemberInfo#GetCustomAttributes(System.Boolean)">
            <summary>Задает заглушка _MemberInfo.GetCustomAttributes(Boolean inherit)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_MemberInfo.global::System#Runtime#InteropServices#_MemberInfo#GetCustomAttributes(System.Type,System.Boolean)">
            <summary>Задает заглушка _MemberInfo.GetCustomAttributes(Type attributeType, Boolean inherit)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_MemberInfo.global::System#Runtime#InteropServices#_MemberInfo#GetHashCode">
            <summary>Задает заглушка _MemberInfo.GetHashCode()</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_MemberInfo.global::System#Runtime#InteropServices#_MemberInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
            <summary>Задает заглушка _MemberInfo.GetIDsOfNames(Guid&amp; riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_MemberInfo.global::System#Runtime#InteropServices#_MemberInfo#GetType">
            <summary>Задает заглушка _MemberInfo.GetType()</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_MemberInfo.global::System#Runtime#InteropServices#_MemberInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
            <summary>Задает заглушка _MemberInfo.GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_MemberInfo.global::System#Runtime#InteropServices#_MemberInfo#GetTypeInfoCount(System.UInt32@)">
            <summary>Задает заглушка _MemberInfo.GetTypeInfoCount(UInt32&amp; pcTInfo)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_MemberInfo.global::System#Runtime#InteropServices#_MemberInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>Задает заглушка _MemberInfo.Invoke(UInt32 dispIdMember, Guid&amp; riid, UInt32 lcid, Int16 wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_MemberInfo.global::System#Runtime#InteropServices#_MemberInfo#IsDefined(System.Type,System.Boolean)">
            <summary>Задает заглушка _MemberInfo.IsDefined(Type attributeType, Boolean inherit)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_MemberInfo.global::System#Runtime#InteropServices#_MemberInfo#ToString">
            <summary>Задает заглушка _MemberInfo.ToString()</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_MemberInfo.ToString">
            <summary>Задает stub _MemberInfo.ToString()</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.Stub_MemberInfo.global::System#Runtime#InteropServices#_MemberInfo#DeclaringType">
            <summary>Задает stub _MemberInfo.get_DeclaringType()</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.Stub_MemberInfo.global::System#Runtime#InteropServices#_MemberInfo#MemberType">
            <summary>Задает stub _MemberInfo.get_MemberType()</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.Stub_MemberInfo.global::System#Runtime#InteropServices#_MemberInfo#Name">
            <summary>Задает stub _MemberInfo.get_Name()</summary>
        </member>
        <member name="P:System.Runtime.InteropServices.Fakes.Stub_MemberInfo.global::System#Runtime#InteropServices#_MemberInfo#ReflectedType">
            <summary>Задает stub _MemberInfo.get_ReflectedType()</summary>
        </member>
        <member name="T:System.Runtime.InteropServices.Fakes.Stub_MethodBuilder">
            <summary>Тип заглушки System.Runtime.InteropServices._MethodBuilder</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_MethodBuilder.#ctor">
            <summary>Инициализирует новый экземпляр type Stub_MethodBuilder</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_MethodBuilder.GetIDsOfNamesGuidRefIntPtrUInt32UInt32IntPtr">
            <summary>Задает stub _MethodBuilder.GetIDsOfNames(Guid&amp; riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_MethodBuilder.GetTypeInfoCountUInt32Out">
            <summary>Задает stub _MethodBuilder.GetTypeInfoCount(UInt32&amp; pcTInfo)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_MethodBuilder.GetTypeInfoUInt32UInt32IntPtr">
            <summary>Задает stub _MethodBuilder.GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_MethodBuilder.InvokeUInt32GuidRefUInt32Int16IntPtrIntPtrIntPtrIntPtr">
            <summary>Задает stub _MethodBuilder.Invoke(UInt32 dispIdMember, Guid&amp; riid, UInt32 lcid, Int16 wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_MethodBuilder.global::System#Runtime#InteropServices#_MethodBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
            <summary>Задает заглушка _MethodBuilder.GetIDsOfNames(Guid&amp; riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_MethodBuilder.global::System#Runtime#InteropServices#_MethodBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
            <summary>Задает заглушка _MethodBuilder.GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_MethodBuilder.global::System#Runtime#InteropServices#_MethodBuilder#GetTypeInfoCount(System.UInt32@)">
            <summary>Задает заглушка _MethodBuilder.GetTypeInfoCount(UInt32&amp; pcTInfo)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_MethodBuilder.global::System#Runtime#InteropServices#_MethodBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>Задает заглушка _MethodBuilder.Invoke(UInt32 dispIdMember, Guid&amp; riid, UInt32 lcid, Int16 wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)</summary>
        </member>
        <member name="T:System.Runtime.InteropServices.Fakes.Stub_MethodRental">
            <summary>Тип заглушки System.Runtime.InteropServices._MethodRental</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_MethodRental.#ctor">
            <summary>Инициализирует новый экземпляр type Stub_MethodRental</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_MethodRental.GetIDsOfNamesGuidRefIntPtrUInt32UInt32IntPtr">
            <summary>Задает stub _MethodRental.GetIDsOfNames(Guid&amp; riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_MethodRental.GetTypeInfoCountUInt32Out">
            <summary>Задает stub _MethodRental.GetTypeInfoCount(UInt32&amp; pcTInfo)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_MethodRental.GetTypeInfoUInt32UInt32IntPtr">
            <summary>Задает stub _MethodRental.GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_MethodRental.InvokeUInt32GuidRefUInt32Int16IntPtrIntPtrIntPtrIntPtr">
            <summary>Задает stub _MethodRental.Invoke(UInt32 dispIdMember, Guid&amp; riid, UInt32 lcid, Int16 wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_MethodRental.global::System#Runtime#InteropServices#_MethodRental#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
            <summary>Задает заглушка _MethodRental.GetIDsOfNames(Guid&amp; riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_MethodRental.global::System#Runtime#InteropServices#_MethodRental#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
            <summary>Задает заглушка _MethodRental.GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_MethodRental.global::System#Runtime#InteropServices#_MethodRental#GetTypeInfoCount(System.UInt32@)">
            <summary>Задает заглушка _MethodRental.GetTypeInfoCount(UInt32&amp; pcTInfo)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_MethodRental.global::System#Runtime#InteropServices#_MethodRental#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>Задает заглушка _MethodRental.Invoke(UInt32 dispIdMember, Guid&amp; riid, UInt32 lcid, Int16 wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)</summary>
        </member>
        <member name="T:System.Runtime.InteropServices.Fakes.Stub_Module">
            <summary>Тип заглушки System.Runtime.InteropServices._Module</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_Module.#ctor">
            <summary>Инициализирует новый экземпляр type Stub_Module</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_Module.GetIDsOfNamesGuidRefIntPtrUInt32UInt32IntPtr">
            <summary>Задает stub _Module.GetIDsOfNames(Guid&amp; riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_Module.GetTypeInfoCountUInt32Out">
            <summary>Задает stub _Module.GetTypeInfoCount(UInt32&amp; pcTInfo)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_Module.GetTypeInfoUInt32UInt32IntPtr">
            <summary>Задает stub _Module.GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_Module.InvokeUInt32GuidRefUInt32Int16IntPtrIntPtrIntPtrIntPtr">
            <summary>Задает stub _Module.Invoke(UInt32 dispIdMember, Guid&amp; riid, UInt32 lcid, Int16 wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_Module.global::System#Runtime#InteropServices#_Module#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
            <summary>Задает заглушка _Module.GetIDsOfNames(Guid&amp; riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_Module.global::System#Runtime#InteropServices#_Module#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
            <summary>Задает заглушка _Module.GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_Module.global::System#Runtime#InteropServices#_Module#GetTypeInfoCount(System.UInt32@)">
            <summary>Задает заглушка _Module.GetTypeInfoCount(UInt32&amp; pcTInfo)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_Module.global::System#Runtime#InteropServices#_Module#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>Задает заглушка _Module.Invoke(UInt32 dispIdMember, Guid&amp; riid, UInt32 lcid, Int16 wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)</summary>
        </member>
        <member name="T:System.Runtime.InteropServices.Fakes.Stub_ModuleBuilder">
            <summary>Тип заглушки System.Runtime.InteropServices._ModuleBuilder</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_ModuleBuilder.#ctor">
            <summary>Инициализирует новый экземпляр type Stub_ModuleBuilder</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_ModuleBuilder.GetIDsOfNamesGuidRefIntPtrUInt32UInt32IntPtr">
            <summary>Задает stub _ModuleBuilder.GetIDsOfNames(Guid&amp; riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_ModuleBuilder.GetTypeInfoCountUInt32Out">
            <summary>Задает stub _ModuleBuilder.GetTypeInfoCount(UInt32&amp; pcTInfo)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_ModuleBuilder.GetTypeInfoUInt32UInt32IntPtr">
            <summary>Задает stub _ModuleBuilder.GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_ModuleBuilder.InvokeUInt32GuidRefUInt32Int16IntPtrIntPtrIntPtrIntPtr">
            <summary>Задает stub _ModuleBuilder.Invoke(UInt32 dispIdMember, Guid&amp; riid, UInt32 lcid, Int16 wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_ModuleBuilder.global::System#Runtime#InteropServices#_ModuleBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
            <summary>Задает заглушка _ModuleBuilder.GetIDsOfNames(Guid&amp; riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_ModuleBuilder.global::System#Runtime#InteropServices#_ModuleBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
            <summary>Задает заглушка _ModuleBuilder.GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_ModuleBuilder.global::System#Runtime#InteropServices#_ModuleBuilder#GetTypeInfoCount(System.UInt32@)">
            <summary>Задает заглушка _ModuleBuilder.GetTypeInfoCount(UInt32&amp; pcTInfo)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_ModuleBuilder.global::System#Runtime#InteropServices#_ModuleBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>Задает заглушка _ModuleBuilder.Invoke(UInt32 dispIdMember, Guid&amp; riid, UInt32 lcid, Int16 wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)</summary>
        </member>
        <member name="T:System.Runtime.InteropServices.Fakes.Stub_ParameterBuilder">
            <summary>Тип заглушки System.Runtime.InteropServices._ParameterBuilder</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_ParameterBuilder.#ctor">
            <summary>Инициализирует новый экземпляр type Stub_ParameterBuilder</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_ParameterBuilder.GetIDsOfNamesGuidRefIntPtrUInt32UInt32IntPtr">
            <summary>Задает stub _ParameterBuilder.GetIDsOfNames(Guid&amp; riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_ParameterBuilder.GetTypeInfoCountUInt32Out">
            <summary>Задает stub _ParameterBuilder.GetTypeInfoCount(UInt32&amp; pcTInfo)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_ParameterBuilder.GetTypeInfoUInt32UInt32IntPtr">
            <summary>Задает stub _ParameterBuilder.GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_ParameterBuilder.InvokeUInt32GuidRefUInt32Int16IntPtrIntPtrIntPtrIntPtr">
            <summary>Задает stub _ParameterBuilder.Invoke(UInt32 dispIdMember, Guid&amp; riid, UInt32 lcid, Int16 wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_ParameterBuilder.global::System#Runtime#InteropServices#_ParameterBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
            <summary>Задает заглушка _ParameterBuilder.GetIDsOfNames(Guid&amp; riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_ParameterBuilder.global::System#Runtime#InteropServices#_ParameterBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
            <summary>Задает заглушка _ParameterBuilder.GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_ParameterBuilder.global::System#Runtime#InteropServices#_ParameterBuilder#GetTypeInfoCount(System.UInt32@)">
            <summary>Задает заглушка _ParameterBuilder.GetTypeInfoCount(UInt32&amp; pcTInfo)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_ParameterBuilder.global::System#Runtime#InteropServices#_ParameterBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>Задает заглушка _ParameterBuilder.Invoke(UInt32 dispIdMember, Guid&amp; riid, UInt32 lcid, Int16 wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)</summary>
        </member>
        <member name="T:System.Runtime.InteropServices.Fakes.Stub_ParameterInfo">
            <summary>Тип заглушки System.Runtime.InteropServices._ParameterInfo</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_ParameterInfo.#ctor">
            <summary>Инициализирует новый экземпляр type Stub_ParameterInfo</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_ParameterInfo.GetIDsOfNamesGuidRefIntPtrUInt32UInt32IntPtr">
            <summary>Задает stub _ParameterInfo.GetIDsOfNames(Guid&amp; riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_ParameterInfo.GetTypeInfoCountUInt32Out">
            <summary>Задает stub _ParameterInfo.GetTypeInfoCount(UInt32&amp; pcTInfo)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_ParameterInfo.GetTypeInfoUInt32UInt32IntPtr">
            <summary>Задает stub _ParameterInfo.GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_ParameterInfo.InvokeUInt32GuidRefUInt32Int16IntPtrIntPtrIntPtrIntPtr">
            <summary>Задает stub _ParameterInfo.Invoke(UInt32 dispIdMember, Guid&amp; riid, UInt32 lcid, Int16 wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_ParameterInfo.global::System#Runtime#InteropServices#_ParameterInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
            <summary>Задает заглушка _ParameterInfo.GetIDsOfNames(Guid&amp; riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_ParameterInfo.global::System#Runtime#InteropServices#_ParameterInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
            <summary>Задает заглушка _ParameterInfo.GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_ParameterInfo.global::System#Runtime#InteropServices#_ParameterInfo#GetTypeInfoCount(System.UInt32@)">
            <summary>Задает заглушка _ParameterInfo.GetTypeInfoCount(UInt32&amp; pcTInfo)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_ParameterInfo.global::System#Runtime#InteropServices#_ParameterInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>Задает заглушка _ParameterInfo.Invoke(UInt32 dispIdMember, Guid&amp; riid, UInt32 lcid, Int16 wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)</summary>
        </member>
        <member name="T:System.Runtime.InteropServices.Fakes.Stub_PropertyBuilder">
            <summary>Тип заглушки System.Runtime.InteropServices._PropertyBuilder</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_PropertyBuilder.#ctor">
            <summary>Инициализирует новый экземпляр type Stub_PropertyBuilder</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_PropertyBuilder.GetIDsOfNamesGuidRefIntPtrUInt32UInt32IntPtr">
            <summary>Задает stub _PropertyBuilder.GetIDsOfNames(Guid&amp; riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_PropertyBuilder.GetTypeInfoCountUInt32Out">
            <summary>Задает stub _PropertyBuilder.GetTypeInfoCount(UInt32&amp; pcTInfo)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_PropertyBuilder.GetTypeInfoUInt32UInt32IntPtr">
            <summary>Задает stub _PropertyBuilder.GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_PropertyBuilder.InvokeUInt32GuidRefUInt32Int16IntPtrIntPtrIntPtrIntPtr">
            <summary>Задает stub _PropertyBuilder.Invoke(UInt32 dispIdMember, Guid&amp; riid, UInt32 lcid, Int16 wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_PropertyBuilder.global::System#Runtime#InteropServices#_PropertyBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
            <summary>Задает заглушка _PropertyBuilder.GetIDsOfNames(Guid&amp; riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_PropertyBuilder.global::System#Runtime#InteropServices#_PropertyBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
            <summary>Задает заглушка _PropertyBuilder.GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_PropertyBuilder.global::System#Runtime#InteropServices#_PropertyBuilder#GetTypeInfoCount(System.UInt32@)">
            <summary>Задает заглушка _PropertyBuilder.GetTypeInfoCount(UInt32&amp; pcTInfo)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_PropertyBuilder.global::System#Runtime#InteropServices#_PropertyBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>Задает заглушка _PropertyBuilder.Invoke(UInt32 dispIdMember, Guid&amp; riid, UInt32 lcid, Int16 wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)</summary>
        </member>
        <member name="T:System.Runtime.InteropServices.Fakes.Stub_SignatureHelper">
            <summary>Тип заглушки System.Runtime.InteropServices._SignatureHelper</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_SignatureHelper.#ctor">
            <summary>Инициализирует новый экземпляр type Stub_SignatureHelper</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_SignatureHelper.GetIDsOfNamesGuidRefIntPtrUInt32UInt32IntPtr">
            <summary>Задает stub _SignatureHelper.GetIDsOfNames(Guid&amp; riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_SignatureHelper.GetTypeInfoCountUInt32Out">
            <summary>Задает stub _SignatureHelper.GetTypeInfoCount(UInt32&amp; pcTInfo)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_SignatureHelper.GetTypeInfoUInt32UInt32IntPtr">
            <summary>Задает stub _SignatureHelper.GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_SignatureHelper.InvokeUInt32GuidRefUInt32Int16IntPtrIntPtrIntPtrIntPtr">
            <summary>Задает stub _SignatureHelper.Invoke(UInt32 dispIdMember, Guid&amp; riid, UInt32 lcid, Int16 wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_SignatureHelper.global::System#Runtime#InteropServices#_SignatureHelper#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
            <summary>Задает заглушка _SignatureHelper.GetIDsOfNames(Guid&amp; riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_SignatureHelper.global::System#Runtime#InteropServices#_SignatureHelper#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
            <summary>Задает заглушка _SignatureHelper.GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_SignatureHelper.global::System#Runtime#InteropServices#_SignatureHelper#GetTypeInfoCount(System.UInt32@)">
            <summary>Задает заглушка _SignatureHelper.GetTypeInfoCount(UInt32&amp; pcTInfo)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_SignatureHelper.global::System#Runtime#InteropServices#_SignatureHelper#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>Задает заглушка _SignatureHelper.Invoke(UInt32 dispIdMember, Guid&amp; riid, UInt32 lcid, Int16 wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)</summary>
        </member>
        <member name="T:System.Runtime.InteropServices.Fakes.Stub_Thread">
            <summary>Тип заглушки System.Runtime.InteropServices._Thread</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_Thread.#ctor">
            <summary>Инициализирует новый экземпляр type Stub_Thread</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_Thread.GetIDsOfNamesGuidRefIntPtrUInt32UInt32IntPtr">
            <summary>Задает stub _Thread.GetIDsOfNames(Guid&amp; riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_Thread.GetTypeInfoCountUInt32Out">
            <summary>Задает stub _Thread.GetTypeInfoCount(UInt32&amp; pcTInfo)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_Thread.GetTypeInfoUInt32UInt32IntPtr">
            <summary>Задает stub _Thread.GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_Thread.InvokeUInt32GuidRefUInt32Int16IntPtrIntPtrIntPtrIntPtr">
            <summary>Задает stub _Thread.Invoke(UInt32 dispIdMember, Guid&amp; riid, UInt32 lcid, Int16 wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_Thread.global::System#Runtime#InteropServices#_Thread#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
            <summary>Задает заглушка _Thread.GetIDsOfNames(Guid&amp; riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_Thread.global::System#Runtime#InteropServices#_Thread#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
            <summary>Задает заглушка _Thread.GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_Thread.global::System#Runtime#InteropServices#_Thread#GetTypeInfoCount(System.UInt32@)">
            <summary>Задает заглушка _Thread.GetTypeInfoCount(UInt32&amp; pcTInfo)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_Thread.global::System#Runtime#InteropServices#_Thread#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>Задает заглушка _Thread.Invoke(UInt32 dispIdMember, Guid&amp; riid, UInt32 lcid, Int16 wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)</summary>
        </member>
        <member name="T:System.Runtime.InteropServices.Fakes.Stub_TypeBuilder">
            <summary>Тип заглушки System.Runtime.InteropServices._TypeBuilder</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_TypeBuilder.#ctor">
            <summary>Инициализирует новый экземпляр type Stub_TypeBuilder</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_TypeBuilder.GetIDsOfNamesGuidRefIntPtrUInt32UInt32IntPtr">
            <summary>Задает stub _TypeBuilder.GetIDsOfNames(Guid&amp; riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_TypeBuilder.GetTypeInfoCountUInt32Out">
            <summary>Задает stub _TypeBuilder.GetTypeInfoCount(UInt32&amp; pcTInfo)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_TypeBuilder.GetTypeInfoUInt32UInt32IntPtr">
            <summary>Задает stub _TypeBuilder.GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)</summary>
        </member>
        <member name="F:System.Runtime.InteropServices.Fakes.Stub_TypeBuilder.InvokeUInt32GuidRefUInt32Int16IntPtrIntPtrIntPtrIntPtr">
            <summary>Задает stub _TypeBuilder.Invoke(UInt32 dispIdMember, Guid&amp; riid, UInt32 lcid, Int16 wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_TypeBuilder.global::System#Runtime#InteropServices#_TypeBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
            <summary>Задает заглушка _TypeBuilder.GetIDsOfNames(Guid&amp; riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_TypeBuilder.global::System#Runtime#InteropServices#_TypeBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
            <summary>Задает заглушка _TypeBuilder.GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_TypeBuilder.global::System#Runtime#InteropServices#_TypeBuilder#GetTypeInfoCount(System.UInt32@)">
            <summary>Задает заглушка _TypeBuilder.GetTypeInfoCount(UInt32&amp; pcTInfo)</summary>
        </member>
        <member name="M:System.Runtime.InteropServices.Fakes.Stub_TypeBuilder.global::System#Runtime#InteropServices#_TypeBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>Задает заглушка _TypeBuilder.Invoke(UInt32 dispIdMember, Guid&amp; riid, UInt32 lcid, Int16 wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Activation.Fakes.StubIActivator">
            <summary>Тип заглушки System.Runtime.Remoting.Activation.IActivator</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Activation.Fakes.StubIActivator.#ctor">
            <summary>Инициализирует новый экземпляр type StubIActivator</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Activation.Fakes.StubIActivator.ActivateIConstructionCallMessage">
            <summary>Задает stub IActivator.Activate(IConstructionCallMessage msg)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Activation.Fakes.StubIActivator.AttachBackingFieldToNextActivator">
            <summary>Присоединение делегатов для эмуляции StubIActivator.NextActivator как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Activation.Fakes.StubIActivator.LevelGet">
            <summary>Задает stub IActivator.get_Level()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Activation.Fakes.StubIActivator.NextActivatorGet">
            <summary>Задает stub IActivator.get_NextActivator()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Activation.Fakes.StubIActivator.NextActivatorSetIActivator">
            <summary>Задает stub IActivator.set_NextActivator(IActivator value)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Activation.Fakes.StubIActivator.global::System#Runtime#Remoting#Activation#IActivator#Activate(System.Runtime.Remoting.Activation.IConstructionCallMessage)">
            <summary>Задает заглушка IActivator.Activate(IConstructionCallMessage msg)</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Activation.Fakes.StubIActivator.global::System#Runtime#Remoting#Activation#IActivator#Level">
            <summary>Задает stub IActivator.get_Level()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Activation.Fakes.StubIActivator.global::System#Runtime#Remoting#Activation#IActivator#NextActivator">
            <summary>Задает stub IActivator.get_NextActivator()</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Activation.Fakes.StubIConstructionCallMessage">
            <summary>Тип заглушки System.Runtime.Remoting.Activation.IConstructionCallMessage</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Activation.Fakes.StubIConstructionCallMessage.#ctor">
            <summary>Инициализирует новый экземпляр type StubIConstructionCallMessage</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Activation.Fakes.StubIConstructionCallMessage.ActivationTypeGet">
            <summary>Задает stub IConstructionCallMessage.get_ActivationType()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Activation.Fakes.StubIConstructionCallMessage.ActivationTypeNameGet">
            <summary>Задает stub IConstructionCallMessage.get_ActivationTypeName()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Activation.Fakes.StubIConstructionCallMessage.ActivatorGet">
            <summary>Задает stub IConstructionCallMessage.get_Activator()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Activation.Fakes.StubIConstructionCallMessage.ActivatorSetIActivator">
            <summary>Задает stub IConstructionCallMessage.set_Activator(IActivator value)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Activation.Fakes.StubIConstructionCallMessage.ArgCountGet">
            <summary>Задает stub IMethodMessage.get_ArgCount()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Activation.Fakes.StubIConstructionCallMessage.ArgsGet">
            <summary>Задает stub IMethodMessage.get_Args()</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Activation.Fakes.StubIConstructionCallMessage.AttachBackingFieldToActivator">
            <summary>Присоединение делегатов для эмуляции StubIConstructionCallMessage.Activator как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Activation.Fakes.StubIConstructionCallMessage.CallSiteActivationAttributesGet">
            <summary>Задает stub IConstructionCallMessage.get_CallSiteActivationAttributes()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Activation.Fakes.StubIConstructionCallMessage.ContextPropertiesGet">
            <summary>Задает stub IConstructionCallMessage.get_ContextProperties()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Activation.Fakes.StubIConstructionCallMessage.GetArgInt32">
            <summary>Задает stub IMethodMessage.GetArg(Int32 argNum)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Activation.Fakes.StubIConstructionCallMessage.GetArgNameInt32">
            <summary>Задает stub IMethodMessage.GetArgName(Int32 index)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Activation.Fakes.StubIConstructionCallMessage.GetInArgInt32">
            <summary>Задает stub IMethodCallMessage.GetInArg(Int32 argNum)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Activation.Fakes.StubIConstructionCallMessage.GetInArgNameInt32">
            <summary>Задает stub IMethodCallMessage.GetInArgName(Int32 index)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Activation.Fakes.StubIConstructionCallMessage.HasVarArgsGet">
            <summary>Задает stub IMethodMessage.get_HasVarArgs()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Activation.Fakes.StubIConstructionCallMessage.InArgCountGet">
            <summary>Задает stub IMethodCallMessage.get_InArgCount()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Activation.Fakes.StubIConstructionCallMessage.InArgsGet">
            <summary>Задает stub IMethodCallMessage.get_InArgs()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Activation.Fakes.StubIConstructionCallMessage.LogicalCallContextGet">
            <summary>Задает stub IMethodMessage.get_LogicalCallContext()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Activation.Fakes.StubIConstructionCallMessage.MethodBaseGet">
            <summary>Задает stub IMethodMessage.get_MethodBase()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Activation.Fakes.StubIConstructionCallMessage.MethodNameGet">
            <summary>Задает stub IMethodMessage.get_MethodName()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Activation.Fakes.StubIConstructionCallMessage.MethodSignatureGet">
            <summary>Задает stub IMethodMessage.get_MethodSignature()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Activation.Fakes.StubIConstructionCallMessage.PropertiesGet">
            <summary>Задает stub IMessage.get_Properties()</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Activation.Fakes.StubIConstructionCallMessage.global::System#Runtime#Remoting#Messaging#IMethodCallMessage#GetInArg(System.Int32)">
            <summary>Задает заглушка IMethodCallMessage.GetInArg(Int32 argNum)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Activation.Fakes.StubIConstructionCallMessage.global::System#Runtime#Remoting#Messaging#IMethodCallMessage#GetInArgName(System.Int32)">
            <summary>Задает заглушка IMethodCallMessage.GetInArgName(Int32 index)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Activation.Fakes.StubIConstructionCallMessage.global::System#Runtime#Remoting#Messaging#IMethodMessage#GetArg(System.Int32)">
            <summary>Задает заглушка IMethodMessage.GetArg(Int32 argNum)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Activation.Fakes.StubIConstructionCallMessage.global::System#Runtime#Remoting#Messaging#IMethodMessage#GetArgName(System.Int32)">
            <summary>Задает заглушка IMethodMessage.GetArgName(Int32 index)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Activation.Fakes.StubIConstructionCallMessage.TypeNameGet">
            <summary>Задает stub IMethodMessage.get_TypeName()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Activation.Fakes.StubIConstructionCallMessage.UriGet">
            <summary>Задает stub IMethodMessage.get_Uri()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Activation.Fakes.StubIConstructionCallMessage.global::System#Runtime#Remoting#Activation#IConstructionCallMessage#ActivationType">
            <summary>Задает stub IConstructionCallMessage.get_ActivationType()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Activation.Fakes.StubIConstructionCallMessage.global::System#Runtime#Remoting#Activation#IConstructionCallMessage#ActivationTypeName">
            <summary>Задает stub IConstructionCallMessage.get_ActivationTypeName()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Activation.Fakes.StubIConstructionCallMessage.global::System#Runtime#Remoting#Activation#IConstructionCallMessage#Activator">
            <summary>Задает stub IConstructionCallMessage.get_Activator()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Activation.Fakes.StubIConstructionCallMessage.global::System#Runtime#Remoting#Messaging#IMethodMessage#ArgCount">
            <summary>Задает stub IMethodMessage.get_ArgCount()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Activation.Fakes.StubIConstructionCallMessage.global::System#Runtime#Remoting#Messaging#IMethodMessage#Args">
            <summary>Задает stub IMethodMessage.get_Args()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Activation.Fakes.StubIConstructionCallMessage.global::System#Runtime#Remoting#Activation#IConstructionCallMessage#CallSiteActivationAttributes">
            <summary>Задает stub IConstructionCallMessage.get_CallSiteActivationAttributes()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Activation.Fakes.StubIConstructionCallMessage.global::System#Runtime#Remoting#Activation#IConstructionCallMessage#ContextProperties">
            <summary>Задает stub IConstructionCallMessage.get_ContextProperties()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Activation.Fakes.StubIConstructionCallMessage.global::System#Runtime#Remoting#Messaging#IMethodMessage#HasVarArgs">
            <summary>Задает stub IMethodMessage.get_HasVarArgs()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Activation.Fakes.StubIConstructionCallMessage.global::System#Runtime#Remoting#Messaging#IMethodCallMessage#InArgCount">
            <summary>Задает stub IMethodCallMessage.get_InArgCount()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Activation.Fakes.StubIConstructionCallMessage.global::System#Runtime#Remoting#Messaging#IMethodCallMessage#InArgs">
            <summary>Задает stub IMethodCallMessage.get_InArgs()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Activation.Fakes.StubIConstructionCallMessage.global::System#Runtime#Remoting#Messaging#IMethodMessage#LogicalCallContext">
            <summary>Задает stub IMethodMessage.get_LogicalCallContext()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Activation.Fakes.StubIConstructionCallMessage.global::System#Runtime#Remoting#Messaging#IMethodMessage#MethodBase">
            <summary>Задает stub IMethodMessage.get_MethodBase()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Activation.Fakes.StubIConstructionCallMessage.global::System#Runtime#Remoting#Messaging#IMethodMessage#MethodName">
            <summary>Задает stub IMethodMessage.get_MethodName()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Activation.Fakes.StubIConstructionCallMessage.global::System#Runtime#Remoting#Messaging#IMethodMessage#MethodSignature">
            <summary>Задает stub IMethodMessage.get_MethodSignature()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Activation.Fakes.StubIConstructionCallMessage.global::System#Runtime#Remoting#Messaging#IMessage#Properties">
            <summary>Задает stub IMessage.get_Properties()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Activation.Fakes.StubIConstructionCallMessage.global::System#Runtime#Remoting#Messaging#IMethodMessage#TypeName">
            <summary>Задает stub IMethodMessage.get_TypeName()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Activation.Fakes.StubIConstructionCallMessage.global::System#Runtime#Remoting#Messaging#IMethodMessage#Uri">
            <summary>Задает stub IMethodMessage.get_Uri()</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Activation.Fakes.StubIConstructionReturnMessage">
            <summary>Тип заглушки System.Runtime.Remoting.Activation.IConstructionReturnMessage</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Activation.Fakes.StubIConstructionReturnMessage.#ctor">
            <summary>Инициализирует новый экземпляр type StubIConstructionReturnMessage</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Activation.Fakes.StubIConstructionReturnMessage.ArgCountGet">
            <summary>Задает stub IMethodMessage.get_ArgCount()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Activation.Fakes.StubIConstructionReturnMessage.ArgsGet">
            <summary>Задает stub IMethodMessage.get_Args()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Activation.Fakes.StubIConstructionReturnMessage.ExceptionGet">
            <summary>Задает stub IMethodReturnMessage.get_Exception()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Activation.Fakes.StubIConstructionReturnMessage.GetArgInt32">
            <summary>Задает stub IMethodMessage.GetArg(Int32 argNum)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Activation.Fakes.StubIConstructionReturnMessage.GetArgNameInt32">
            <summary>Задает stub IMethodMessage.GetArgName(Int32 index)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Activation.Fakes.StubIConstructionReturnMessage.GetOutArgInt32">
            <summary>Задает stub IMethodReturnMessage.GetOutArg(Int32 argNum)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Activation.Fakes.StubIConstructionReturnMessage.GetOutArgNameInt32">
            <summary>Задает stub IMethodReturnMessage.GetOutArgName(Int32 index)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Activation.Fakes.StubIConstructionReturnMessage.HasVarArgsGet">
            <summary>Задает stub IMethodMessage.get_HasVarArgs()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Activation.Fakes.StubIConstructionReturnMessage.LogicalCallContextGet">
            <summary>Задает stub IMethodMessage.get_LogicalCallContext()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Activation.Fakes.StubIConstructionReturnMessage.MethodBaseGet">
            <summary>Задает stub IMethodMessage.get_MethodBase()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Activation.Fakes.StubIConstructionReturnMessage.MethodNameGet">
            <summary>Задает stub IMethodMessage.get_MethodName()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Activation.Fakes.StubIConstructionReturnMessage.MethodSignatureGet">
            <summary>Задает stub IMethodMessage.get_MethodSignature()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Activation.Fakes.StubIConstructionReturnMessage.OutArgCountGet">
            <summary>Задает stub IMethodReturnMessage.get_OutArgCount()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Activation.Fakes.StubIConstructionReturnMessage.OutArgsGet">
            <summary>Задает stub IMethodReturnMessage.get_OutArgs()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Activation.Fakes.StubIConstructionReturnMessage.PropertiesGet">
            <summary>Задает stub IMessage.get_Properties()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Activation.Fakes.StubIConstructionReturnMessage.ReturnValueGet">
            <summary>Задает stub IMethodReturnMessage.get_ReturnValue()</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Activation.Fakes.StubIConstructionReturnMessage.global::System#Runtime#Remoting#Messaging#IMethodMessage#GetArg(System.Int32)">
            <summary>Задает заглушка IMethodMessage.GetArg(Int32 argNum)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Activation.Fakes.StubIConstructionReturnMessage.global::System#Runtime#Remoting#Messaging#IMethodMessage#GetArgName(System.Int32)">
            <summary>Задает заглушка IMethodMessage.GetArgName(Int32 index)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Activation.Fakes.StubIConstructionReturnMessage.global::System#Runtime#Remoting#Messaging#IMethodReturnMessage#GetOutArg(System.Int32)">
            <summary>Задает заглушка IMethodReturnMessage.GetOutArg(Int32 argNum)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Activation.Fakes.StubIConstructionReturnMessage.global::System#Runtime#Remoting#Messaging#IMethodReturnMessage#GetOutArgName(System.Int32)">
            <summary>Задает заглушка IMethodReturnMessage.GetOutArgName(Int32 index)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Activation.Fakes.StubIConstructionReturnMessage.TypeNameGet">
            <summary>Задает stub IMethodMessage.get_TypeName()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Activation.Fakes.StubIConstructionReturnMessage.UriGet">
            <summary>Задает stub IMethodMessage.get_Uri()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Activation.Fakes.StubIConstructionReturnMessage.global::System#Runtime#Remoting#Messaging#IMethodMessage#ArgCount">
            <summary>Задает stub IMethodMessage.get_ArgCount()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Activation.Fakes.StubIConstructionReturnMessage.global::System#Runtime#Remoting#Messaging#IMethodMessage#Args">
            <summary>Задает stub IMethodMessage.get_Args()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Activation.Fakes.StubIConstructionReturnMessage.global::System#Runtime#Remoting#Messaging#IMethodReturnMessage#Exception">
            <summary>Задает stub IMethodReturnMessage.get_Exception()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Activation.Fakes.StubIConstructionReturnMessage.global::System#Runtime#Remoting#Messaging#IMethodMessage#HasVarArgs">
            <summary>Задает stub IMethodMessage.get_HasVarArgs()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Activation.Fakes.StubIConstructionReturnMessage.global::System#Runtime#Remoting#Messaging#IMethodMessage#LogicalCallContext">
            <summary>Задает stub IMethodMessage.get_LogicalCallContext()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Activation.Fakes.StubIConstructionReturnMessage.global::System#Runtime#Remoting#Messaging#IMethodMessage#MethodBase">
            <summary>Задает stub IMethodMessage.get_MethodBase()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Activation.Fakes.StubIConstructionReturnMessage.global::System#Runtime#Remoting#Messaging#IMethodMessage#MethodName">
            <summary>Задает stub IMethodMessage.get_MethodName()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Activation.Fakes.StubIConstructionReturnMessage.global::System#Runtime#Remoting#Messaging#IMethodMessage#MethodSignature">
            <summary>Задает stub IMethodMessage.get_MethodSignature()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Activation.Fakes.StubIConstructionReturnMessage.global::System#Runtime#Remoting#Messaging#IMethodReturnMessage#OutArgCount">
            <summary>Задает stub IMethodReturnMessage.get_OutArgCount()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Activation.Fakes.StubIConstructionReturnMessage.global::System#Runtime#Remoting#Messaging#IMethodReturnMessage#OutArgs">
            <summary>Задает stub IMethodReturnMessage.get_OutArgs()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Activation.Fakes.StubIConstructionReturnMessage.global::System#Runtime#Remoting#Messaging#IMessage#Properties">
            <summary>Задает stub IMessage.get_Properties()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Activation.Fakes.StubIConstructionReturnMessage.global::System#Runtime#Remoting#Messaging#IMethodReturnMessage#ReturnValue">
            <summary>Задает stub IMethodReturnMessage.get_ReturnValue()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Activation.Fakes.StubIConstructionReturnMessage.global::System#Runtime#Remoting#Messaging#IMethodMessage#TypeName">
            <summary>Задает stub IMethodMessage.get_TypeName()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Activation.Fakes.StubIConstructionReturnMessage.global::System#Runtime#Remoting#Messaging#IMethodMessage#Uri">
            <summary>Задает stub IMethodMessage.get_Uri()</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelObjectWithProperties">
            <summary>Тип заглушки System.Runtime.Remoting.Channels.BaseChannelObjectWithProperties</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelObjectWithProperties.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelObjectWithProperties.Add(System.Object,System.Object)">
            <summary>Задает заглушка BaseChannelObjectWithProperties.Add(Object key, Object value)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelObjectWithProperties.AddObjectObject">
            <summary>Задает stub BaseChannelObjectWithProperties.Add(Object key, Object value)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelObjectWithProperties.Clear">
            <summary>Задает заглушка BaseChannelObjectWithProperties.Clear()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelObjectWithProperties.Clear01">
            <summary>Задает stub BaseChannelObjectWithProperties.Clear()</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelObjectWithProperties.Contains(System.Object)">
            <summary>Задает заглушка BaseChannelObjectWithProperties.Contains(Object key)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelObjectWithProperties.ContainsObject">
            <summary>Задает stub BaseChannelObjectWithProperties.Contains(Object key)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelObjectWithProperties.CopyTo(System.Array,System.Int32)">
            <summary>Задает заглушка BaseChannelObjectWithProperties.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelObjectWithProperties.CopyToArrayInt32">
            <summary>Задает stub BaseChannelObjectWithProperties.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelObjectWithProperties.CountGet">
            <summary>Задает stub BaseChannelObjectWithProperties.get_Count()</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelObjectWithProperties.GetEnumerator">
            <summary>Задает заглушка BaseChannelObjectWithProperties.GetEnumerator()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelObjectWithProperties.GetEnumerator01">
            <summary>Задает stub BaseChannelObjectWithProperties.GetEnumerator()</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelObjectWithProperties.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubBaseChannelObjectWithProperties</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelObjectWithProperties.IsFixedSizeGet">
            <summary>Задает stub BaseChannelObjectWithProperties.get_IsFixedSize()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelObjectWithProperties.IsReadOnlyGet">
            <summary>Задает stub BaseChannelObjectWithProperties.get_IsReadOnly()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelObjectWithProperties.IsSynchronizedGet">
            <summary>Задает stub BaseChannelObjectWithProperties.get_IsSynchronized()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelObjectWithProperties.ItemGetObject">
            <summary>Задает stub BaseChannelObjectWithProperties.get_Item(Object key)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelObjectWithProperties.ItemSetObjectObject">
            <summary>Задает stub BaseChannelObjectWithProperties.set_Item(Object key, Object value)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelObjectWithProperties.KeysGet">
            <summary>Задает stub BaseChannelObjectWithProperties.get_Keys()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelObjectWithProperties.PropertiesGet">
            <summary>Задает stub BaseChannelObjectWithProperties.get_Properties()</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelObjectWithProperties.Remove(System.Object)">
            <summary>Задает заглушка BaseChannelObjectWithProperties.Remove(Object key)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelObjectWithProperties.RemoveObject">
            <summary>Задает stub BaseChannelObjectWithProperties.Remove(Object key)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelObjectWithProperties.SyncRootGet">
            <summary>Задает stub BaseChannelObjectWithProperties.get_SyncRoot()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelObjectWithProperties.ValuesGet">
            <summary>Задает stub BaseChannelObjectWithProperties.get_Values()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelObjectWithProperties.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelObjectWithProperties.Count">
            <summary>Задает stub BaseChannelObjectWithProperties.get_Count()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelObjectWithProperties.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelObjectWithProperties.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelObjectWithProperties.IsFixedSize">
            <summary>Задает stub BaseChannelObjectWithProperties.get_IsFixedSize()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelObjectWithProperties.IsReadOnly">
            <summary>Задает stub BaseChannelObjectWithProperties.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelObjectWithProperties.IsSynchronized">
            <summary>Задает stub BaseChannelObjectWithProperties.get_IsSynchronized()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelObjectWithProperties.Item(System.Object)">
            <summary>Задает stub BaseChannelObjectWithProperties.get_Item(Object key)</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelObjectWithProperties.Keys">
            <summary>Задает stub BaseChannelObjectWithProperties.get_Keys()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelObjectWithProperties.Properties">
            <summary>Задает stub BaseChannelObjectWithProperties.get_Properties()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelObjectWithProperties.SyncRoot">
            <summary>Задает stub BaseChannelObjectWithProperties.get_SyncRoot()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelObjectWithProperties.Values">
            <summary>Задает stub BaseChannelObjectWithProperties.get_Values()</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelSinkWithProperties">
            <summary>Тип заглушки System.Runtime.Remoting.Channels.BaseChannelSinkWithProperties</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelSinkWithProperties.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelSinkWithProperties.Add(System.Object,System.Object)">
            <summary>Задает заглушка BaseChannelObjectWithProperties.Add(Object key, Object value)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelSinkWithProperties.AddObjectObject">
            <summary>Задает stub BaseChannelObjectWithProperties.Add(Object key, Object value)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelSinkWithProperties.Clear">
            <summary>Задает заглушка BaseChannelObjectWithProperties.Clear()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelSinkWithProperties.Clear01">
            <summary>Задает stub BaseChannelObjectWithProperties.Clear()</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelSinkWithProperties.Contains(System.Object)">
            <summary>Задает заглушка BaseChannelObjectWithProperties.Contains(Object key)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelSinkWithProperties.ContainsObject">
            <summary>Задает stub BaseChannelObjectWithProperties.Contains(Object key)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelSinkWithProperties.CopyTo(System.Array,System.Int32)">
            <summary>Задает заглушка BaseChannelObjectWithProperties.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelSinkWithProperties.CopyToArrayInt32">
            <summary>Задает stub BaseChannelObjectWithProperties.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelSinkWithProperties.CountGet">
            <summary>Задает stub BaseChannelObjectWithProperties.get_Count()</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelSinkWithProperties.GetEnumerator">
            <summary>Задает заглушка BaseChannelObjectWithProperties.GetEnumerator()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelSinkWithProperties.GetEnumerator01">
            <summary>Задает stub BaseChannelObjectWithProperties.GetEnumerator()</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelSinkWithProperties.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubBaseChannelSinkWithProperties</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelSinkWithProperties.IsFixedSizeGet">
            <summary>Задает stub BaseChannelObjectWithProperties.get_IsFixedSize()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelSinkWithProperties.IsReadOnlyGet">
            <summary>Задает stub BaseChannelObjectWithProperties.get_IsReadOnly()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelSinkWithProperties.IsSynchronizedGet">
            <summary>Задает stub BaseChannelObjectWithProperties.get_IsSynchronized()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelSinkWithProperties.ItemGetObject">
            <summary>Задает stub BaseChannelObjectWithProperties.get_Item(Object key)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelSinkWithProperties.ItemSetObjectObject">
            <summary>Задает stub BaseChannelObjectWithProperties.set_Item(Object key, Object value)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelSinkWithProperties.KeysGet">
            <summary>Задает stub BaseChannelObjectWithProperties.get_Keys()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelSinkWithProperties.PropertiesGet">
            <summary>Задает stub BaseChannelObjectWithProperties.get_Properties()</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelSinkWithProperties.Remove(System.Object)">
            <summary>Задает заглушка BaseChannelObjectWithProperties.Remove(Object key)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelSinkWithProperties.RemoveObject">
            <summary>Задает stub BaseChannelObjectWithProperties.Remove(Object key)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelSinkWithProperties.SyncRootGet">
            <summary>Задает stub BaseChannelObjectWithProperties.get_SyncRoot()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelSinkWithProperties.ValuesGet">
            <summary>Задает stub BaseChannelObjectWithProperties.get_Values()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelSinkWithProperties.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelSinkWithProperties.Count">
            <summary>Задает stub BaseChannelObjectWithProperties.get_Count()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelSinkWithProperties.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelSinkWithProperties.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelSinkWithProperties.IsFixedSize">
            <summary>Задает stub BaseChannelObjectWithProperties.get_IsFixedSize()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelSinkWithProperties.IsReadOnly">
            <summary>Задает stub BaseChannelObjectWithProperties.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelSinkWithProperties.IsSynchronized">
            <summary>Задает stub BaseChannelObjectWithProperties.get_IsSynchronized()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelSinkWithProperties.Item(System.Object)">
            <summary>Задает stub BaseChannelObjectWithProperties.get_Item(Object key)</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelSinkWithProperties.Keys">
            <summary>Задает stub BaseChannelObjectWithProperties.get_Keys()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelSinkWithProperties.Properties">
            <summary>Задает stub BaseChannelObjectWithProperties.get_Properties()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelSinkWithProperties.SyncRoot">
            <summary>Задает stub BaseChannelObjectWithProperties.get_SyncRoot()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelSinkWithProperties.Values">
            <summary>Задает stub BaseChannelObjectWithProperties.get_Values()</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelWithProperties">
            <summary>Тип заглушки System.Runtime.Remoting.Channels.BaseChannelWithProperties</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelWithProperties.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelWithProperties.Add(System.Object,System.Object)">
            <summary>Задает заглушка BaseChannelObjectWithProperties.Add(Object key, Object value)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelWithProperties.AddObjectObject">
            <summary>Задает stub BaseChannelObjectWithProperties.Add(Object key, Object value)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelWithProperties.Clear">
            <summary>Задает заглушка BaseChannelObjectWithProperties.Clear()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelWithProperties.Clear01">
            <summary>Задает stub BaseChannelObjectWithProperties.Clear()</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelWithProperties.Contains(System.Object)">
            <summary>Задает заглушка BaseChannelObjectWithProperties.Contains(Object key)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelWithProperties.ContainsObject">
            <summary>Задает stub BaseChannelObjectWithProperties.Contains(Object key)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelWithProperties.CopyTo(System.Array,System.Int32)">
            <summary>Задает заглушка BaseChannelObjectWithProperties.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelWithProperties.CopyToArrayInt32">
            <summary>Задает stub BaseChannelObjectWithProperties.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelWithProperties.CountGet">
            <summary>Задает stub BaseChannelObjectWithProperties.get_Count()</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelWithProperties.GetEnumerator">
            <summary>Задает заглушка BaseChannelObjectWithProperties.GetEnumerator()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelWithProperties.GetEnumerator01">
            <summary>Задает stub BaseChannelObjectWithProperties.GetEnumerator()</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelWithProperties.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubBaseChannelWithProperties</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelWithProperties.IsFixedSizeGet">
            <summary>Задает stub BaseChannelObjectWithProperties.get_IsFixedSize()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelWithProperties.IsReadOnlyGet">
            <summary>Задает stub BaseChannelObjectWithProperties.get_IsReadOnly()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelWithProperties.IsSynchronizedGet">
            <summary>Задает stub BaseChannelObjectWithProperties.get_IsSynchronized()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelWithProperties.ItemGetObject">
            <summary>Задает stub BaseChannelObjectWithProperties.get_Item(Object key)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelWithProperties.ItemSetObjectObject">
            <summary>Задает stub BaseChannelObjectWithProperties.set_Item(Object key, Object value)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelWithProperties.KeysGet">
            <summary>Задает stub BaseChannelObjectWithProperties.get_Keys()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelWithProperties.PropertiesGet">
            <summary>Задает stub BaseChannelWithProperties.get_Properties()</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelWithProperties.Remove(System.Object)">
            <summary>Задает заглушка BaseChannelObjectWithProperties.Remove(Object key)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelWithProperties.RemoveObject">
            <summary>Задает stub BaseChannelObjectWithProperties.Remove(Object key)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelWithProperties.SyncRootGet">
            <summary>Задает stub BaseChannelObjectWithProperties.get_SyncRoot()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelWithProperties.ValuesGet">
            <summary>Задает stub BaseChannelObjectWithProperties.get_Values()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelWithProperties.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelWithProperties.Count">
            <summary>Задает stub BaseChannelObjectWithProperties.get_Count()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelWithProperties.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelWithProperties.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelWithProperties.IsFixedSize">
            <summary>Задает stub BaseChannelObjectWithProperties.get_IsFixedSize()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelWithProperties.IsReadOnly">
            <summary>Задает stub BaseChannelObjectWithProperties.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelWithProperties.IsSynchronized">
            <summary>Задает stub BaseChannelObjectWithProperties.get_IsSynchronized()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelWithProperties.Item(System.Object)">
            <summary>Задает stub BaseChannelObjectWithProperties.get_Item(Object key)</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelWithProperties.Keys">
            <summary>Задает stub BaseChannelObjectWithProperties.get_Keys()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelWithProperties.Properties">
            <summary>Задает stub BaseChannelWithProperties.get_Properties()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelWithProperties.SyncRoot">
            <summary>Задает stub BaseChannelObjectWithProperties.get_SyncRoot()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Channels.Fakes.StubBaseChannelWithProperties.Values">
            <summary>Задает stub BaseChannelObjectWithProperties.get_Values()</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Channels.Fakes.StubChannelDataStore">
            <summary>Тип заглушки System.Runtime.Remoting.Channels.ChannelDataStore</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Channels.Fakes.StubChannelDataStore.#ctor(System.String[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Channels.Fakes.StubChannelDataStore.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubChannelDataStore</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Channels.Fakes.StubChannelDataStore.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Channels.Fakes.StubChannelDataStore.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Channels.Fakes.StubChannelDataStore.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Channels.Fakes.StubClientChannelSinkStack">
            <summary>Тип заглушки System.Runtime.Remoting.Channels.ClientChannelSinkStack</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Channels.Fakes.StubClientChannelSinkStack.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Channels.Fakes.StubClientChannelSinkStack.#ctor(System.Runtime.Remoting.Messaging.IMessageSink)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Channels.Fakes.StubClientChannelSinkStack.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubClientChannelSinkStack</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Channels.Fakes.StubClientChannelSinkStack.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Channels.Fakes.StubClientChannelSinkStack.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Channels.Fakes.StubClientChannelSinkStack.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Channels.Fakes.StubIChannel">
            <summary>Тип заглушки System.Runtime.Remoting.Channels.IChannel</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Channels.Fakes.StubIChannel.#ctor">
            <summary>Инициализирует новый экземпляр type StubIChannel</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubIChannel.ChannelNameGet">
            <summary>Задает stub IChannel.get_ChannelName()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubIChannel.ChannelPriorityGet">
            <summary>Задает stub IChannel.get_ChannelPriority()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubIChannel.ParseStringStringOut">
            <summary>Задает stub IChannel.Parse(String url, String&amp; objectURI)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Channels.Fakes.StubIChannel.global::System#Runtime#Remoting#Channels#IChannel#Parse(System.String,System.String@)">
            <summary>Задает заглушка IChannel.Parse(String url, String&amp; objectURI)</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Channels.Fakes.StubIChannel.global::System#Runtime#Remoting#Channels#IChannel#ChannelName">
            <summary>Задает stub IChannel.get_ChannelName()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Channels.Fakes.StubIChannel.global::System#Runtime#Remoting#Channels#IChannel#ChannelPriority">
            <summary>Задает stub IChannel.get_ChannelPriority()</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Channels.Fakes.StubIChannelDataStore">
            <summary>Тип заглушки System.Runtime.Remoting.Channels.IChannelDataStore</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Channels.Fakes.StubIChannelDataStore.#ctor">
            <summary>Инициализирует новый экземпляр type StubIChannelDataStore</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubIChannelDataStore.ChannelUrisGet">
            <summary>Задает stub IChannelDataStore.get_ChannelUris()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubIChannelDataStore.ItemGetObject">
            <summary>Задает stub IChannelDataStore.get_Item(Object key)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubIChannelDataStore.ItemSetObjectObject">
            <summary>Задает stub IChannelDataStore.set_Item(Object key, Object value)</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Channels.Fakes.StubIChannelDataStore.global::System#Runtime#Remoting#Channels#IChannelDataStore#ChannelUris">
            <summary>Задает stub IChannelDataStore.get_ChannelUris()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Channels.Fakes.StubIChannelDataStore.System#Runtime#Remoting#Channels#IChannelDataStore#Item(System.Object)">
            <summary>Задает stub IChannelDataStore.get_Item(Object key)</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Channels.Fakes.StubIChannelReceiver">
            <summary>Тип заглушки System.Runtime.Remoting.Channels.IChannelReceiver</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Channels.Fakes.StubIChannelReceiver.#ctor">
            <summary>Инициализирует новый экземпляр type StubIChannelReceiver</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubIChannelReceiver.ChannelDataGet">
            <summary>Задает stub IChannelReceiver.get_ChannelData()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubIChannelReceiver.ChannelNameGet">
            <summary>Задает stub IChannel.get_ChannelName()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubIChannelReceiver.ChannelPriorityGet">
            <summary>Задает stub IChannel.get_ChannelPriority()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubIChannelReceiver.GetUrlsForUriString">
            <summary>Задает stub IChannelReceiver.GetUrlsForUri(String objectURI)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubIChannelReceiver.ParseStringStringOut">
            <summary>Задает stub IChannel.Parse(String url, String&amp; objectURI)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubIChannelReceiver.StartListeningObject">
            <summary>Задает stub IChannelReceiver.StartListening(Object data)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubIChannelReceiver.StopListeningObject">
            <summary>Задает stub IChannelReceiver.StopListening(Object data)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Channels.Fakes.StubIChannelReceiver.global::System#Runtime#Remoting#Channels#IChannel#Parse(System.String,System.String@)">
            <summary>Задает заглушка IChannel.Parse(String url, String&amp; objectURI)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Channels.Fakes.StubIChannelReceiver.global::System#Runtime#Remoting#Channels#IChannelReceiver#GetUrlsForUri(System.String)">
            <summary>Задает заглушка IChannelReceiver.GetUrlsForUri(String objectURI)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Channels.Fakes.StubIChannelReceiver.global::System#Runtime#Remoting#Channels#IChannelReceiver#StartListening(System.Object)">
            <summary>Задает заглушка IChannelReceiver.StartListening(Object data)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Channels.Fakes.StubIChannelReceiver.global::System#Runtime#Remoting#Channels#IChannelReceiver#StopListening(System.Object)">
            <summary>Задает заглушка IChannelReceiver.StopListening(Object data)</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Channels.Fakes.StubIChannelReceiver.global::System#Runtime#Remoting#Channels#IChannelReceiver#ChannelData">
            <summary>Задает stub IChannelReceiver.get_ChannelData()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Channels.Fakes.StubIChannelReceiver.global::System#Runtime#Remoting#Channels#IChannel#ChannelName">
            <summary>Задает stub IChannel.get_ChannelName()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Channels.Fakes.StubIChannelReceiver.global::System#Runtime#Remoting#Channels#IChannel#ChannelPriority">
            <summary>Задает stub IChannel.get_ChannelPriority()</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Channels.Fakes.StubIChannelReceiverHook">
            <summary>Тип заглушки System.Runtime.Remoting.Channels.IChannelReceiverHook</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Channels.Fakes.StubIChannelReceiverHook.#ctor">
            <summary>Инициализирует новый экземпляр type StubIChannelReceiverHook</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubIChannelReceiverHook.AddHookChannelUriString">
            <summary>Задает stub IChannelReceiverHook.AddHookChannelUri(String channelUri)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubIChannelReceiverHook.ChannelSchemeGet">
            <summary>Задает stub IChannelReceiverHook.get_ChannelScheme()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubIChannelReceiverHook.ChannelSinkChainGet">
            <summary>Задает stub IChannelReceiverHook.get_ChannelSinkChain()</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Channels.Fakes.StubIChannelReceiverHook.global::System#Runtime#Remoting#Channels#IChannelReceiverHook#AddHookChannelUri(System.String)">
            <summary>Задает заглушка IChannelReceiverHook.AddHookChannelUri(String channelUri)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubIChannelReceiverHook.WantsToListenGet">
            <summary>Задает stub IChannelReceiverHook.get_WantsToListen()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Channels.Fakes.StubIChannelReceiverHook.global::System#Runtime#Remoting#Channels#IChannelReceiverHook#ChannelScheme">
            <summary>Задает stub IChannelReceiverHook.get_ChannelScheme()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Channels.Fakes.StubIChannelReceiverHook.global::System#Runtime#Remoting#Channels#IChannelReceiverHook#ChannelSinkChain">
            <summary>Задает stub IChannelReceiverHook.get_ChannelSinkChain()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Channels.Fakes.StubIChannelReceiverHook.global::System#Runtime#Remoting#Channels#IChannelReceiverHook#WantsToListen">
            <summary>Задает stub IChannelReceiverHook.get_WantsToListen()</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Channels.Fakes.StubIChannelSender">
            <summary>Тип заглушки System.Runtime.Remoting.Channels.IChannelSender</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Channels.Fakes.StubIChannelSender.#ctor">
            <summary>Инициализирует новый экземпляр type StubIChannelSender</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubIChannelSender.ChannelNameGet">
            <summary>Задает stub IChannel.get_ChannelName()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubIChannelSender.ChannelPriorityGet">
            <summary>Задает stub IChannel.get_ChannelPriority()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubIChannelSender.CreateMessageSinkStringObjectStringOut">
            <summary>Задает stub IChannelSender.CreateMessageSink(String url, Object remoteChannelData, String&amp; objectURI)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubIChannelSender.ParseStringStringOut">
            <summary>Задает stub IChannel.Parse(String url, String&amp; objectURI)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Channels.Fakes.StubIChannelSender.global::System#Runtime#Remoting#Channels#IChannel#Parse(System.String,System.String@)">
            <summary>Задает заглушка IChannel.Parse(String url, String&amp; objectURI)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Channels.Fakes.StubIChannelSender.global::System#Runtime#Remoting#Channels#IChannelSender#CreateMessageSink(System.String,System.Object,System.String@)">
            <summary>Задает заглушка IChannelSender.CreateMessageSink(String url, Object remoteChannelData, String&amp; objectURI)</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Channels.Fakes.StubIChannelSender.global::System#Runtime#Remoting#Channels#IChannel#ChannelName">
            <summary>Задает stub IChannel.get_ChannelName()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Channels.Fakes.StubIChannelSender.global::System#Runtime#Remoting#Channels#IChannel#ChannelPriority">
            <summary>Задает stub IChannel.get_ChannelPriority()</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Channels.Fakes.StubIChannelSinkBase">
            <summary>Тип заглушки System.Runtime.Remoting.Channels.IChannelSinkBase</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Channels.Fakes.StubIChannelSinkBase.#ctor">
            <summary>Инициализирует новый экземпляр type StubIChannelSinkBase</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubIChannelSinkBase.PropertiesGet">
            <summary>Задает stub IChannelSinkBase.get_Properties()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Channels.Fakes.StubIChannelSinkBase.global::System#Runtime#Remoting#Channels#IChannelSinkBase#Properties">
            <summary>Задает stub IChannelSinkBase.get_Properties()</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Channels.Fakes.StubIClientChannelSinkProvider">
            <summary>Тип заглушки System.Runtime.Remoting.Channels.IClientChannelSinkProvider</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Channels.Fakes.StubIClientChannelSinkProvider.#ctor">
            <summary>Инициализирует новый экземпляр type StubIClientChannelSinkProvider</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Channels.Fakes.StubIClientChannelSinkProvider.AttachBackingFieldToNext">
            <summary>Присоединение делегатов для эмуляции StubIClientChannelSinkProvider.Next как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubIClientChannelSinkProvider.CreateSinkIChannelSenderStringObject">
            <summary>Задает stub IClientChannelSinkProvider.CreateSink(IChannelSender channel, String url, Object remoteChannelData)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubIClientChannelSinkProvider.NextGet">
            <summary>Задает stub IClientChannelSinkProvider.get_Next()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubIClientChannelSinkProvider.NextSetIClientChannelSinkProvider">
            <summary>Задает stub IClientChannelSinkProvider.set_Next(IClientChannelSinkProvider value)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Channels.Fakes.StubIClientChannelSinkProvider.global::System#Runtime#Remoting#Channels#IClientChannelSinkProvider#CreateSink(System.Runtime.Remoting.Channels.IChannelSender,System.String,System.Object)">
            <summary>Задает заглушка IClientChannelSinkProvider.CreateSink(IChannelSender channel, String url, Object remoteChannelData)</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Channels.Fakes.StubIClientChannelSinkProvider.global::System#Runtime#Remoting#Channels#IClientChannelSinkProvider#Next">
            <summary>Задает stub IClientChannelSinkProvider.get_Next()</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Channels.Fakes.StubIClientFormatterSinkProvider">
            <summary>Тип заглушки System.Runtime.Remoting.Channels.IClientFormatterSinkProvider</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Channels.Fakes.StubIClientFormatterSinkProvider.#ctor">
            <summary>Инициализирует новый экземпляр type StubIClientFormatterSinkProvider</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Channels.Fakes.StubIClientFormatterSinkProvider.AttachBackingFieldToNext">
            <summary>Присоединение делегатов для эмуляции StubIClientFormatterSinkProvider.Next как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubIClientFormatterSinkProvider.CreateSinkIChannelSenderStringObject">
            <summary>Задает stub IClientChannelSinkProvider.CreateSink(IChannelSender channel, String url, Object remoteChannelData)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubIClientFormatterSinkProvider.NextGet">
            <summary>Задает stub IClientChannelSinkProvider.get_Next()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubIClientFormatterSinkProvider.NextSetIClientChannelSinkProvider">
            <summary>Задает stub IClientChannelSinkProvider.set_Next(IClientChannelSinkProvider value)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Channels.Fakes.StubIClientFormatterSinkProvider.global::System#Runtime#Remoting#Channels#IClientChannelSinkProvider#CreateSink(System.Runtime.Remoting.Channels.IChannelSender,System.String,System.Object)">
            <summary>Задает заглушка IClientChannelSinkProvider.CreateSink(IChannelSender channel, String url, Object remoteChannelData)</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Channels.Fakes.StubIClientFormatterSinkProvider.global::System#Runtime#Remoting#Channels#IClientChannelSinkProvider#Next">
            <summary>Задает stub IClientChannelSinkProvider.get_Next()</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Channels.Fakes.StubISecurableChannel">
            <summary>Тип заглушки System.Runtime.Remoting.Channels.ISecurableChannel</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Channels.Fakes.StubISecurableChannel.#ctor">
            <summary>Инициализирует новый экземпляр type StubISecurableChannel</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Channels.Fakes.StubISecurableChannel.AttachBackingFieldToIsSecured">
            <summary>Присоединение делегатов для эмуляции StubISecurableChannel.IsSecured как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubISecurableChannel.IsSecuredGet">
            <summary>Задает stub ISecurableChannel.get_IsSecured()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubISecurableChannel.IsSecuredSetBoolean">
            <summary>Задает stub ISecurableChannel.set_IsSecured(Boolean value)</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Channels.Fakes.StubISecurableChannel.global::System#Runtime#Remoting#Channels#ISecurableChannel#IsSecured">
            <summary>Задает stub ISecurableChannel.get_IsSecured()</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Channels.Fakes.StubIServerChannelSinkProvider">
            <summary>Тип заглушки System.Runtime.Remoting.Channels.IServerChannelSinkProvider</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Channels.Fakes.StubIServerChannelSinkProvider.#ctor">
            <summary>Инициализирует новый экземпляр type StubIServerChannelSinkProvider</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Channels.Fakes.StubIServerChannelSinkProvider.AttachBackingFieldToNext">
            <summary>Присоединение делегатов для эмуляции StubIServerChannelSinkProvider.Next как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubIServerChannelSinkProvider.CreateSinkIChannelReceiver">
            <summary>Задает stub IServerChannelSinkProvider.CreateSink(IChannelReceiver channel)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubIServerChannelSinkProvider.GetChannelDataIChannelDataStore">
            <summary>Задает stub IServerChannelSinkProvider.GetChannelData(IChannelDataStore channelData)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubIServerChannelSinkProvider.NextGet">
            <summary>Задает stub IServerChannelSinkProvider.get_Next()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubIServerChannelSinkProvider.NextSetIServerChannelSinkProvider">
            <summary>Задает stub IServerChannelSinkProvider.set_Next(IServerChannelSinkProvider value)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Channels.Fakes.StubIServerChannelSinkProvider.global::System#Runtime#Remoting#Channels#IServerChannelSinkProvider#CreateSink(System.Runtime.Remoting.Channels.IChannelReceiver)">
            <summary>Задает заглушка IServerChannelSinkProvider.CreateSink(IChannelReceiver channel)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Channels.Fakes.StubIServerChannelSinkProvider.global::System#Runtime#Remoting#Channels#IServerChannelSinkProvider#GetChannelData(System.Runtime.Remoting.Channels.IChannelDataStore)">
            <summary>Задает заглушка IServerChannelSinkProvider.GetChannelData(IChannelDataStore channelData)</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Channels.Fakes.StubIServerChannelSinkProvider.global::System#Runtime#Remoting#Channels#IServerChannelSinkProvider#Next">
            <summary>Задает stub IServerChannelSinkProvider.get_Next()</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Channels.Fakes.StubIServerFormatterSinkProvider">
            <summary>Тип заглушки System.Runtime.Remoting.Channels.IServerFormatterSinkProvider</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Channels.Fakes.StubIServerFormatterSinkProvider.#ctor">
            <summary>Инициализирует новый экземпляр type StubIServerFormatterSinkProvider</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Channels.Fakes.StubIServerFormatterSinkProvider.AttachBackingFieldToNext">
            <summary>Присоединение делегатов для эмуляции StubIServerFormatterSinkProvider.Next как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubIServerFormatterSinkProvider.CreateSinkIChannelReceiver">
            <summary>Задает stub IServerChannelSinkProvider.CreateSink(IChannelReceiver channel)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubIServerFormatterSinkProvider.GetChannelDataIChannelDataStore">
            <summary>Задает stub IServerChannelSinkProvider.GetChannelData(IChannelDataStore channelData)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubIServerFormatterSinkProvider.NextGet">
            <summary>Задает stub IServerChannelSinkProvider.get_Next()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubIServerFormatterSinkProvider.NextSetIServerChannelSinkProvider">
            <summary>Задает stub IServerChannelSinkProvider.set_Next(IServerChannelSinkProvider value)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Channels.Fakes.StubIServerFormatterSinkProvider.global::System#Runtime#Remoting#Channels#IServerChannelSinkProvider#CreateSink(System.Runtime.Remoting.Channels.IChannelReceiver)">
            <summary>Задает заглушка IServerChannelSinkProvider.CreateSink(IChannelReceiver channel)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Channels.Fakes.StubIServerFormatterSinkProvider.global::System#Runtime#Remoting#Channels#IServerChannelSinkProvider#GetChannelData(System.Runtime.Remoting.Channels.IChannelDataStore)">
            <summary>Задает заглушка IServerChannelSinkProvider.GetChannelData(IChannelDataStore channelData)</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Channels.Fakes.StubIServerFormatterSinkProvider.global::System#Runtime#Remoting#Channels#IServerChannelSinkProvider#Next">
            <summary>Задает stub IServerChannelSinkProvider.get_Next()</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Channels.Fakes.StubITransportHeaders">
            <summary>Тип заглушки System.Runtime.Remoting.Channels.ITransportHeaders</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Channels.Fakes.StubITransportHeaders.#ctor">
            <summary>Инициализирует новый экземпляр type StubITransportHeaders</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubITransportHeaders.GetEnumerator">
            <summary>Задает stub ITransportHeaders.GetEnumerator()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubITransportHeaders.ItemGetObject">
            <summary>Задает stub ITransportHeaders.get_Item(Object key)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Channels.Fakes.StubITransportHeaders.ItemSetObjectObject">
            <summary>Задает stub ITransportHeaders.set_Item(Object key, Object value)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Channels.Fakes.StubITransportHeaders.global::System#Runtime#Remoting#Channels#ITransportHeaders#GetEnumerator">
            <summary>Задает заглушка ITransportHeaders.GetEnumerator()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Channels.Fakes.StubITransportHeaders.System#Runtime#Remoting#Channels#ITransportHeaders#Item(System.Object)">
            <summary>Задает stub ITransportHeaders.get_Item(Object key)</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Channels.Fakes.StubServerChannelSinkStack">
            <summary>Тип заглушки System.Runtime.Remoting.Channels.ServerChannelSinkStack</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Channels.Fakes.StubServerChannelSinkStack.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Channels.Fakes.StubServerChannelSinkStack.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubServerChannelSinkStack</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Channels.Fakes.StubServerChannelSinkStack.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Channels.Fakes.StubServerChannelSinkStack.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Channels.Fakes.StubServerChannelSinkStack.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Channels.Fakes.StubSinkProviderData">
            <summary>Тип заглушки System.Runtime.Remoting.Channels.SinkProviderData</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Channels.Fakes.StubSinkProviderData.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Channels.Fakes.StubSinkProviderData.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubSinkProviderData</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Channels.Fakes.StubSinkProviderData.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Channels.Fakes.StubSinkProviderData.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Channels.Fakes.StubSinkProviderData.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Channels.Fakes.StubTransportHeaders">
            <summary>Тип заглушки System.Runtime.Remoting.Channels.TransportHeaders</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Channels.Fakes.StubTransportHeaders.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Channels.Fakes.StubTransportHeaders.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubTransportHeaders</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Channels.Fakes.StubTransportHeaders.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Channels.Fakes.StubTransportHeaders.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Channels.Fakes.StubTransportHeaders.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Contexts.Fakes.StubContext">
            <summary>Тип заглушки System.Runtime.Remoting.Contexts.Context</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Contexts.Fakes.StubContext.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Contexts.Fakes.StubContext.ContextIDGet">
            <summary>Задает stub Context.get_ContextID()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Contexts.Fakes.StubContext.ContextPropertiesGet">
            <summary>Задает stub Context.get_ContextProperties()</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Contexts.Fakes.StubContext.Freeze">
            <summary>Задает заглушка Context.Freeze()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Contexts.Fakes.StubContext.Freeze01">
            <summary>Задает stub Context.Freeze()</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Contexts.Fakes.StubContext.GetProperty(System.String)">
            <summary>Задает заглушка Context.GetProperty(String name)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Contexts.Fakes.StubContext.GetPropertyString">
            <summary>Задает stub Context.GetProperty(String name)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Contexts.Fakes.StubContext.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubContext</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Contexts.Fakes.StubContext.SetProperty(System.Runtime.Remoting.Contexts.IContextProperty)">
            <summary>Задает заглушка Context.SetProperty(IContextProperty prop)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Contexts.Fakes.StubContext.SetPropertyIContextProperty">
            <summary>Задает stub Context.SetProperty(IContextProperty prop)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Contexts.Fakes.StubContext.ToString">
            <summary>Задает заглушка Context.ToString()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Contexts.Fakes.StubContext.ToString01">
            <summary>Задает stub Context.ToString()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Contexts.Fakes.StubContext.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Contexts.Fakes.StubContext.ContextID">
            <summary>Задает stub Context.get_ContextID()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Contexts.Fakes.StubContext.ContextProperties">
            <summary>Задает stub Context.get_ContextProperties()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Contexts.Fakes.StubContext.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Contexts.Fakes.StubContext.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Contexts.Fakes.StubContextAttribute">
            <summary>Тип заглушки System.Runtime.Remoting.Contexts.ContextAttribute</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Contexts.Fakes.StubContextAttribute.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Contexts.Fakes.StubContextAttribute.Equals(System.Object)">
            <summary>Задает заглушка ContextAttribute.Equals(Object o)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Contexts.Fakes.StubContextAttribute.EqualsObject">
            <summary>Задает stub ContextAttribute.Equals(Object o)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Contexts.Fakes.StubContextAttribute.Freeze(System.Runtime.Remoting.Contexts.Context)">
            <summary>Задает заглушка ContextAttribute.Freeze(Context newContext)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Contexts.Fakes.StubContextAttribute.FreezeContext">
            <summary>Задает stub ContextAttribute.Freeze(Context newContext)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Contexts.Fakes.StubContextAttribute.GetHashCode">
            <summary>Задает заглушка ContextAttribute.GetHashCode()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Contexts.Fakes.StubContextAttribute.GetHashCode01">
            <summary>Задает stub ContextAttribute.GetHashCode()</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Contexts.Fakes.StubContextAttribute.GetPropertiesForNewContext(System.Runtime.Remoting.Activation.IConstructionCallMessage)">
            <summary>Задает заглушка ContextAttribute.GetPropertiesForNewContext(IConstructionCallMessage ctorMsg)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Contexts.Fakes.StubContextAttribute.GetPropertiesForNewContextIConstructionCallMessage">
            <summary>Задает stub ContextAttribute.GetPropertiesForNewContext(IConstructionCallMessage ctorMsg)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Contexts.Fakes.StubContextAttribute.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubContextAttribute</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Contexts.Fakes.StubContextAttribute.IsContextOK(System.Runtime.Remoting.Contexts.Context,System.Runtime.Remoting.Activation.IConstructionCallMessage)">
            <summary>Задает заглушка ContextAttribute.IsContextOK(Context ctx, IConstructionCallMessage ctorMsg)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Contexts.Fakes.StubContextAttribute.IsContextOKContextIConstructionCallMessage">
            <summary>Задает stub ContextAttribute.IsContextOK(Context ctx, IConstructionCallMessage ctorMsg)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Contexts.Fakes.StubContextAttribute.IsDefaultAttribute">
            <summary>Задает заглушка Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Contexts.Fakes.StubContextAttribute.IsDefaultAttribute01">
            <summary>Задает stub Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Contexts.Fakes.StubContextAttribute.IsNewContextOK(System.Runtime.Remoting.Contexts.Context)">
            <summary>Задает заглушка ContextAttribute.IsNewContextOK(Context newCtx)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Contexts.Fakes.StubContextAttribute.IsNewContextOKContext">
            <summary>Задает stub ContextAttribute.IsNewContextOK(Context newCtx)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Contexts.Fakes.StubContextAttribute.Match(System.Object)">
            <summary>Задает заглушка Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Contexts.Fakes.StubContextAttribute.MatchObject">
            <summary>Задает stub Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Contexts.Fakes.StubContextAttribute.NameGet">
            <summary>Задает stub ContextAttribute.get_Name()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Contexts.Fakes.StubContextAttribute.TypeIdGet">
            <summary>Задает stub Attribute.get_TypeId()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Contexts.Fakes.StubContextAttribute.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Contexts.Fakes.StubContextAttribute.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Contexts.Fakes.StubContextAttribute.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Contexts.Fakes.StubContextAttribute.Name">
            <summary>Задает stub ContextAttribute.get_Name()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Contexts.Fakes.StubContextAttribute.TypeId">
            <summary>Задает stub Attribute.get_TypeId()</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Contexts.Fakes.StubIContextAttribute">
            <summary>Тип заглушки System.Runtime.Remoting.Contexts.IContextAttribute</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Contexts.Fakes.StubIContextAttribute.#ctor">
            <summary>Инициализирует новый экземпляр type StubIContextAttribute</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Contexts.Fakes.StubIContextAttribute.GetPropertiesForNewContextIConstructionCallMessage">
            <summary>Задает stub IContextAttribute.GetPropertiesForNewContext(IConstructionCallMessage msg)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Contexts.Fakes.StubIContextAttribute.IsContextOKContextIConstructionCallMessage">
            <summary>Задает stub IContextAttribute.IsContextOK(Context ctx, IConstructionCallMessage msg)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Contexts.Fakes.StubIContextAttribute.global::System#Runtime#Remoting#Contexts#IContextAttribute#GetPropertiesForNewContext(System.Runtime.Remoting.Activation.IConstructionCallMessage)">
            <summary>Задает заглушка IContextAttribute.GetPropertiesForNewContext(IConstructionCallMessage msg)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Contexts.Fakes.StubIContextAttribute.global::System#Runtime#Remoting#Contexts#IContextAttribute#IsContextOK(System.Runtime.Remoting.Contexts.Context,System.Runtime.Remoting.Activation.IConstructionCallMessage)">
            <summary>Задает заглушка IContextAttribute.IsContextOK(Context ctx, IConstructionCallMessage msg)</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Contexts.Fakes.StubIContextProperty">
            <summary>Тип заглушки System.Runtime.Remoting.Contexts.IContextProperty</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Contexts.Fakes.StubIContextProperty.#ctor">
            <summary>Инициализирует новый экземпляр type StubIContextProperty</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Contexts.Fakes.StubIContextProperty.FreezeContext">
            <summary>Задает stub IContextProperty.Freeze(Context newContext)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Contexts.Fakes.StubIContextProperty.IsNewContextOKContext">
            <summary>Задает stub IContextProperty.IsNewContextOK(Context newCtx)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Contexts.Fakes.StubIContextProperty.NameGet">
            <summary>Задает stub IContextProperty.get_Name()</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Contexts.Fakes.StubIContextProperty.global::System#Runtime#Remoting#Contexts#IContextProperty#Freeze(System.Runtime.Remoting.Contexts.Context)">
            <summary>Задает заглушка IContextProperty.Freeze(Context newContext)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Contexts.Fakes.StubIContextProperty.global::System#Runtime#Remoting#Contexts#IContextProperty#IsNewContextOK(System.Runtime.Remoting.Contexts.Context)">
            <summary>Задает заглушка IContextProperty.IsNewContextOK(Context newCtx)</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Contexts.Fakes.StubIContextProperty.global::System#Runtime#Remoting#Contexts#IContextProperty#Name">
            <summary>Задает stub IContextProperty.get_Name()</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Contexts.Fakes.StubIContextPropertyActivator">
            <summary>Тип заглушки System.Runtime.Remoting.Contexts.IContextPropertyActivator</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Contexts.Fakes.StubIContextPropertyActivator.#ctor">
            <summary>Инициализирует новый экземпляр type StubIContextPropertyActivator</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Contexts.Fakes.StubIContextPropertyActivator.CollectFromClientContextIConstructionCallMessage">
            <summary>Задает stub IContextPropertyActivator.CollectFromClientContext(IConstructionCallMessage msg)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Contexts.Fakes.StubIContextPropertyActivator.CollectFromServerContextIConstructionReturnMessage">
            <summary>Задает stub IContextPropertyActivator.CollectFromServerContext(IConstructionReturnMessage msg)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Contexts.Fakes.StubIContextPropertyActivator.DeliverClientContextToServerContextIConstructionCallMessage">
            <summary>Задает stub IContextPropertyActivator.DeliverClientContextToServerContext(IConstructionCallMessage msg)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Contexts.Fakes.StubIContextPropertyActivator.DeliverServerContextToClientContextIConstructionReturnMessage">
            <summary>Задает stub IContextPropertyActivator.DeliverServerContextToClientContext(IConstructionReturnMessage msg)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Contexts.Fakes.StubIContextPropertyActivator.IsOKToActivateIConstructionCallMessage">
            <summary>Задает stub IContextPropertyActivator.IsOKToActivate(IConstructionCallMessage msg)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Contexts.Fakes.StubIContextPropertyActivator.global::System#Runtime#Remoting#Contexts#IContextPropertyActivator#CollectFromClientContext(System.Runtime.Remoting.Activation.IConstructionCallMessage)">
            <summary>Задает заглушка IContextPropertyActivator.CollectFromClientContext(IConstructionCallMessage msg)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Contexts.Fakes.StubIContextPropertyActivator.global::System#Runtime#Remoting#Contexts#IContextPropertyActivator#CollectFromServerContext(System.Runtime.Remoting.Activation.IConstructionReturnMessage)">
            <summary>Задает заглушка IContextPropertyActivator.CollectFromServerContext(IConstructionReturnMessage msg)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Contexts.Fakes.StubIContextPropertyActivator.global::System#Runtime#Remoting#Contexts#IContextPropertyActivator#DeliverClientContextToServerContext(System.Runtime.Remoting.Activation.IConstructionCallMessage)">
            <summary>Задает заглушка IContextPropertyActivator.DeliverClientContextToServerContext(IConstructionCallMessage msg)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Contexts.Fakes.StubIContextPropertyActivator.global::System#Runtime#Remoting#Contexts#IContextPropertyActivator#DeliverServerContextToClientContext(System.Runtime.Remoting.Activation.IConstructionReturnMessage)">
            <summary>Задает заглушка IContextPropertyActivator.DeliverServerContextToClientContext(IConstructionReturnMessage msg)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Contexts.Fakes.StubIContextPropertyActivator.global::System#Runtime#Remoting#Contexts#IContextPropertyActivator#IsOKToActivate(System.Runtime.Remoting.Activation.IConstructionCallMessage)">
            <summary>Задает заглушка IContextPropertyActivator.IsOKToActivate(IConstructionCallMessage msg)</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Contexts.Fakes.StubIContributeClientContextSink">
            <summary>Тип заглушки System.Runtime.Remoting.Contexts.IContributeClientContextSink</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Contexts.Fakes.StubIContributeClientContextSink.#ctor">
            <summary>Инициализирует новый экземпляр type StubIContributeClientContextSink</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Contexts.Fakes.StubIContributeClientContextSink.GetClientContextSinkIMessageSink">
            <summary>Задает stub IContributeClientContextSink.GetClientContextSink(IMessageSink nextSink)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Contexts.Fakes.StubIContributeClientContextSink.global::System#Runtime#Remoting#Contexts#IContributeClientContextSink#GetClientContextSink(System.Runtime.Remoting.Messaging.IMessageSink)">
            <summary>Задает заглушка IContributeClientContextSink.GetClientContextSink(IMessageSink nextSink)</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Contexts.Fakes.StubIContributeDynamicSink">
            <summary>Тип заглушки System.Runtime.Remoting.Contexts.IContributeDynamicSink</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Contexts.Fakes.StubIContributeDynamicSink.#ctor">
            <summary>Инициализирует новый экземпляр type StubIContributeDynamicSink</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Contexts.Fakes.StubIContributeDynamicSink.GetDynamicSink">
            <summary>Задает stub IContributeDynamicSink.GetDynamicSink()</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Contexts.Fakes.StubIContributeDynamicSink.global::System#Runtime#Remoting#Contexts#IContributeDynamicSink#GetDynamicSink">
            <summary>Задает заглушка IContributeDynamicSink.GetDynamicSink()</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Contexts.Fakes.StubIContributeEnvoySink">
            <summary>Тип заглушки System.Runtime.Remoting.Contexts.IContributeEnvoySink</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Contexts.Fakes.StubIContributeEnvoySink.#ctor">
            <summary>Инициализирует новый экземпляр type StubIContributeEnvoySink</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Contexts.Fakes.StubIContributeEnvoySink.GetEnvoySinkMarshalByRefObjectIMessageSink">
            <summary>Задает stub IContributeEnvoySink.GetEnvoySink(MarshalByRefObject obj, IMessageSink nextSink)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Contexts.Fakes.StubIContributeEnvoySink.global::System#Runtime#Remoting#Contexts#IContributeEnvoySink#GetEnvoySink(System.MarshalByRefObject,System.Runtime.Remoting.Messaging.IMessageSink)">
            <summary>Задает заглушка IContributeEnvoySink.GetEnvoySink(MarshalByRefObject obj, IMessageSink nextSink)</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Contexts.Fakes.StubIContributeObjectSink">
            <summary>Тип заглушки System.Runtime.Remoting.Contexts.IContributeObjectSink</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Contexts.Fakes.StubIContributeObjectSink.#ctor">
            <summary>Инициализирует новый экземпляр type StubIContributeObjectSink</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Contexts.Fakes.StubIContributeObjectSink.GetObjectSinkMarshalByRefObjectIMessageSink">
            <summary>Задает stub IContributeObjectSink.GetObjectSink(MarshalByRefObject obj, IMessageSink nextSink)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Contexts.Fakes.StubIContributeObjectSink.global::System#Runtime#Remoting#Contexts#IContributeObjectSink#GetObjectSink(System.MarshalByRefObject,System.Runtime.Remoting.Messaging.IMessageSink)">
            <summary>Задает заглушка IContributeObjectSink.GetObjectSink(MarshalByRefObject obj, IMessageSink nextSink)</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Contexts.Fakes.StubIContributeServerContextSink">
            <summary>Тип заглушки System.Runtime.Remoting.Contexts.IContributeServerContextSink</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Contexts.Fakes.StubIContributeServerContextSink.#ctor">
            <summary>Инициализирует новый экземпляр type StubIContributeServerContextSink</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Contexts.Fakes.StubIContributeServerContextSink.GetServerContextSinkIMessageSink">
            <summary>Задает stub IContributeServerContextSink.GetServerContextSink(IMessageSink nextSink)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Contexts.Fakes.StubIContributeServerContextSink.global::System#Runtime#Remoting#Contexts#IContributeServerContextSink#GetServerContextSink(System.Runtime.Remoting.Messaging.IMessageSink)">
            <summary>Задает заглушка IContributeServerContextSink.GetServerContextSink(IMessageSink nextSink)</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Contexts.Fakes.StubIDynamicMessageSink">
            <summary>Тип заглушки System.Runtime.Remoting.Contexts.IDynamicMessageSink</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Contexts.Fakes.StubIDynamicMessageSink.#ctor">
            <summary>Инициализирует новый экземпляр type StubIDynamicMessageSink</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Contexts.Fakes.StubIDynamicMessageSink.ProcessMessageFinishIMessageBooleanBoolean">
            <summary>Задает stub IDynamicMessageSink.ProcessMessageFinish(IMessage replyMsg, Boolean bCliSide, Boolean bAsync)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Contexts.Fakes.StubIDynamicMessageSink.ProcessMessageStartIMessageBooleanBoolean">
            <summary>Задает stub IDynamicMessageSink.ProcessMessageStart(IMessage reqMsg, Boolean bCliSide, Boolean bAsync)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Contexts.Fakes.StubIDynamicMessageSink.global::System#Runtime#Remoting#Contexts#IDynamicMessageSink#ProcessMessageFinish(System.Runtime.Remoting.Messaging.IMessage,System.Boolean,System.Boolean)">
            <summary>Задает заглушка IDynamicMessageSink.ProcessMessageFinish(IMessage replyMsg, Boolean bCliSide, Boolean bAsync)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Contexts.Fakes.StubIDynamicMessageSink.global::System#Runtime#Remoting#Contexts#IDynamicMessageSink#ProcessMessageStart(System.Runtime.Remoting.Messaging.IMessage,System.Boolean,System.Boolean)">
            <summary>Задает заглушка IDynamicMessageSink.ProcessMessageStart(IMessage reqMsg, Boolean bCliSide, Boolean bAsync)</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Contexts.Fakes.StubIDynamicProperty">
            <summary>Тип заглушки System.Runtime.Remoting.Contexts.IDynamicProperty</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Contexts.Fakes.StubIDynamicProperty.#ctor">
            <summary>Инициализирует новый экземпляр type StubIDynamicProperty</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Contexts.Fakes.StubIDynamicProperty.NameGet">
            <summary>Задает stub IDynamicProperty.get_Name()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Contexts.Fakes.StubIDynamicProperty.global::System#Runtime#Remoting#Contexts#IDynamicProperty#Name">
            <summary>Задает stub IDynamicProperty.get_Name()</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Contexts.Fakes.StubSynchronizationAttribute">
            <summary>Тип заглушки System.Runtime.Remoting.Contexts.SynchronizationAttribute</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Contexts.Fakes.StubSynchronizationAttribute.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Contexts.Fakes.StubSynchronizationAttribute.#ctor(System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Contexts.Fakes.StubSynchronizationAttribute.#ctor(System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Contexts.Fakes.StubSynchronizationAttribute.#ctor(System.Int32,System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Contexts.Fakes.StubSynchronizationAttribute.AttachBackingFieldToLocked">
            <summary>Присоединение делегатов для эмуляции StubSynchronizationAttribute.Locked как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Contexts.Fakes.StubSynchronizationAttribute.Equals(System.Object)">
            <summary>Задает заглушка ContextAttribute.Equals(Object o)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Contexts.Fakes.StubSynchronizationAttribute.EqualsObject">
            <summary>Задает stub ContextAttribute.Equals(Object o)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Contexts.Fakes.StubSynchronizationAttribute.Freeze(System.Runtime.Remoting.Contexts.Context)">
            <summary>Задает заглушка ContextAttribute.Freeze(Context newContext)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Contexts.Fakes.StubSynchronizationAttribute.FreezeContext">
            <summary>Задает stub ContextAttribute.Freeze(Context newContext)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Contexts.Fakes.StubSynchronizationAttribute.GetClientContextSink(System.Runtime.Remoting.Messaging.IMessageSink)">
            <summary>Задает заглушка SynchronizationAttribute.GetClientContextSink(IMessageSink nextSink)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Contexts.Fakes.StubSynchronizationAttribute.GetClientContextSinkIMessageSink">
            <summary>Задает stub SynchronizationAttribute.GetClientContextSink(IMessageSink nextSink)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Contexts.Fakes.StubSynchronizationAttribute.GetHashCode">
            <summary>Задает заглушка ContextAttribute.GetHashCode()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Contexts.Fakes.StubSynchronizationAttribute.GetHashCode01">
            <summary>Задает stub ContextAttribute.GetHashCode()</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Contexts.Fakes.StubSynchronizationAttribute.GetPropertiesForNewContext(System.Runtime.Remoting.Activation.IConstructionCallMessage)">
            <summary>Задает заглушка SynchronizationAttribute.GetPropertiesForNewContext(IConstructionCallMessage ctorMsg)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Contexts.Fakes.StubSynchronizationAttribute.GetPropertiesForNewContextIConstructionCallMessage">
            <summary>Задает stub SynchronizationAttribute.GetPropertiesForNewContext(IConstructionCallMessage ctorMsg)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Contexts.Fakes.StubSynchronizationAttribute.GetServerContextSink(System.Runtime.Remoting.Messaging.IMessageSink)">
            <summary>Задает заглушка SynchronizationAttribute.GetServerContextSink(IMessageSink nextSink)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Contexts.Fakes.StubSynchronizationAttribute.GetServerContextSinkIMessageSink">
            <summary>Задает stub SynchronizationAttribute.GetServerContextSink(IMessageSink nextSink)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Contexts.Fakes.StubSynchronizationAttribute.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubSynchronizationAttribute</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Contexts.Fakes.StubSynchronizationAttribute.IsContextOK(System.Runtime.Remoting.Contexts.Context,System.Runtime.Remoting.Activation.IConstructionCallMessage)">
            <summary>Задает заглушка SynchronizationAttribute.IsContextOK(Context ctx, IConstructionCallMessage msg)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Contexts.Fakes.StubSynchronizationAttribute.IsContextOKContextIConstructionCallMessage">
            <summary>Задает stub SynchronizationAttribute.IsContextOK(Context ctx, IConstructionCallMessage msg)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Contexts.Fakes.StubSynchronizationAttribute.IsDefaultAttribute">
            <summary>Задает заглушка Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Contexts.Fakes.StubSynchronizationAttribute.IsDefaultAttribute01">
            <summary>Задает stub Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Contexts.Fakes.StubSynchronizationAttribute.IsNewContextOK(System.Runtime.Remoting.Contexts.Context)">
            <summary>Задает заглушка ContextAttribute.IsNewContextOK(Context newCtx)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Contexts.Fakes.StubSynchronizationAttribute.IsNewContextOKContext">
            <summary>Задает stub ContextAttribute.IsNewContextOK(Context newCtx)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Contexts.Fakes.StubSynchronizationAttribute.IsReEntrantGet">
            <summary>Задает stub SynchronizationAttribute.get_IsReEntrant()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Contexts.Fakes.StubSynchronizationAttribute.LockedGet">
            <summary>Задает stub SynchronizationAttribute.get_Locked()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Contexts.Fakes.StubSynchronizationAttribute.LockedSetBoolean">
            <summary>Задает stub SynchronizationAttribute.set_Locked(Boolean value)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Contexts.Fakes.StubSynchronizationAttribute.Match(System.Object)">
            <summary>Задает заглушка Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Contexts.Fakes.StubSynchronizationAttribute.MatchObject">
            <summary>Задает stub Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Contexts.Fakes.StubSynchronizationAttribute.NameGet">
            <summary>Задает stub ContextAttribute.get_Name()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Contexts.Fakes.StubSynchronizationAttribute.TypeIdGet">
            <summary>Задает stub Attribute.get_TypeId()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Contexts.Fakes.StubSynchronizationAttribute.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Contexts.Fakes.StubSynchronizationAttribute.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Contexts.Fakes.StubSynchronizationAttribute.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Contexts.Fakes.StubSynchronizationAttribute.IsReEntrant">
            <summary>Задает stub SynchronizationAttribute.get_IsReEntrant()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Contexts.Fakes.StubSynchronizationAttribute.Locked">
            <summary>Задает stub SynchronizationAttribute.get_Locked()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Contexts.Fakes.StubSynchronizationAttribute.Name">
            <summary>Задает stub ContextAttribute.get_Name()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Contexts.Fakes.StubSynchronizationAttribute.TypeId">
            <summary>Задает stub Attribute.get_TypeId()</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Fakes.StubActivatedClientTypeEntry">
            <summary>Тип заглушки System.Runtime.Remoting.ActivatedClientTypeEntry</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Fakes.StubActivatedClientTypeEntry.#ctor(System.Type,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Fakes.StubActivatedClientTypeEntry.#ctor(System.String,System.String,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Fakes.StubActivatedClientTypeEntry.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubActivatedClientTypeEntry</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Fakes.StubActivatedClientTypeEntry.ToString">
            <summary>Задает заглушка ActivatedClientTypeEntry.ToString()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Fakes.StubActivatedClientTypeEntry.ToString01">
            <summary>Задает stub ActivatedClientTypeEntry.ToString()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Fakes.StubActivatedClientTypeEntry.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Fakes.StubActivatedClientTypeEntry.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Fakes.StubActivatedClientTypeEntry.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Fakes.StubActivatedServiceTypeEntry">
            <summary>Тип заглушки System.Runtime.Remoting.ActivatedServiceTypeEntry</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Fakes.StubActivatedServiceTypeEntry.#ctor(System.Type)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Fakes.StubActivatedServiceTypeEntry.#ctor(System.String,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Fakes.StubActivatedServiceTypeEntry.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubActivatedServiceTypeEntry</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Fakes.StubActivatedServiceTypeEntry.ToString">
            <summary>Задает заглушка ActivatedServiceTypeEntry.ToString()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Fakes.StubActivatedServiceTypeEntry.ToString01">
            <summary>Задает stub ActivatedServiceTypeEntry.ToString()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Fakes.StubActivatedServiceTypeEntry.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Fakes.StubActivatedServiceTypeEntry.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Fakes.StubActivatedServiceTypeEntry.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Fakes.StubIChannelInfo">
            <summary>Тип заглушки System.Runtime.Remoting.IChannelInfo</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Fakes.StubIChannelInfo.#ctor">
            <summary>Инициализирует новый экземпляр type StubIChannelInfo</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Fakes.StubIChannelInfo.AttachBackingFieldToChannelData">
            <summary>Присоединение делегатов для эмуляции StubIChannelInfo.ChannelData как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Fakes.StubIChannelInfo.ChannelDataGet">
            <summary>Задает stub IChannelInfo.get_ChannelData()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Fakes.StubIChannelInfo.ChannelDataSetObjectArray">
            <summary>Задает stub IChannelInfo.set_ChannelData(Object[] value)</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Fakes.StubIChannelInfo.global::System#Runtime#Remoting#IChannelInfo#ChannelData">
            <summary>Задает stub IChannelInfo.get_ChannelData()</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Fakes.StubIEnvoyInfo">
            <summary>Тип заглушки System.Runtime.Remoting.IEnvoyInfo</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Fakes.StubIEnvoyInfo.#ctor">
            <summary>Инициализирует новый экземпляр type StubIEnvoyInfo</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Fakes.StubIEnvoyInfo.AttachBackingFieldToEnvoySinks">
            <summary>Присоединение делегатов для эмуляции StubIEnvoyInfo.EnvoySinks как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Fakes.StubIEnvoyInfo.EnvoySinksGet">
            <summary>Задает stub IEnvoyInfo.get_EnvoySinks()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Fakes.StubIEnvoyInfo.EnvoySinksSetIMessageSink">
            <summary>Задает stub IEnvoyInfo.set_EnvoySinks(IMessageSink value)</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Fakes.StubIEnvoyInfo.global::System#Runtime#Remoting#IEnvoyInfo#EnvoySinks">
            <summary>Задает stub IEnvoyInfo.get_EnvoySinks()</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Fakes.StubIObjectHandle">
            <summary>Тип заглушки System.Runtime.Remoting.IObjectHandle</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Fakes.StubIObjectHandle.#ctor">
            <summary>Инициализирует новый экземпляр type StubIObjectHandle</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Fakes.StubIObjectHandle.global::System#Runtime#Remoting#IObjectHandle#Unwrap">
            <summary>Задает заглушка IObjectHandle.Unwrap()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Fakes.StubIObjectHandle.Unwrap">
            <summary>Задает stub IObjectHandle.Unwrap()</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Fakes.StubIRemotingTypeInfo">
            <summary>Тип заглушки System.Runtime.Remoting.IRemotingTypeInfo</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Fakes.StubIRemotingTypeInfo.#ctor">
            <summary>Инициализирует новый экземпляр type StubIRemotingTypeInfo</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Fakes.StubIRemotingTypeInfo.AttachBackingFieldToTypeName">
            <summary>Присоединение делегатов для эмуляции StubIRemotingTypeInfo.TypeName как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Fakes.StubIRemotingTypeInfo.CanCastToTypeObject">
            <summary>Задает stub IRemotingTypeInfo.CanCastTo(Type fromType, Object o)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Fakes.StubIRemotingTypeInfo.global::System#Runtime#Remoting#IRemotingTypeInfo#CanCastTo(System.Type,System.Object)">
            <summary>Задает заглушка IRemotingTypeInfo.CanCastTo(Type fromType, Object o)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Fakes.StubIRemotingTypeInfo.TypeNameGet">
            <summary>Задает stub IRemotingTypeInfo.get_TypeName()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Fakes.StubIRemotingTypeInfo.TypeNameSetString">
            <summary>Задает stub IRemotingTypeInfo.set_TypeName(String value)</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Fakes.StubIRemotingTypeInfo.global::System#Runtime#Remoting#IRemotingTypeInfo#TypeName">
            <summary>Задает stub IRemotingTypeInfo.get_TypeName()</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Fakes.StubInternalRemotingServices">
            <summary>Тип заглушки System.Runtime.Remoting.InternalRemotingServices</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Fakes.StubInternalRemotingServices.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Fakes.StubInternalRemotingServices.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubInternalRemotingServices</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Fakes.StubInternalRemotingServices.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Fakes.StubInternalRemotingServices.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Fakes.StubInternalRemotingServices.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Fakes.StubObjRef">
            <summary>Тип заглушки System.Runtime.Remoting.ObjRef</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Fakes.StubObjRef.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Fakes.StubObjRef.#ctor(System.MarshalByRefObject,System.Type)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Fakes.StubObjRef.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Fakes.StubObjRef.AttachBackingFieldToChannelInfo">
            <summary>Присоединение делегатов для эмуляции StubObjRef.ChannelInfo как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Fakes.StubObjRef.AttachBackingFieldToEnvoyInfo">
            <summary>Присоединение делегатов для эмуляции StubObjRef.EnvoyInfo как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Fakes.StubObjRef.AttachBackingFieldToTypeInfo">
            <summary>Присоединение делегатов для эмуляции StubObjRef.TypeInfo как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Fakes.StubObjRef.AttachBackingFieldToURI">
            <summary>Присоединение делегатов для эмуляции StubObjRef.URI как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Fakes.StubObjRef.ChannelInfoGet">
            <summary>Задает stub ObjRef.get_ChannelInfo()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Fakes.StubObjRef.ChannelInfoSetIChannelInfo">
            <summary>Задает stub ObjRef.set_ChannelInfo(IChannelInfo value)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Fakes.StubObjRef.EnvoyInfoGet">
            <summary>Задает stub ObjRef.get_EnvoyInfo()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Fakes.StubObjRef.EnvoyInfoSetIEnvoyInfo">
            <summary>Задает stub ObjRef.set_EnvoyInfo(IEnvoyInfo value)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Fakes.StubObjRef.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка ObjRef.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Fakes.StubObjRef.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub ObjRef.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Fakes.StubObjRef.GetRealObject(System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка ObjRef.GetRealObject(StreamingContext context)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Fakes.StubObjRef.GetRealObjectStreamingContext">
            <summary>Задает stub ObjRef.GetRealObject(StreamingContext context)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Fakes.StubObjRef.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubObjRef</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Fakes.StubObjRef.TypeInfoGet">
            <summary>Задает stub ObjRef.get_TypeInfo()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Fakes.StubObjRef.TypeInfoSetIRemotingTypeInfo">
            <summary>Задает stub ObjRef.set_TypeInfo(IRemotingTypeInfo value)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Fakes.StubObjRef.URIGet">
            <summary>Задает stub ObjRef.get_URI()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Fakes.StubObjRef.URISetString">
            <summary>Задает stub ObjRef.set_URI(String value)</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Fakes.StubObjRef.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Fakes.StubObjRef.ChannelInfo">
            <summary>Задает stub ObjRef.get_ChannelInfo()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Fakes.StubObjRef.EnvoyInfo">
            <summary>Задает stub ObjRef.get_EnvoyInfo()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Fakes.StubObjRef.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Fakes.StubObjRef.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Fakes.StubObjRef.TypeInfo">
            <summary>Задает stub ObjRef.get_TypeInfo()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Fakes.StubObjRef.URI">
            <summary>Задает stub ObjRef.get_URI()</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Fakes.StubObjectHandle">
            <summary>Тип заглушки System.Runtime.Remoting.ObjectHandle</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Fakes.StubObjectHandle.#ctor(System.Object)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Fakes.StubObjectHandle.InitializeLifetimeService">
            <summary>Задает заглушка ObjectHandle.InitializeLifetimeService()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Fakes.StubObjectHandle.InitializeLifetimeService01">
            <summary>Задает stub ObjectHandle.InitializeLifetimeService()</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Fakes.StubObjectHandle.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubObjectHandle</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Fakes.StubObjectHandle.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Fakes.StubObjectHandle.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Fakes.StubObjectHandle.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Fakes.StubRemotingException">
            <summary>Тип заглушки System.Runtime.Remoting.RemotingException</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Fakes.StubRemotingException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Fakes.StubRemotingException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Fakes.StubRemotingException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Fakes.StubRemotingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Fakes.StubRemotingException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubRemotingException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Fakes.StubRemotingException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubRemotingException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Fakes.StubRemotingException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Fakes.StubRemotingException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Fakes.StubRemotingException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Fakes.StubRemotingException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Fakes.StubRemotingException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Fakes.StubRemotingException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Fakes.StubRemotingException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Fakes.StubRemotingException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubRemotingException</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Fakes.StubRemotingException.MessageGet">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Fakes.StubRemotingException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Fakes.StubRemotingException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Fakes.StubRemotingException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Fakes.StubRemotingException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Fakes.StubRemotingException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Fakes.StubRemotingException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Fakes.StubRemotingException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Fakes.StubRemotingException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Fakes.StubRemotingException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Fakes.StubRemotingException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Fakes.StubRemotingException.Message">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Fakes.StubRemotingException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Fakes.StubRemotingException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Fakes.StubRemotingTimeoutException">
            <summary>Тип заглушки System.Runtime.Remoting.RemotingTimeoutException</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Fakes.StubRemotingTimeoutException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Fakes.StubRemotingTimeoutException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Fakes.StubRemotingTimeoutException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Fakes.StubRemotingTimeoutException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubRemotingTimeoutException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Fakes.StubRemotingTimeoutException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubRemotingTimeoutException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Fakes.StubRemotingTimeoutException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Fakes.StubRemotingTimeoutException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Fakes.StubRemotingTimeoutException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Fakes.StubRemotingTimeoutException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Fakes.StubRemotingTimeoutException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Fakes.StubRemotingTimeoutException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Fakes.StubRemotingTimeoutException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Fakes.StubRemotingTimeoutException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubRemotingTimeoutException</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Fakes.StubRemotingTimeoutException.MessageGet">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Fakes.StubRemotingTimeoutException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Fakes.StubRemotingTimeoutException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Fakes.StubRemotingTimeoutException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Fakes.StubRemotingTimeoutException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Fakes.StubRemotingTimeoutException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Fakes.StubRemotingTimeoutException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Fakes.StubRemotingTimeoutException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Fakes.StubRemotingTimeoutException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Fakes.StubRemotingTimeoutException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Fakes.StubRemotingTimeoutException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Fakes.StubRemotingTimeoutException.Message">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Fakes.StubRemotingTimeoutException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Fakes.StubRemotingTimeoutException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Fakes.StubServerException">
            <summary>Тип заглушки System.Runtime.Remoting.ServerException</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Fakes.StubServerException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Fakes.StubServerException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Fakes.StubServerException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Fakes.StubServerException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubServerException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Fakes.StubServerException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubServerException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Fakes.StubServerException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Fakes.StubServerException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Fakes.StubServerException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Fakes.StubServerException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Fakes.StubServerException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Fakes.StubServerException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Fakes.StubServerException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Fakes.StubServerException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubServerException</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Fakes.StubServerException.MessageGet">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Fakes.StubServerException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Fakes.StubServerException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Fakes.StubServerException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Fakes.StubServerException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Fakes.StubServerException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Fakes.StubServerException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Fakes.StubServerException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Fakes.StubServerException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Fakes.StubServerException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Fakes.StubServerException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Fakes.StubServerException.Message">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Fakes.StubServerException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Fakes.StubServerException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Fakes.StubTypeEntry">
            <summary>Тип заглушки System.Runtime.Remoting.TypeEntry</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Fakes.StubTypeEntry.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Fakes.StubTypeEntry.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubTypeEntry</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Fakes.StubTypeEntry.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Fakes.StubTypeEntry.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Fakes.StubTypeEntry.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Fakes.StubWellKnownClientTypeEntry">
            <summary>Тип заглушки System.Runtime.Remoting.WellKnownClientTypeEntry</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Fakes.StubWellKnownClientTypeEntry.#ctor(System.Type,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Fakes.StubWellKnownClientTypeEntry.#ctor(System.String,System.String,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Fakes.StubWellKnownClientTypeEntry.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubWellKnownClientTypeEntry</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Fakes.StubWellKnownClientTypeEntry.ToString">
            <summary>Задает заглушка WellKnownClientTypeEntry.ToString()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Fakes.StubWellKnownClientTypeEntry.ToString01">
            <summary>Задает stub WellKnownClientTypeEntry.ToString()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Fakes.StubWellKnownClientTypeEntry.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Fakes.StubWellKnownClientTypeEntry.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Fakes.StubWellKnownClientTypeEntry.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Fakes.StubWellKnownServiceTypeEntry">
            <summary>Тип заглушки System.Runtime.Remoting.WellKnownServiceTypeEntry</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Fakes.StubWellKnownServiceTypeEntry.#ctor(System.Type,System.String,System.Runtime.Remoting.WellKnownObjectMode)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Fakes.StubWellKnownServiceTypeEntry.#ctor(System.String,System.String,System.String,System.Runtime.Remoting.WellKnownObjectMode)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Fakes.StubWellKnownServiceTypeEntry.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubWellKnownServiceTypeEntry</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Fakes.StubWellKnownServiceTypeEntry.ToString">
            <summary>Задает заглушка WellKnownServiceTypeEntry.ToString()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Fakes.StubWellKnownServiceTypeEntry.ToString01">
            <summary>Задает stub WellKnownServiceTypeEntry.ToString()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Fakes.StubWellKnownServiceTypeEntry.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Fakes.StubWellKnownServiceTypeEntry.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Fakes.StubWellKnownServiceTypeEntry.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Lifetime.Fakes.StubClientSponsor">
            <summary>Тип заглушки System.Runtime.Remoting.Lifetime.ClientSponsor</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Lifetime.Fakes.StubClientSponsor.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Lifetime.Fakes.StubClientSponsor.#ctor(System.TimeSpan)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Lifetime.Fakes.StubClientSponsor.InitializeLifetimeService">
            <summary>Задает заглушка ClientSponsor.InitializeLifetimeService()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Lifetime.Fakes.StubClientSponsor.InitializeLifetimeService01">
            <summary>Задает stub ClientSponsor.InitializeLifetimeService()</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Lifetime.Fakes.StubClientSponsor.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubClientSponsor</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Lifetime.Fakes.StubClientSponsor.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Lifetime.Fakes.StubClientSponsor.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Lifetime.Fakes.StubClientSponsor.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Lifetime.Fakes.StubILease">
            <summary>Тип заглушки System.Runtime.Remoting.Lifetime.ILease</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Lifetime.Fakes.StubILease.#ctor">
            <summary>Инициализирует новый экземпляр type StubILease</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Lifetime.Fakes.StubILease.AttachBackingFieldToInitialLeaseTime">
            <summary>Присоединение делегатов для эмуляции StubILease.InitialLeaseTime как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Lifetime.Fakes.StubILease.AttachBackingFieldToRenewOnCallTime">
            <summary>Присоединение делегатов для эмуляции StubILease.RenewOnCallTime как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Lifetime.Fakes.StubILease.AttachBackingFieldToSponsorshipTimeout">
            <summary>Присоединение делегатов для эмуляции StubILease.SponsorshipTimeout как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Lifetime.Fakes.StubILease.CurrentLeaseTimeGet">
            <summary>Задает stub ILease.get_CurrentLeaseTime()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Lifetime.Fakes.StubILease.CurrentStateGet">
            <summary>Задает stub ILease.get_CurrentState()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Lifetime.Fakes.StubILease.InitialLeaseTimeGet">
            <summary>Задает stub ILease.get_InitialLeaseTime()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Lifetime.Fakes.StubILease.InitialLeaseTimeSetTimeSpan">
            <summary>Задает stub ILease.set_InitialLeaseTime(TimeSpan value)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Lifetime.Fakes.StubILease.RegisterISponsor">
            <summary>Задает stub ILease.Register(ISponsor obj)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Lifetime.Fakes.StubILease.RegisterISponsorTimeSpan">
            <summary>Задает stub ILease.Register(ISponsor obj, TimeSpan renewalTime)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Lifetime.Fakes.StubILease.RenewOnCallTimeGet">
            <summary>Задает stub ILease.get_RenewOnCallTime()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Lifetime.Fakes.StubILease.RenewOnCallTimeSetTimeSpan">
            <summary>Задает stub ILease.set_RenewOnCallTime(TimeSpan value)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Lifetime.Fakes.StubILease.RenewTimeSpan">
            <summary>Задает stub ILease.Renew(TimeSpan renewalTime)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Lifetime.Fakes.StubILease.SponsorshipTimeoutGet">
            <summary>Задает stub ILease.get_SponsorshipTimeout()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Lifetime.Fakes.StubILease.SponsorshipTimeoutSetTimeSpan">
            <summary>Задает stub ILease.set_SponsorshipTimeout(TimeSpan value)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Lifetime.Fakes.StubILease.global::System#Runtime#Remoting#Lifetime#ILease#Register(System.Runtime.Remoting.Lifetime.ISponsor)">
            <summary>Задает заглушка ILease.Register(ISponsor obj)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Lifetime.Fakes.StubILease.global::System#Runtime#Remoting#Lifetime#ILease#Register(System.Runtime.Remoting.Lifetime.ISponsor,System.TimeSpan)">
            <summary>Задает заглушка ILease.Register(ISponsor obj, TimeSpan renewalTime)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Lifetime.Fakes.StubILease.global::System#Runtime#Remoting#Lifetime#ILease#Renew(System.TimeSpan)">
            <summary>Задает заглушка ILease.Renew(TimeSpan renewalTime)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Lifetime.Fakes.StubILease.global::System#Runtime#Remoting#Lifetime#ILease#Unregister(System.Runtime.Remoting.Lifetime.ISponsor)">
            <summary>Задает заглушка ILease.Unregister(ISponsor obj)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Lifetime.Fakes.StubILease.UnregisterISponsor">
            <summary>Задает stub ILease.Unregister(ISponsor obj)</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Lifetime.Fakes.StubILease.global::System#Runtime#Remoting#Lifetime#ILease#CurrentLeaseTime">
            <summary>Задает stub ILease.get_CurrentLeaseTime()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Lifetime.Fakes.StubILease.global::System#Runtime#Remoting#Lifetime#ILease#CurrentState">
            <summary>Задает stub ILease.get_CurrentState()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Lifetime.Fakes.StubILease.global::System#Runtime#Remoting#Lifetime#ILease#InitialLeaseTime">
            <summary>Задает stub ILease.get_InitialLeaseTime()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Lifetime.Fakes.StubILease.global::System#Runtime#Remoting#Lifetime#ILease#RenewOnCallTime">
            <summary>Задает stub ILease.get_RenewOnCallTime()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Lifetime.Fakes.StubILease.global::System#Runtime#Remoting#Lifetime#ILease#SponsorshipTimeout">
            <summary>Задает stub ILease.get_SponsorshipTimeout()</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Lifetime.Fakes.StubISponsor">
            <summary>Тип заглушки System.Runtime.Remoting.Lifetime.ISponsor</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Lifetime.Fakes.StubISponsor.#ctor">
            <summary>Инициализирует новый экземпляр type StubISponsor</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Lifetime.Fakes.StubISponsor.RenewalILease">
            <summary>Задает stub ISponsor.Renewal(ILease lease)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Lifetime.Fakes.StubISponsor.global::System#Runtime#Remoting#Lifetime#ISponsor#Renewal(System.Runtime.Remoting.Lifetime.ILease)">
            <summary>Задает заглушка ISponsor.Renewal(ILease lease)</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Messaging.Fakes.StubConstructionCall">
            <summary>Тип заглушки System.Runtime.Remoting.Messaging.ConstructionCall</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Messaging.Fakes.StubConstructionCall.#ctor(System.Runtime.Remoting.Messaging.Header[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Messaging.Fakes.StubConstructionCall.#ctor(System.Runtime.Remoting.Messaging.IMessage)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Messaging.Fakes.StubConstructionCall.HeaderHandler(System.Runtime.Remoting.Messaging.Header[])">
            <summary>Задает заглушка MethodCall.HeaderHandler(Header[] h)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubConstructionCall.HeaderHandlerHeaderArray">
            <summary>Задает stub MethodCall.HeaderHandler(Header[] h)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Messaging.Fakes.StubConstructionCall.Init">
            <summary>Задает заглушка MethodCall.Init()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubConstructionCall.Init01">
            <summary>Задает stub MethodCall.Init()</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Messaging.Fakes.StubConstructionCall.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubConstructionCall</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubConstructionCall.PropertiesGet">
            <summary>Задает stub ConstructionCall.get_Properties()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubConstructionCall.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubConstructionCall.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubConstructionCall.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubConstructionCall.Properties">
            <summary>Задает stub ConstructionCall.get_Properties()</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Messaging.Fakes.StubConstructionResponse">
            <summary>Тип заглушки System.Runtime.Remoting.Messaging.ConstructionResponse</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Messaging.Fakes.StubConstructionResponse.#ctor(System.Runtime.Remoting.Messaging.Header[],System.Runtime.Remoting.Messaging.IMethodCallMessage)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Messaging.Fakes.StubConstructionResponse.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка MethodResponse.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubConstructionResponse.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub MethodResponse.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Messaging.Fakes.StubConstructionResponse.HeaderHandler(System.Runtime.Remoting.Messaging.Header[])">
            <summary>Задает заглушка MethodResponse.HeaderHandler(Header[] h)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubConstructionResponse.HeaderHandlerHeaderArray">
            <summary>Задает stub MethodResponse.HeaderHandler(Header[] h)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Messaging.Fakes.StubConstructionResponse.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubConstructionResponse</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubConstructionResponse.PropertiesGet">
            <summary>Задает stub ConstructionResponse.get_Properties()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubConstructionResponse.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubConstructionResponse.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubConstructionResponse.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubConstructionResponse.Properties">
            <summary>Задает stub ConstructionResponse.get_Properties()</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Messaging.Fakes.StubHeader">
            <summary>Тип заглушки System.Runtime.Remoting.Messaging.Header</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Messaging.Fakes.StubHeader.#ctor(System.String,System.Object)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Messaging.Fakes.StubHeader.#ctor(System.String,System.Object,System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Messaging.Fakes.StubHeader.#ctor(System.String,System.Object,System.Boolean,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Messaging.Fakes.StubHeader.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubHeader</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubHeader.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubHeader.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubHeader.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Messaging.Fakes.StubILogicalThreadAffinative">
            <summary>Тип заглушки System.Runtime.Remoting.Messaging.ILogicalThreadAffinative</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Messaging.Fakes.StubILogicalThreadAffinative.#ctor">
            <summary>Инициализирует новый экземпляр type StubILogicalThreadAffinative</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Messaging.Fakes.StubIMessage">
            <summary>Тип заглушки System.Runtime.Remoting.Messaging.IMessage</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Messaging.Fakes.StubIMessage.#ctor">
            <summary>Инициализирует новый экземпляр type StubIMessage</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubIMessage.PropertiesGet">
            <summary>Задает stub IMessage.get_Properties()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubIMessage.global::System#Runtime#Remoting#Messaging#IMessage#Properties">
            <summary>Задает stub IMessage.get_Properties()</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Messaging.Fakes.StubIMessageCtrl">
            <summary>Тип заглушки System.Runtime.Remoting.Messaging.IMessageCtrl</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Messaging.Fakes.StubIMessageCtrl.#ctor">
            <summary>Инициализирует новый экземпляр type StubIMessageCtrl</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubIMessageCtrl.CancelInt32">
            <summary>Задает stub IMessageCtrl.Cancel(Int32 msToCancel)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Messaging.Fakes.StubIMessageCtrl.global::System#Runtime#Remoting#Messaging#IMessageCtrl#Cancel(System.Int32)">
            <summary>Задает заглушка IMessageCtrl.Cancel(Int32 msToCancel)</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Messaging.Fakes.StubIMessageSink">
            <summary>Тип заглушки System.Runtime.Remoting.Messaging.IMessageSink</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Messaging.Fakes.StubIMessageSink.#ctor">
            <summary>Инициализирует новый экземпляр type StubIMessageSink</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubIMessageSink.AsyncProcessMessageIMessageIMessageSink">
            <summary>Задает stub IMessageSink.AsyncProcessMessage(IMessage msg, IMessageSink replySink)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubIMessageSink.NextSinkGet">
            <summary>Задает stub IMessageSink.get_NextSink()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubIMessageSink.SyncProcessMessageIMessage">
            <summary>Задает stub IMessageSink.SyncProcessMessage(IMessage msg)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Messaging.Fakes.StubIMessageSink.global::System#Runtime#Remoting#Messaging#IMessageSink#AsyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Messaging.IMessageSink)">
            <summary>Задает заглушка IMessageSink.AsyncProcessMessage(IMessage msg, IMessageSink replySink)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Messaging.Fakes.StubIMessageSink.global::System#Runtime#Remoting#Messaging#IMessageSink#SyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage)">
            <summary>Задает заглушка IMessageSink.SyncProcessMessage(IMessage msg)</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubIMessageSink.global::System#Runtime#Remoting#Messaging#IMessageSink#NextSink">
            <summary>Задает stub IMessageSink.get_NextSink()</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Messaging.Fakes.StubIMethodCallMessage">
            <summary>Тип заглушки System.Runtime.Remoting.Messaging.IMethodCallMessage</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Messaging.Fakes.StubIMethodCallMessage.#ctor">
            <summary>Инициализирует новый экземпляр type StubIMethodCallMessage</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubIMethodCallMessage.ArgCountGet">
            <summary>Задает stub IMethodMessage.get_ArgCount()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubIMethodCallMessage.ArgsGet">
            <summary>Задает stub IMethodMessage.get_Args()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubIMethodCallMessage.GetArgInt32">
            <summary>Задает stub IMethodMessage.GetArg(Int32 argNum)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubIMethodCallMessage.GetArgNameInt32">
            <summary>Задает stub IMethodMessage.GetArgName(Int32 index)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubIMethodCallMessage.GetInArgInt32">
            <summary>Задает stub IMethodCallMessage.GetInArg(Int32 argNum)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubIMethodCallMessage.GetInArgNameInt32">
            <summary>Задает stub IMethodCallMessage.GetInArgName(Int32 index)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubIMethodCallMessage.HasVarArgsGet">
            <summary>Задает stub IMethodMessage.get_HasVarArgs()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubIMethodCallMessage.InArgCountGet">
            <summary>Задает stub IMethodCallMessage.get_InArgCount()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubIMethodCallMessage.InArgsGet">
            <summary>Задает stub IMethodCallMessage.get_InArgs()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubIMethodCallMessage.LogicalCallContextGet">
            <summary>Задает stub IMethodMessage.get_LogicalCallContext()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubIMethodCallMessage.MethodBaseGet">
            <summary>Задает stub IMethodMessage.get_MethodBase()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubIMethodCallMessage.MethodNameGet">
            <summary>Задает stub IMethodMessage.get_MethodName()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubIMethodCallMessage.MethodSignatureGet">
            <summary>Задает stub IMethodMessage.get_MethodSignature()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubIMethodCallMessage.PropertiesGet">
            <summary>Задает stub IMessage.get_Properties()</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Messaging.Fakes.StubIMethodCallMessage.global::System#Runtime#Remoting#Messaging#IMethodCallMessage#GetInArg(System.Int32)">
            <summary>Задает заглушка IMethodCallMessage.GetInArg(Int32 argNum)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Messaging.Fakes.StubIMethodCallMessage.global::System#Runtime#Remoting#Messaging#IMethodCallMessage#GetInArgName(System.Int32)">
            <summary>Задает заглушка IMethodCallMessage.GetInArgName(Int32 index)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Messaging.Fakes.StubIMethodCallMessage.global::System#Runtime#Remoting#Messaging#IMethodMessage#GetArg(System.Int32)">
            <summary>Задает заглушка IMethodMessage.GetArg(Int32 argNum)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Messaging.Fakes.StubIMethodCallMessage.global::System#Runtime#Remoting#Messaging#IMethodMessage#GetArgName(System.Int32)">
            <summary>Задает заглушка IMethodMessage.GetArgName(Int32 index)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubIMethodCallMessage.TypeNameGet">
            <summary>Задает stub IMethodMessage.get_TypeName()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubIMethodCallMessage.UriGet">
            <summary>Задает stub IMethodMessage.get_Uri()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubIMethodCallMessage.global::System#Runtime#Remoting#Messaging#IMethodMessage#ArgCount">
            <summary>Задает stub IMethodMessage.get_ArgCount()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubIMethodCallMessage.global::System#Runtime#Remoting#Messaging#IMethodMessage#Args">
            <summary>Задает stub IMethodMessage.get_Args()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubIMethodCallMessage.global::System#Runtime#Remoting#Messaging#IMethodMessage#HasVarArgs">
            <summary>Задает stub IMethodMessage.get_HasVarArgs()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubIMethodCallMessage.global::System#Runtime#Remoting#Messaging#IMethodCallMessage#InArgCount">
            <summary>Задает stub IMethodCallMessage.get_InArgCount()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubIMethodCallMessage.global::System#Runtime#Remoting#Messaging#IMethodCallMessage#InArgs">
            <summary>Задает stub IMethodCallMessage.get_InArgs()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubIMethodCallMessage.global::System#Runtime#Remoting#Messaging#IMethodMessage#LogicalCallContext">
            <summary>Задает stub IMethodMessage.get_LogicalCallContext()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubIMethodCallMessage.global::System#Runtime#Remoting#Messaging#IMethodMessage#MethodBase">
            <summary>Задает stub IMethodMessage.get_MethodBase()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubIMethodCallMessage.global::System#Runtime#Remoting#Messaging#IMethodMessage#MethodName">
            <summary>Задает stub IMethodMessage.get_MethodName()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubIMethodCallMessage.global::System#Runtime#Remoting#Messaging#IMethodMessage#MethodSignature">
            <summary>Задает stub IMethodMessage.get_MethodSignature()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubIMethodCallMessage.global::System#Runtime#Remoting#Messaging#IMessage#Properties">
            <summary>Задает stub IMessage.get_Properties()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubIMethodCallMessage.global::System#Runtime#Remoting#Messaging#IMethodMessage#TypeName">
            <summary>Задает stub IMethodMessage.get_TypeName()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubIMethodCallMessage.global::System#Runtime#Remoting#Messaging#IMethodMessage#Uri">
            <summary>Задает stub IMethodMessage.get_Uri()</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Messaging.Fakes.StubIMethodMessage">
            <summary>Тип заглушки System.Runtime.Remoting.Messaging.IMethodMessage</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Messaging.Fakes.StubIMethodMessage.#ctor">
            <summary>Инициализирует новый экземпляр type StubIMethodMessage</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubIMethodMessage.ArgCountGet">
            <summary>Задает stub IMethodMessage.get_ArgCount()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubIMethodMessage.ArgsGet">
            <summary>Задает stub IMethodMessage.get_Args()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubIMethodMessage.GetArgInt32">
            <summary>Задает stub IMethodMessage.GetArg(Int32 argNum)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubIMethodMessage.GetArgNameInt32">
            <summary>Задает stub IMethodMessage.GetArgName(Int32 index)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubIMethodMessage.HasVarArgsGet">
            <summary>Задает stub IMethodMessage.get_HasVarArgs()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubIMethodMessage.LogicalCallContextGet">
            <summary>Задает stub IMethodMessage.get_LogicalCallContext()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubIMethodMessage.MethodBaseGet">
            <summary>Задает stub IMethodMessage.get_MethodBase()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubIMethodMessage.MethodNameGet">
            <summary>Задает stub IMethodMessage.get_MethodName()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubIMethodMessage.MethodSignatureGet">
            <summary>Задает stub IMethodMessage.get_MethodSignature()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubIMethodMessage.PropertiesGet">
            <summary>Задает stub IMessage.get_Properties()</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Messaging.Fakes.StubIMethodMessage.global::System#Runtime#Remoting#Messaging#IMethodMessage#GetArg(System.Int32)">
            <summary>Задает заглушка IMethodMessage.GetArg(Int32 argNum)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Messaging.Fakes.StubIMethodMessage.global::System#Runtime#Remoting#Messaging#IMethodMessage#GetArgName(System.Int32)">
            <summary>Задает заглушка IMethodMessage.GetArgName(Int32 index)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubIMethodMessage.TypeNameGet">
            <summary>Задает stub IMethodMessage.get_TypeName()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubIMethodMessage.UriGet">
            <summary>Задает stub IMethodMessage.get_Uri()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubIMethodMessage.global::System#Runtime#Remoting#Messaging#IMethodMessage#ArgCount">
            <summary>Задает stub IMethodMessage.get_ArgCount()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubIMethodMessage.global::System#Runtime#Remoting#Messaging#IMethodMessage#Args">
            <summary>Задает stub IMethodMessage.get_Args()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubIMethodMessage.global::System#Runtime#Remoting#Messaging#IMethodMessage#HasVarArgs">
            <summary>Задает stub IMethodMessage.get_HasVarArgs()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubIMethodMessage.global::System#Runtime#Remoting#Messaging#IMethodMessage#LogicalCallContext">
            <summary>Задает stub IMethodMessage.get_LogicalCallContext()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubIMethodMessage.global::System#Runtime#Remoting#Messaging#IMethodMessage#MethodBase">
            <summary>Задает stub IMethodMessage.get_MethodBase()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubIMethodMessage.global::System#Runtime#Remoting#Messaging#IMethodMessage#MethodName">
            <summary>Задает stub IMethodMessage.get_MethodName()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubIMethodMessage.global::System#Runtime#Remoting#Messaging#IMethodMessage#MethodSignature">
            <summary>Задает stub IMethodMessage.get_MethodSignature()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubIMethodMessage.global::System#Runtime#Remoting#Messaging#IMessage#Properties">
            <summary>Задает stub IMessage.get_Properties()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubIMethodMessage.global::System#Runtime#Remoting#Messaging#IMethodMessage#TypeName">
            <summary>Задает stub IMethodMessage.get_TypeName()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubIMethodMessage.global::System#Runtime#Remoting#Messaging#IMethodMessage#Uri">
            <summary>Задает stub IMethodMessage.get_Uri()</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Messaging.Fakes.StubIMethodReturnMessage">
            <summary>Тип заглушки System.Runtime.Remoting.Messaging.IMethodReturnMessage</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Messaging.Fakes.StubIMethodReturnMessage.#ctor">
            <summary>Инициализирует новый экземпляр type StubIMethodReturnMessage</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubIMethodReturnMessage.ArgCountGet">
            <summary>Задает stub IMethodMessage.get_ArgCount()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubIMethodReturnMessage.ArgsGet">
            <summary>Задает stub IMethodMessage.get_Args()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubIMethodReturnMessage.ExceptionGet">
            <summary>Задает stub IMethodReturnMessage.get_Exception()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubIMethodReturnMessage.GetArgInt32">
            <summary>Задает stub IMethodMessage.GetArg(Int32 argNum)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubIMethodReturnMessage.GetArgNameInt32">
            <summary>Задает stub IMethodMessage.GetArgName(Int32 index)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubIMethodReturnMessage.GetOutArgInt32">
            <summary>Задает stub IMethodReturnMessage.GetOutArg(Int32 argNum)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubIMethodReturnMessage.GetOutArgNameInt32">
            <summary>Задает stub IMethodReturnMessage.GetOutArgName(Int32 index)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubIMethodReturnMessage.HasVarArgsGet">
            <summary>Задает stub IMethodMessage.get_HasVarArgs()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubIMethodReturnMessage.LogicalCallContextGet">
            <summary>Задает stub IMethodMessage.get_LogicalCallContext()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubIMethodReturnMessage.MethodBaseGet">
            <summary>Задает stub IMethodMessage.get_MethodBase()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubIMethodReturnMessage.MethodNameGet">
            <summary>Задает stub IMethodMessage.get_MethodName()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubIMethodReturnMessage.MethodSignatureGet">
            <summary>Задает stub IMethodMessage.get_MethodSignature()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubIMethodReturnMessage.OutArgCountGet">
            <summary>Задает stub IMethodReturnMessage.get_OutArgCount()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubIMethodReturnMessage.OutArgsGet">
            <summary>Задает stub IMethodReturnMessage.get_OutArgs()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubIMethodReturnMessage.PropertiesGet">
            <summary>Задает stub IMessage.get_Properties()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubIMethodReturnMessage.ReturnValueGet">
            <summary>Задает stub IMethodReturnMessage.get_ReturnValue()</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Messaging.Fakes.StubIMethodReturnMessage.global::System#Runtime#Remoting#Messaging#IMethodMessage#GetArg(System.Int32)">
            <summary>Задает заглушка IMethodMessage.GetArg(Int32 argNum)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Messaging.Fakes.StubIMethodReturnMessage.global::System#Runtime#Remoting#Messaging#IMethodMessage#GetArgName(System.Int32)">
            <summary>Задает заглушка IMethodMessage.GetArgName(Int32 index)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Messaging.Fakes.StubIMethodReturnMessage.global::System#Runtime#Remoting#Messaging#IMethodReturnMessage#GetOutArg(System.Int32)">
            <summary>Задает заглушка IMethodReturnMessage.GetOutArg(Int32 argNum)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Messaging.Fakes.StubIMethodReturnMessage.global::System#Runtime#Remoting#Messaging#IMethodReturnMessage#GetOutArgName(System.Int32)">
            <summary>Задает заглушка IMethodReturnMessage.GetOutArgName(Int32 index)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubIMethodReturnMessage.TypeNameGet">
            <summary>Задает stub IMethodMessage.get_TypeName()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubIMethodReturnMessage.UriGet">
            <summary>Задает stub IMethodMessage.get_Uri()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubIMethodReturnMessage.global::System#Runtime#Remoting#Messaging#IMethodMessage#ArgCount">
            <summary>Задает stub IMethodMessage.get_ArgCount()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubIMethodReturnMessage.global::System#Runtime#Remoting#Messaging#IMethodMessage#Args">
            <summary>Задает stub IMethodMessage.get_Args()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubIMethodReturnMessage.global::System#Runtime#Remoting#Messaging#IMethodReturnMessage#Exception">
            <summary>Задает stub IMethodReturnMessage.get_Exception()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubIMethodReturnMessage.global::System#Runtime#Remoting#Messaging#IMethodMessage#HasVarArgs">
            <summary>Задает stub IMethodMessage.get_HasVarArgs()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubIMethodReturnMessage.global::System#Runtime#Remoting#Messaging#IMethodMessage#LogicalCallContext">
            <summary>Задает stub IMethodMessage.get_LogicalCallContext()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubIMethodReturnMessage.global::System#Runtime#Remoting#Messaging#IMethodMessage#MethodBase">
            <summary>Задает stub IMethodMessage.get_MethodBase()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubIMethodReturnMessage.global::System#Runtime#Remoting#Messaging#IMethodMessage#MethodName">
            <summary>Задает stub IMethodMessage.get_MethodName()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubIMethodReturnMessage.global::System#Runtime#Remoting#Messaging#IMethodMessage#MethodSignature">
            <summary>Задает stub IMethodMessage.get_MethodSignature()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubIMethodReturnMessage.global::System#Runtime#Remoting#Messaging#IMethodReturnMessage#OutArgCount">
            <summary>Задает stub IMethodReturnMessage.get_OutArgCount()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubIMethodReturnMessage.global::System#Runtime#Remoting#Messaging#IMethodReturnMessage#OutArgs">
            <summary>Задает stub IMethodReturnMessage.get_OutArgs()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubIMethodReturnMessage.global::System#Runtime#Remoting#Messaging#IMessage#Properties">
            <summary>Задает stub IMessage.get_Properties()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubIMethodReturnMessage.global::System#Runtime#Remoting#Messaging#IMethodReturnMessage#ReturnValue">
            <summary>Задает stub IMethodReturnMessage.get_ReturnValue()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubIMethodReturnMessage.global::System#Runtime#Remoting#Messaging#IMethodMessage#TypeName">
            <summary>Задает stub IMethodMessage.get_TypeName()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubIMethodReturnMessage.global::System#Runtime#Remoting#Messaging#IMethodMessage#Uri">
            <summary>Задает stub IMethodMessage.get_Uri()</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Messaging.Fakes.StubInternalMessageWrapper">
            <summary>Тип заглушки System.Runtime.Remoting.Messaging.InternalMessageWrapper</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Messaging.Fakes.StubInternalMessageWrapper.#ctor(System.Runtime.Remoting.Messaging.IMessage)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Messaging.Fakes.StubInternalMessageWrapper.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubInternalMessageWrapper</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubInternalMessageWrapper.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubInternalMessageWrapper.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubInternalMessageWrapper.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Messaging.Fakes.StubMethodCall">
            <summary>Тип заглушки System.Runtime.Remoting.Messaging.MethodCall</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Messaging.Fakes.StubMethodCall.#ctor(System.Runtime.Remoting.Messaging.Header[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Messaging.Fakes.StubMethodCall.#ctor(System.Runtime.Remoting.Messaging.IMessage)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Messaging.Fakes.StubMethodCall.HeaderHandler(System.Runtime.Remoting.Messaging.Header[])">
            <summary>Задает заглушка MethodCall.HeaderHandler(Header[] h)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubMethodCall.HeaderHandlerHeaderArray">
            <summary>Задает stub MethodCall.HeaderHandler(Header[] h)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Messaging.Fakes.StubMethodCall.Init">
            <summary>Задает заглушка MethodCall.Init()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubMethodCall.Init01">
            <summary>Задает stub MethodCall.Init()</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Messaging.Fakes.StubMethodCall.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubMethodCall</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubMethodCall.PropertiesGet">
            <summary>Задает stub MethodCall.get_Properties()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubMethodCall.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubMethodCall.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubMethodCall.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubMethodCall.Properties">
            <summary>Задает stub MethodCall.get_Properties()</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Messaging.Fakes.StubMethodCallMessageWrapper">
            <summary>Тип заглушки System.Runtime.Remoting.Messaging.MethodCallMessageWrapper</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Messaging.Fakes.StubMethodCallMessageWrapper.#ctor(System.Runtime.Remoting.Messaging.IMethodCallMessage)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubMethodCallMessageWrapper.ArgCountGet">
            <summary>Задает stub MethodCallMessageWrapper.get_ArgCount()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubMethodCallMessageWrapper.ArgsGet">
            <summary>Задает stub MethodCallMessageWrapper.get_Args()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubMethodCallMessageWrapper.ArgsSetObjectArray">
            <summary>Задает stub MethodCallMessageWrapper.set_Args(Object[] value)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Messaging.Fakes.StubMethodCallMessageWrapper.AttachBackingFieldToArgs">
            <summary>Присоединение делегатов для эмуляции StubMethodCallMessageWrapper.Args как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Messaging.Fakes.StubMethodCallMessageWrapper.AttachBackingFieldToUri">
            <summary>Присоединение делегатов для эмуляции StubMethodCallMessageWrapper.Uri как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Messaging.Fakes.StubMethodCallMessageWrapper.GetArg(System.Int32)">
            <summary>Задает заглушка MethodCallMessageWrapper.GetArg(Int32 argNum)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubMethodCallMessageWrapper.GetArgInt32">
            <summary>Задает stub MethodCallMessageWrapper.GetArg(Int32 argNum)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Messaging.Fakes.StubMethodCallMessageWrapper.GetArgName(System.Int32)">
            <summary>Задает заглушка MethodCallMessageWrapper.GetArgName(Int32 index)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubMethodCallMessageWrapper.GetArgNameInt32">
            <summary>Задает stub MethodCallMessageWrapper.GetArgName(Int32 index)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Messaging.Fakes.StubMethodCallMessageWrapper.GetInArg(System.Int32)">
            <summary>Задает заглушка MethodCallMessageWrapper.GetInArg(Int32 argNum)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubMethodCallMessageWrapper.GetInArgInt32">
            <summary>Задает stub MethodCallMessageWrapper.GetInArg(Int32 argNum)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Messaging.Fakes.StubMethodCallMessageWrapper.GetInArgName(System.Int32)">
            <summary>Задает заглушка MethodCallMessageWrapper.GetInArgName(Int32 index)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubMethodCallMessageWrapper.GetInArgNameInt32">
            <summary>Задает stub MethodCallMessageWrapper.GetInArgName(Int32 index)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubMethodCallMessageWrapper.HasVarArgsGet">
            <summary>Задает stub MethodCallMessageWrapper.get_HasVarArgs()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubMethodCallMessageWrapper.InArgCountGet">
            <summary>Задает stub MethodCallMessageWrapper.get_InArgCount()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubMethodCallMessageWrapper.InArgsGet">
            <summary>Задает stub MethodCallMessageWrapper.get_InArgs()</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Messaging.Fakes.StubMethodCallMessageWrapper.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubMethodCallMessageWrapper</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubMethodCallMessageWrapper.LogicalCallContextGet">
            <summary>Задает stub MethodCallMessageWrapper.get_LogicalCallContext()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubMethodCallMessageWrapper.MethodBaseGet">
            <summary>Задает stub MethodCallMessageWrapper.get_MethodBase()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubMethodCallMessageWrapper.MethodNameGet">
            <summary>Задает stub MethodCallMessageWrapper.get_MethodName()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubMethodCallMessageWrapper.MethodSignatureGet">
            <summary>Задает stub MethodCallMessageWrapper.get_MethodSignature()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubMethodCallMessageWrapper.PropertiesGet">
            <summary>Задает stub MethodCallMessageWrapper.get_Properties()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubMethodCallMessageWrapper.TypeNameGet">
            <summary>Задает stub MethodCallMessageWrapper.get_TypeName()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubMethodCallMessageWrapper.UriGet">
            <summary>Задает stub MethodCallMessageWrapper.get_Uri()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubMethodCallMessageWrapper.UriSetString">
            <summary>Задает stub MethodCallMessageWrapper.set_Uri(String value)</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubMethodCallMessageWrapper.ArgCount">
            <summary>Задает stub MethodCallMessageWrapper.get_ArgCount()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubMethodCallMessageWrapper.Args">
            <summary>Задает stub MethodCallMessageWrapper.get_Args()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubMethodCallMessageWrapper.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubMethodCallMessageWrapper.HasVarArgs">
            <summary>Задает stub MethodCallMessageWrapper.get_HasVarArgs()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubMethodCallMessageWrapper.InArgCount">
            <summary>Задает stub MethodCallMessageWrapper.get_InArgCount()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubMethodCallMessageWrapper.InArgs">
            <summary>Задает stub MethodCallMessageWrapper.get_InArgs()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubMethodCallMessageWrapper.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubMethodCallMessageWrapper.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubMethodCallMessageWrapper.LogicalCallContext">
            <summary>Задает stub MethodCallMessageWrapper.get_LogicalCallContext()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubMethodCallMessageWrapper.MethodBase">
            <summary>Задает stub MethodCallMessageWrapper.get_MethodBase()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubMethodCallMessageWrapper.MethodName">
            <summary>Задает stub MethodCallMessageWrapper.get_MethodName()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubMethodCallMessageWrapper.MethodSignature">
            <summary>Задает stub MethodCallMessageWrapper.get_MethodSignature()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubMethodCallMessageWrapper.Properties">
            <summary>Задает stub MethodCallMessageWrapper.get_Properties()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubMethodCallMessageWrapper.TypeName">
            <summary>Задает stub MethodCallMessageWrapper.get_TypeName()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubMethodCallMessageWrapper.Uri">
            <summary>Задает stub MethodCallMessageWrapper.get_Uri()</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Messaging.Fakes.StubMethodResponse">
            <summary>Тип заглушки System.Runtime.Remoting.Messaging.MethodResponse</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Messaging.Fakes.StubMethodResponse.#ctor(System.Runtime.Remoting.Messaging.Header[],System.Runtime.Remoting.Messaging.IMethodCallMessage)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Messaging.Fakes.StubMethodResponse.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка MethodResponse.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubMethodResponse.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub MethodResponse.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Messaging.Fakes.StubMethodResponse.HeaderHandler(System.Runtime.Remoting.Messaging.Header[])">
            <summary>Задает заглушка MethodResponse.HeaderHandler(Header[] h)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubMethodResponse.HeaderHandlerHeaderArray">
            <summary>Задает stub MethodResponse.HeaderHandler(Header[] h)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Messaging.Fakes.StubMethodResponse.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubMethodResponse</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubMethodResponse.PropertiesGet">
            <summary>Задает stub MethodResponse.get_Properties()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubMethodResponse.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubMethodResponse.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubMethodResponse.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubMethodResponse.Properties">
            <summary>Задает stub MethodResponse.get_Properties()</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Messaging.Fakes.StubMethodReturnMessageWrapper">
            <summary>Тип заглушки System.Runtime.Remoting.Messaging.MethodReturnMessageWrapper</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Messaging.Fakes.StubMethodReturnMessageWrapper.#ctor(System.Runtime.Remoting.Messaging.IMethodReturnMessage)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubMethodReturnMessageWrapper.ArgCountGet">
            <summary>Задает stub MethodReturnMessageWrapper.get_ArgCount()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubMethodReturnMessageWrapper.ArgsGet">
            <summary>Задает stub MethodReturnMessageWrapper.get_Args()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubMethodReturnMessageWrapper.ArgsSetObjectArray">
            <summary>Задает stub MethodReturnMessageWrapper.set_Args(Object[] value)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Messaging.Fakes.StubMethodReturnMessageWrapper.AttachBackingFieldToArgs">
            <summary>Присоединение делегатов для эмуляции StubMethodReturnMessageWrapper.Args как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Messaging.Fakes.StubMethodReturnMessageWrapper.AttachBackingFieldToException">
            <summary>Присоединение делегатов для эмуляции StubMethodReturnMessageWrapper.Exception как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Messaging.Fakes.StubMethodReturnMessageWrapper.AttachBackingFieldToReturnValue">
            <summary>Присоединение делегатов для эмуляции StubMethodReturnMessageWrapper.ReturnValue как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubMethodReturnMessageWrapper.ExceptionGet">
            <summary>Задает stub MethodReturnMessageWrapper.get_Exception()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubMethodReturnMessageWrapper.ExceptionSetException">
            <summary>Задает stub MethodReturnMessageWrapper.set_Exception(Exception value)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Messaging.Fakes.StubMethodReturnMessageWrapper.GetArg(System.Int32)">
            <summary>Задает заглушка MethodReturnMessageWrapper.GetArg(Int32 argNum)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubMethodReturnMessageWrapper.GetArgInt32">
            <summary>Задает stub MethodReturnMessageWrapper.GetArg(Int32 argNum)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Messaging.Fakes.StubMethodReturnMessageWrapper.GetArgName(System.Int32)">
            <summary>Задает заглушка MethodReturnMessageWrapper.GetArgName(Int32 index)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubMethodReturnMessageWrapper.GetArgNameInt32">
            <summary>Задает stub MethodReturnMessageWrapper.GetArgName(Int32 index)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Messaging.Fakes.StubMethodReturnMessageWrapper.GetOutArg(System.Int32)">
            <summary>Задает заглушка MethodReturnMessageWrapper.GetOutArg(Int32 argNum)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubMethodReturnMessageWrapper.GetOutArgInt32">
            <summary>Задает stub MethodReturnMessageWrapper.GetOutArg(Int32 argNum)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Messaging.Fakes.StubMethodReturnMessageWrapper.GetOutArgName(System.Int32)">
            <summary>Задает заглушка MethodReturnMessageWrapper.GetOutArgName(Int32 index)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubMethodReturnMessageWrapper.GetOutArgNameInt32">
            <summary>Задает stub MethodReturnMessageWrapper.GetOutArgName(Int32 index)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubMethodReturnMessageWrapper.HasVarArgsGet">
            <summary>Задает stub MethodReturnMessageWrapper.get_HasVarArgs()</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Messaging.Fakes.StubMethodReturnMessageWrapper.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubMethodReturnMessageWrapper</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubMethodReturnMessageWrapper.LogicalCallContextGet">
            <summary>Задает stub MethodReturnMessageWrapper.get_LogicalCallContext()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubMethodReturnMessageWrapper.MethodBaseGet">
            <summary>Задает stub MethodReturnMessageWrapper.get_MethodBase()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubMethodReturnMessageWrapper.MethodNameGet">
            <summary>Задает stub MethodReturnMessageWrapper.get_MethodName()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubMethodReturnMessageWrapper.MethodSignatureGet">
            <summary>Задает stub MethodReturnMessageWrapper.get_MethodSignature()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubMethodReturnMessageWrapper.OutArgCountGet">
            <summary>Задает stub MethodReturnMessageWrapper.get_OutArgCount()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubMethodReturnMessageWrapper.OutArgsGet">
            <summary>Задает stub MethodReturnMessageWrapper.get_OutArgs()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubMethodReturnMessageWrapper.PropertiesGet">
            <summary>Задает stub MethodReturnMessageWrapper.get_Properties()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubMethodReturnMessageWrapper.ReturnValueGet">
            <summary>Задает stub MethodReturnMessageWrapper.get_ReturnValue()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubMethodReturnMessageWrapper.ReturnValueSetObject">
            <summary>Задает stub MethodReturnMessageWrapper.set_ReturnValue(Object value)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubMethodReturnMessageWrapper.TypeNameGet">
            <summary>Задает stub MethodReturnMessageWrapper.get_TypeName()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubMethodReturnMessageWrapper.ArgCount">
            <summary>Задает stub MethodReturnMessageWrapper.get_ArgCount()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubMethodReturnMessageWrapper.Args">
            <summary>Задает stub MethodReturnMessageWrapper.get_Args()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubMethodReturnMessageWrapper.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubMethodReturnMessageWrapper.Exception">
            <summary>Задает stub MethodReturnMessageWrapper.get_Exception()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubMethodReturnMessageWrapper.HasVarArgs">
            <summary>Задает stub MethodReturnMessageWrapper.get_HasVarArgs()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubMethodReturnMessageWrapper.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubMethodReturnMessageWrapper.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubMethodReturnMessageWrapper.LogicalCallContext">
            <summary>Задает stub MethodReturnMessageWrapper.get_LogicalCallContext()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubMethodReturnMessageWrapper.MethodBase">
            <summary>Задает stub MethodReturnMessageWrapper.get_MethodBase()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubMethodReturnMessageWrapper.MethodName">
            <summary>Задает stub MethodReturnMessageWrapper.get_MethodName()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubMethodReturnMessageWrapper.MethodSignature">
            <summary>Задает stub MethodReturnMessageWrapper.get_MethodSignature()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubMethodReturnMessageWrapper.OutArgCount">
            <summary>Задает stub MethodReturnMessageWrapper.get_OutArgCount()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubMethodReturnMessageWrapper.OutArgs">
            <summary>Задает stub MethodReturnMessageWrapper.get_OutArgs()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubMethodReturnMessageWrapper.Properties">
            <summary>Задает stub MethodReturnMessageWrapper.get_Properties()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubMethodReturnMessageWrapper.ReturnValue">
            <summary>Задает stub MethodReturnMessageWrapper.get_ReturnValue()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubMethodReturnMessageWrapper.TypeName">
            <summary>Задает stub MethodReturnMessageWrapper.get_TypeName()</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Messaging.Fakes.StubOneWayAttribute">
            <summary>Тип заглушки System.Runtime.Remoting.Messaging.OneWayAttribute</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Messaging.Fakes.StubOneWayAttribute.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Messaging.Fakes.StubOneWayAttribute.Equals(System.Object)">
            <summary>Задает заглушка Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubOneWayAttribute.EqualsObject">
            <summary>Задает stub Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Messaging.Fakes.StubOneWayAttribute.GetHashCode">
            <summary>Задает заглушка Attribute.GetHashCode()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubOneWayAttribute.GetHashCode01">
            <summary>Задает stub Attribute.GetHashCode()</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Messaging.Fakes.StubOneWayAttribute.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubOneWayAttribute</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Messaging.Fakes.StubOneWayAttribute.IsDefaultAttribute">
            <summary>Задает заглушка Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubOneWayAttribute.IsDefaultAttribute01">
            <summary>Задает stub Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Messaging.Fakes.StubOneWayAttribute.Match(System.Object)">
            <summary>Задает заглушка Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubOneWayAttribute.MatchObject">
            <summary>Задает stub Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubOneWayAttribute.TypeIdGet">
            <summary>Задает stub Attribute.get_TypeId()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubOneWayAttribute.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubOneWayAttribute.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubOneWayAttribute.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubOneWayAttribute.TypeId">
            <summary>Задает stub Attribute.get_TypeId()</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Messaging.Fakes.StubRemotingSurrogateSelector">
            <summary>Тип заглушки System.Runtime.Remoting.Messaging.RemotingSurrogateSelector</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Messaging.Fakes.StubRemotingSurrogateSelector.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Messaging.Fakes.StubRemotingSurrogateSelector.ChainSelector(System.Runtime.Serialization.ISurrogateSelector)">
            <summary>Задает заглушка RemotingSurrogateSelector.ChainSelector(ISurrogateSelector selector)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubRemotingSurrogateSelector.ChainSelectorISurrogateSelector">
            <summary>Задает stub RemotingSurrogateSelector.ChainSelector(ISurrogateSelector selector)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Messaging.Fakes.StubRemotingSurrogateSelector.GetNextSelector">
            <summary>Задает заглушка RemotingSurrogateSelector.GetNextSelector()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubRemotingSurrogateSelector.GetNextSelector01">
            <summary>Задает stub RemotingSurrogateSelector.GetNextSelector()</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Messaging.Fakes.StubRemotingSurrogateSelector.GetSurrogate(System.Type,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.ISurrogateSelector@)">
            <summary>Задает заглушка RemotingSurrogateSelector.GetSurrogate(Type type, StreamingContext context, ISurrogateSelector&amp; ssout)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubRemotingSurrogateSelector.GetSurrogateTypeStreamingContextISurrogateSelectorOut">
            <summary>Задает stub RemotingSurrogateSelector.GetSurrogate(Type type, StreamingContext context, ISurrogateSelector&amp; ssout)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Messaging.Fakes.StubRemotingSurrogateSelector.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubRemotingSurrogateSelector</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Messaging.Fakes.StubRemotingSurrogateSelector.UseSoapFormat">
            <summary>Задает заглушка RemotingSurrogateSelector.UseSoapFormat()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubRemotingSurrogateSelector.UseSoapFormat01">
            <summary>Задает stub RemotingSurrogateSelector.UseSoapFormat()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubRemotingSurrogateSelector.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubRemotingSurrogateSelector.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubRemotingSurrogateSelector.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Messaging.Fakes.StubReturnMessage">
            <summary>Тип заглушки System.Runtime.Remoting.Messaging.ReturnMessage</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Messaging.Fakes.StubReturnMessage.#ctor(System.Exception,System.Runtime.Remoting.Messaging.IMethodCallMessage)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Messaging.Fakes.StubReturnMessage.#ctor(System.Object,System.Object[],System.Int32,System.Runtime.Remoting.Messaging.LogicalCallContext,System.Runtime.Remoting.Messaging.IMethodCallMessage)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Messaging.Fakes.StubReturnMessage.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubReturnMessage</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubReturnMessage.PropertiesGet">
            <summary>Задает stub ReturnMessage.get_Properties()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Messaging.Fakes.StubReturnMessage.ReturnValueGet">
            <summary>Задает stub ReturnMessage.get_ReturnValue()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubReturnMessage.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubReturnMessage.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubReturnMessage.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubReturnMessage.Properties">
            <summary>Задает stub ReturnMessage.get_Properties()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Messaging.Fakes.StubReturnMessage.ReturnValue">
            <summary>Задает stub ReturnMessage.get_ReturnValue()</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Metadata.Fakes.StubSoapAttribute">
            <summary>Тип заглушки System.Runtime.Remoting.Metadata.SoapAttribute</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Metadata.Fakes.StubSoapAttribute.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Metadata.Fakes.StubSoapAttribute.AttachBackingFieldToEmbedded">
            <summary>Присоединение делегатов для эмуляции StubSoapAttribute.Embedded как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Metadata.Fakes.StubSoapAttribute.AttachBackingFieldToUseAttribute">
            <summary>Присоединение делегатов для эмуляции StubSoapAttribute.UseAttribute как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Metadata.Fakes.StubSoapAttribute.AttachBackingFieldToXmlNamespace">
            <summary>Присоединение делегатов для эмуляции StubSoapAttribute.XmlNamespace как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Metadata.Fakes.StubSoapAttribute.EmbeddedGet">
            <summary>Задает stub SoapAttribute.get_Embedded()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Metadata.Fakes.StubSoapAttribute.EmbeddedSetBoolean">
            <summary>Задает stub SoapAttribute.set_Embedded(Boolean value)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Metadata.Fakes.StubSoapAttribute.Equals(System.Object)">
            <summary>Задает заглушка Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Metadata.Fakes.StubSoapAttribute.EqualsObject">
            <summary>Задает stub Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Metadata.Fakes.StubSoapAttribute.GetHashCode">
            <summary>Задает заглушка Attribute.GetHashCode()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Metadata.Fakes.StubSoapAttribute.GetHashCode01">
            <summary>Задает stub Attribute.GetHashCode()</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Metadata.Fakes.StubSoapAttribute.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubSoapAttribute</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Metadata.Fakes.StubSoapAttribute.IsDefaultAttribute">
            <summary>Задает заглушка Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Metadata.Fakes.StubSoapAttribute.IsDefaultAttribute01">
            <summary>Задает stub Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Metadata.Fakes.StubSoapAttribute.Match(System.Object)">
            <summary>Задает заглушка Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Metadata.Fakes.StubSoapAttribute.MatchObject">
            <summary>Задает stub Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Metadata.Fakes.StubSoapAttribute.TypeIdGet">
            <summary>Задает stub Attribute.get_TypeId()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Metadata.Fakes.StubSoapAttribute.UseAttributeGet">
            <summary>Задает stub SoapAttribute.get_UseAttribute()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Metadata.Fakes.StubSoapAttribute.UseAttributeSetBoolean">
            <summary>Задает stub SoapAttribute.set_UseAttribute(Boolean value)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Metadata.Fakes.StubSoapAttribute.XmlNamespaceGet">
            <summary>Задает stub SoapAttribute.get_XmlNamespace()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Metadata.Fakes.StubSoapAttribute.XmlNamespaceSetString">
            <summary>Задает stub SoapAttribute.set_XmlNamespace(String value)</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Metadata.Fakes.StubSoapAttribute.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Metadata.Fakes.StubSoapAttribute.Embedded">
            <summary>Задает stub SoapAttribute.get_Embedded()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Metadata.Fakes.StubSoapAttribute.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Metadata.Fakes.StubSoapAttribute.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Metadata.Fakes.StubSoapAttribute.TypeId">
            <summary>Задает stub Attribute.get_TypeId()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Metadata.Fakes.StubSoapAttribute.UseAttribute">
            <summary>Задает stub SoapAttribute.get_UseAttribute()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Metadata.Fakes.StubSoapAttribute.XmlNamespace">
            <summary>Задает stub SoapAttribute.get_XmlNamespace()</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Metadata.W3cXsd2001.Fakes.StubISoapXsd">
            <summary>Тип заглушки System.Runtime.Remoting.Metadata.W3cXsd2001.ISoapXsd</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Metadata.W3cXsd2001.Fakes.StubISoapXsd.#ctor">
            <summary>Инициализирует новый экземпляр type StubISoapXsd</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Metadata.W3cXsd2001.Fakes.StubISoapXsd.GetXsdType">
            <summary>Задает stub ISoapXsd.GetXsdType()</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Metadata.W3cXsd2001.Fakes.StubISoapXsd.global::System#Runtime#Remoting#Metadata#W3cXsd2001#ISoapXsd#GetXsdType">
            <summary>Задает заглушка ISoapXsd.GetXsdType()</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Proxies.Fakes.StubProxyAttribute">
            <summary>Тип заглушки System.Runtime.Remoting.Proxies.ProxyAttribute</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Proxies.Fakes.StubProxyAttribute.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Proxies.Fakes.StubProxyAttribute.CreateInstance(System.Type)">
            <summary>Задает заглушка ProxyAttribute.CreateInstance(Type serverType)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Proxies.Fakes.StubProxyAttribute.CreateInstanceType">
            <summary>Задает stub ProxyAttribute.CreateInstance(Type serverType)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Proxies.Fakes.StubProxyAttribute.CreateProxy(System.Runtime.Remoting.ObjRef,System.Type,System.Object,System.Runtime.Remoting.Contexts.Context)">
            <summary>Задает заглушка ProxyAttribute.CreateProxy(ObjRef objRef, Type serverType, Object serverObject, Context serverContext)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Proxies.Fakes.StubProxyAttribute.CreateProxyObjRefTypeObjectContext">
            <summary>Задает stub ProxyAttribute.CreateProxy(ObjRef objRef, Type serverType, Object serverObject, Context serverContext)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Proxies.Fakes.StubProxyAttribute.Equals(System.Object)">
            <summary>Задает заглушка Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Proxies.Fakes.StubProxyAttribute.EqualsObject">
            <summary>Задает stub Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Proxies.Fakes.StubProxyAttribute.GetHashCode">
            <summary>Задает заглушка Attribute.GetHashCode()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Proxies.Fakes.StubProxyAttribute.GetHashCode01">
            <summary>Задает stub Attribute.GetHashCode()</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Proxies.Fakes.StubProxyAttribute.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubProxyAttribute</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Proxies.Fakes.StubProxyAttribute.IsDefaultAttribute">
            <summary>Задает заглушка Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Proxies.Fakes.StubProxyAttribute.IsDefaultAttribute01">
            <summary>Задает stub Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Proxies.Fakes.StubProxyAttribute.Match(System.Object)">
            <summary>Задает заглушка Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Proxies.Fakes.StubProxyAttribute.MatchObject">
            <summary>Задает stub Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Proxies.Fakes.StubProxyAttribute.TypeIdGet">
            <summary>Задает stub Attribute.get_TypeId()</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Proxies.Fakes.StubProxyAttribute.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Proxies.Fakes.StubProxyAttribute.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Proxies.Fakes.StubProxyAttribute.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Proxies.Fakes.StubProxyAttribute.TypeId">
            <summary>Задает stub Attribute.get_TypeId()</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Proxies.Fakes.StubRealProxy">
            <summary>Тип заглушки System.Runtime.Remoting.Proxies.RealProxy</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Proxies.Fakes.StubRealProxy.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Proxies.Fakes.StubRealProxy.#ctor(System.Type)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Proxies.Fakes.StubRealProxy.#ctor(System.Type,System.IntPtr,System.Object)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Proxies.Fakes.StubRealProxy.CreateObjRef(System.Type)">
            <summary>Задает заглушка RealProxy.CreateObjRef(Type requestedType)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Proxies.Fakes.StubRealProxy.CreateObjRefType">
            <summary>Задает stub RealProxy.CreateObjRef(Type requestedType)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Proxies.Fakes.StubRealProxy.GetCOMIUnknown(System.Boolean)">
            <summary>Задает заглушка RealProxy.GetCOMIUnknown(Boolean fIsMarshalled)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Proxies.Fakes.StubRealProxy.GetCOMIUnknownBoolean">
            <summary>Задает stub RealProxy.GetCOMIUnknown(Boolean fIsMarshalled)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Proxies.Fakes.StubRealProxy.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка RealProxy.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Proxies.Fakes.StubRealProxy.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub RealProxy.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Proxies.Fakes.StubRealProxy.GetTransparentProxy">
            <summary>Задает заглушка RealProxy.GetTransparentProxy()</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Proxies.Fakes.StubRealProxy.GetTransparentProxy01">
            <summary>Задает stub RealProxy.GetTransparentProxy()</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Proxies.Fakes.StubRealProxy.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubRealProxy</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Proxies.Fakes.StubRealProxy.Invoke(System.Runtime.Remoting.Messaging.IMessage)">
            <summary>Задает заглушка RealProxy.Invoke(IMessage msg)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Proxies.Fakes.StubRealProxy.InvokeIMessage">
            <summary>Задает stub RealProxy.Invoke(IMessage msg)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Proxies.Fakes.StubRealProxy.SetCOMIUnknown(System.IntPtr)">
            <summary>Задает заглушка RealProxy.SetCOMIUnknown(IntPtr i)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Proxies.Fakes.StubRealProxy.SetCOMIUnknownIntPtr">
            <summary>Задает stub RealProxy.SetCOMIUnknown(IntPtr i)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Proxies.Fakes.StubRealProxy.SupportsInterface(System.Guid@)">
            <summary>Задает заглушка RealProxy.SupportsInterface(Guid&amp; iid)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Proxies.Fakes.StubRealProxy.SupportsInterfaceGuidRef">
            <summary>Задает stub RealProxy.SupportsInterface(Guid&amp; iid)</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Proxies.Fakes.StubRealProxy.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Proxies.Fakes.StubRealProxy.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Proxies.Fakes.StubRealProxy.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Services.Fakes.StubITrackingHandler">
            <summary>Тип заглушки System.Runtime.Remoting.Services.ITrackingHandler</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Services.Fakes.StubITrackingHandler.#ctor">
            <summary>Инициализирует новый экземпляр type StubITrackingHandler</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Services.Fakes.StubITrackingHandler.DisconnectedObjectObject">
            <summary>Задает stub ITrackingHandler.DisconnectedObject(Object obj)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Services.Fakes.StubITrackingHandler.MarshaledObjectObjectObjRef">
            <summary>Задает stub ITrackingHandler.MarshaledObject(Object obj, ObjRef or)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Services.Fakes.StubITrackingHandler.global::System#Runtime#Remoting#Services#ITrackingHandler#DisconnectedObject(System.Object)">
            <summary>Задает заглушка ITrackingHandler.DisconnectedObject(Object obj)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Services.Fakes.StubITrackingHandler.global::System#Runtime#Remoting#Services#ITrackingHandler#MarshaledObject(System.Object,System.Runtime.Remoting.ObjRef)">
            <summary>Задает заглушка ITrackingHandler.MarshaledObject(Object obj, ObjRef or)</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Services.Fakes.StubITrackingHandler.global::System#Runtime#Remoting#Services#ITrackingHandler#UnmarshaledObject(System.Object,System.Runtime.Remoting.ObjRef)">
            <summary>Задает заглушка ITrackingHandler.UnmarshaledObject(Object obj, ObjRef or)</summary>
        </member>
        <member name="F:System.Runtime.Remoting.Services.Fakes.StubITrackingHandler.UnmarshaledObjectObjectObjRef">
            <summary>Задает stub ITrackingHandler.UnmarshaledObject(Object obj, ObjRef or)</summary>
        </member>
        <member name="T:System.Runtime.Remoting.Services.Fakes.StubTrackingServices">
            <summary>Тип заглушки System.Runtime.Remoting.Services.TrackingServices</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Services.Fakes.StubTrackingServices.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.Remoting.Services.Fakes.StubTrackingServices.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubTrackingServices</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Services.Fakes.StubTrackingServices.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Services.Fakes.StubTrackingServices.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.Remoting.Services.Fakes.StubTrackingServices.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Runtime.Serialization.Fakes.StubFormatterConverter">
            <summary>Тип заглушки System.Runtime.Serialization.FormatterConverter</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Fakes.StubFormatterConverter.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Fakes.StubFormatterConverter.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubFormatterConverter</summary>
        </member>
        <member name="P:System.Runtime.Serialization.Fakes.StubFormatterConverter.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Runtime.Serialization.Fakes.StubFormatterConverter.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.Serialization.Fakes.StubFormatterConverter.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Runtime.Serialization.Fakes.StubIDeserializationCallback">
            <summary>Тип заглушки System.Runtime.Serialization.IDeserializationCallback</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Fakes.StubIDeserializationCallback.#ctor">
            <summary>Инициализирует новый экземпляр type StubIDeserializationCallback</summary>
        </member>
        <member name="F:System.Runtime.Serialization.Fakes.StubIDeserializationCallback.OnDeserializationObject">
            <summary>Задает stub IDeserializationCallback.OnDeserialization(Object sender)</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Fakes.StubIDeserializationCallback.global::System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
            <summary>Задает заглушка IDeserializationCallback.OnDeserialization(Object sender)</summary>
        </member>
        <member name="T:System.Runtime.Serialization.Fakes.StubIFormatterConverter">
            <summary>Тип заглушки System.Runtime.Serialization.IFormatterConverter</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Fakes.StubIFormatterConverter.#ctor">
            <summary>Инициализирует новый экземпляр type StubIFormatterConverter</summary>
        </member>
        <member name="F:System.Runtime.Serialization.Fakes.StubIFormatterConverter.ConvertObjectType">
            <summary>Задает stub IFormatterConverter.Convert(Object value, Type type)</summary>
        </member>
        <member name="F:System.Runtime.Serialization.Fakes.StubIFormatterConverter.ConvertObjectTypeCode">
            <summary>Задает stub IFormatterConverter.Convert(Object value, TypeCode typeCode)</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Fakes.StubIFormatterConverter.global::System#Runtime#Serialization#IFormatterConverter#Convert(System.Object,System.Type)">
            <summary>Задает заглушка IFormatterConverter.Convert(Object value, Type type)</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Fakes.StubIFormatterConverter.global::System#Runtime#Serialization#IFormatterConverter#Convert(System.Object,System.TypeCode)">
            <summary>Задает заглушка IFormatterConverter.Convert(Object value, TypeCode typeCode)</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Fakes.StubIFormatterConverter.global::System#Runtime#Serialization#IFormatterConverter#ToBoolean(System.Object)">
            <summary>Задает заглушка IFormatterConverter.ToBoolean(Object value)</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Fakes.StubIFormatterConverter.global::System#Runtime#Serialization#IFormatterConverter#ToByte(System.Object)">
            <summary>Задает заглушка IFormatterConverter.ToByte(Object value)</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Fakes.StubIFormatterConverter.global::System#Runtime#Serialization#IFormatterConverter#ToChar(System.Object)">
            <summary>Задает заглушка IFormatterConverter.ToChar(Object value)</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Fakes.StubIFormatterConverter.global::System#Runtime#Serialization#IFormatterConverter#ToDateTime(System.Object)">
            <summary>Задает заглушка IFormatterConverter.ToDateTime(Object value)</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Fakes.StubIFormatterConverter.global::System#Runtime#Serialization#IFormatterConverter#ToDecimal(System.Object)">
            <summary>Задает заглушка IFormatterConverter.ToDecimal(Object value)</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Fakes.StubIFormatterConverter.global::System#Runtime#Serialization#IFormatterConverter#ToDouble(System.Object)">
            <summary>Задает заглушка IFormatterConverter.ToDouble(Object value)</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Fakes.StubIFormatterConverter.global::System#Runtime#Serialization#IFormatterConverter#ToInt16(System.Object)">
            <summary>Задает заглушка IFormatterConverter.ToInt16(Object value)</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Fakes.StubIFormatterConverter.global::System#Runtime#Serialization#IFormatterConverter#ToInt32(System.Object)">
            <summary>Задает заглушка IFormatterConverter.ToInt32(Object value)</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Fakes.StubIFormatterConverter.global::System#Runtime#Serialization#IFormatterConverter#ToInt64(System.Object)">
            <summary>Задает заглушка IFormatterConverter.ToInt64(Object value)</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Fakes.StubIFormatterConverter.global::System#Runtime#Serialization#IFormatterConverter#ToSByte(System.Object)">
            <summary>Задает заглушка IFormatterConverter.ToSByte(Object value)</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Fakes.StubIFormatterConverter.global::System#Runtime#Serialization#IFormatterConverter#ToSingle(System.Object)">
            <summary>Задает заглушка IFormatterConverter.ToSingle(Object value)</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Fakes.StubIFormatterConverter.global::System#Runtime#Serialization#IFormatterConverter#ToString(System.Object)">
            <summary>Задает заглушка IFormatterConverter.ToString(Object value)</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Fakes.StubIFormatterConverter.global::System#Runtime#Serialization#IFormatterConverter#ToUInt16(System.Object)">
            <summary>Задает заглушка IFormatterConverter.ToUInt16(Object value)</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Fakes.StubIFormatterConverter.global::System#Runtime#Serialization#IFormatterConverter#ToUInt32(System.Object)">
            <summary>Задает заглушка IFormatterConverter.ToUInt32(Object value)</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Fakes.StubIFormatterConverter.global::System#Runtime#Serialization#IFormatterConverter#ToUInt64(System.Object)">
            <summary>Задает заглушка IFormatterConverter.ToUInt64(Object value)</summary>
        </member>
        <member name="F:System.Runtime.Serialization.Fakes.StubIFormatterConverter.ToBooleanObject">
            <summary>Задает stub IFormatterConverter.ToBoolean(Object value)</summary>
        </member>
        <member name="F:System.Runtime.Serialization.Fakes.StubIFormatterConverter.ToByteObject">
            <summary>Задает stub IFormatterConverter.ToByte(Object value)</summary>
        </member>
        <member name="F:System.Runtime.Serialization.Fakes.StubIFormatterConverter.ToCharObject">
            <summary>Задает stub IFormatterConverter.ToChar(Object value)</summary>
        </member>
        <member name="F:System.Runtime.Serialization.Fakes.StubIFormatterConverter.ToDateTimeObject">
            <summary>Задает stub IFormatterConverter.ToDateTime(Object value)</summary>
        </member>
        <member name="F:System.Runtime.Serialization.Fakes.StubIFormatterConverter.ToDecimalObject">
            <summary>Задает stub IFormatterConverter.ToDecimal(Object value)</summary>
        </member>
        <member name="F:System.Runtime.Serialization.Fakes.StubIFormatterConverter.ToDoubleObject">
            <summary>Задает stub IFormatterConverter.ToDouble(Object value)</summary>
        </member>
        <member name="F:System.Runtime.Serialization.Fakes.StubIFormatterConverter.ToInt16Object">
            <summary>Задает stub IFormatterConverter.ToInt16(Object value)</summary>
        </member>
        <member name="F:System.Runtime.Serialization.Fakes.StubIFormatterConverter.ToInt32Object">
            <summary>Задает stub IFormatterConverter.ToInt32(Object value)</summary>
        </member>
        <member name="F:System.Runtime.Serialization.Fakes.StubIFormatterConverter.ToInt64Object">
            <summary>Задает stub IFormatterConverter.ToInt64(Object value)</summary>
        </member>
        <member name="F:System.Runtime.Serialization.Fakes.StubIFormatterConverter.ToSByteObject">
            <summary>Задает stub IFormatterConverter.ToSByte(Object value)</summary>
        </member>
        <member name="F:System.Runtime.Serialization.Fakes.StubIFormatterConverter.ToSingleObject">
            <summary>Задает stub IFormatterConverter.ToSingle(Object value)</summary>
        </member>
        <member name="F:System.Runtime.Serialization.Fakes.StubIFormatterConverter.ToStringObject">
            <summary>Задает stub IFormatterConverter.ToString(Object value)</summary>
        </member>
        <member name="F:System.Runtime.Serialization.Fakes.StubIFormatterConverter.ToUInt16Object">
            <summary>Задает stub IFormatterConverter.ToUInt16(Object value)</summary>
        </member>
        <member name="F:System.Runtime.Serialization.Fakes.StubIFormatterConverter.ToUInt32Object">
            <summary>Задает stub IFormatterConverter.ToUInt32(Object value)</summary>
        </member>
        <member name="F:System.Runtime.Serialization.Fakes.StubIFormatterConverter.ToUInt64Object">
            <summary>Задает stub IFormatterConverter.ToUInt64(Object value)</summary>
        </member>
        <member name="T:System.Runtime.Serialization.Fakes.StubIObjectReference">
            <summary>Тип заглушки System.Runtime.Serialization.IObjectReference</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Fakes.StubIObjectReference.#ctor">
            <summary>Инициализирует новый экземпляр type StubIObjectReference</summary>
        </member>
        <member name="F:System.Runtime.Serialization.Fakes.StubIObjectReference.GetRealObjectStreamingContext">
            <summary>Задает stub IObjectReference.GetRealObject(StreamingContext context)</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Fakes.StubIObjectReference.global::System#Runtime#Serialization#IObjectReference#GetRealObject(System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка IObjectReference.GetRealObject(StreamingContext context)</summary>
        </member>
        <member name="T:System.Runtime.Serialization.Fakes.StubISafeSerializationData">
            <summary>Тип заглушки System.Runtime.Serialization.ISafeSerializationData</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Fakes.StubISafeSerializationData.#ctor">
            <summary>Инициализирует новый экземпляр type StubISafeSerializationData</summary>
        </member>
        <member name="F:System.Runtime.Serialization.Fakes.StubISafeSerializationData.CompleteDeserializationObject">
            <summary>Задает stub ISafeSerializationData.CompleteDeserialization(Object deserialized)</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Fakes.StubISafeSerializationData.global::System#Runtime#Serialization#ISafeSerializationData#CompleteDeserialization(System.Object)">
            <summary>Задает заглушка ISafeSerializationData.CompleteDeserialization(Object deserialized)</summary>
        </member>
        <member name="T:System.Runtime.Serialization.Fakes.StubISerializable">
            <summary>Тип заглушки System.Runtime.Serialization.ISerializable</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Fakes.StubISerializable.#ctor">
            <summary>Инициализирует новый экземпляр type StubISerializable</summary>
        </member>
        <member name="F:System.Runtime.Serialization.Fakes.StubISerializable.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub ISerializable.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Fakes.StubISerializable.global::System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка ISerializable.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="T:System.Runtime.Serialization.Fakes.StubISerializationSurrogate">
            <summary>Тип заглушки System.Runtime.Serialization.ISerializationSurrogate</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Fakes.StubISerializationSurrogate.#ctor">
            <summary>Инициализирует новый экземпляр type StubISerializationSurrogate</summary>
        </member>
        <member name="F:System.Runtime.Serialization.Fakes.StubISerializationSurrogate.GetObjectDataObjectSerializationInfoStreamingContext">
            <summary>Задает stub ISerializationSurrogate.GetObjectData(Object obj, SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Runtime.Serialization.Fakes.StubISerializationSurrogate.SetObjectDataObjectSerializationInfoStreamingContextISurrogateSelector">
            <summary>Задает stub ISerializationSurrogate.SetObjectData(Object obj, SerializationInfo info, StreamingContext context, ISurrogateSelector selector)</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Fakes.StubISerializationSurrogate.global::System#Runtime#Serialization#ISerializationSurrogate#GetObjectData(System.Object,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка ISerializationSurrogate.GetObjectData(Object obj, SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Fakes.StubISerializationSurrogate.global::System#Runtime#Serialization#ISerializationSurrogate#SetObjectData(System.Object,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.ISurrogateSelector)">
            <summary>Задает заглушка ISerializationSurrogate.SetObjectData(Object obj, SerializationInfo info, StreamingContext context, ISurrogateSelector selector)</summary>
        </member>
        <member name="T:System.Runtime.Serialization.Fakes.StubISurrogateSelector">
            <summary>Тип заглушки System.Runtime.Serialization.ISurrogateSelector</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Fakes.StubISurrogateSelector.#ctor">
            <summary>Инициализирует новый экземпляр type StubISurrogateSelector</summary>
        </member>
        <member name="F:System.Runtime.Serialization.Fakes.StubISurrogateSelector.ChainSelectorISurrogateSelector">
            <summary>Задает stub ISurrogateSelector.ChainSelector(ISurrogateSelector selector)</summary>
        </member>
        <member name="F:System.Runtime.Serialization.Fakes.StubISurrogateSelector.GetNextSelector">
            <summary>Задает stub ISurrogateSelector.GetNextSelector()</summary>
        </member>
        <member name="F:System.Runtime.Serialization.Fakes.StubISurrogateSelector.GetSurrogateTypeStreamingContextISurrogateSelectorOut">
            <summary>Задает stub ISurrogateSelector.GetSurrogate(Type type, StreamingContext context, ISurrogateSelector&amp; selector)</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Fakes.StubISurrogateSelector.global::System#Runtime#Serialization#ISurrogateSelector#ChainSelector(System.Runtime.Serialization.ISurrogateSelector)">
            <summary>Задает заглушка ISurrogateSelector.ChainSelector(ISurrogateSelector selector)</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Fakes.StubISurrogateSelector.global::System#Runtime#Serialization#ISurrogateSelector#GetNextSelector">
            <summary>Задает заглушка ISurrogateSelector.GetNextSelector()</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Fakes.StubISurrogateSelector.global::System#Runtime#Serialization#ISurrogateSelector#GetSurrogate(System.Type,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.ISurrogateSelector@)">
            <summary>Задает заглушка ISurrogateSelector.GetSurrogate(Type type, StreamingContext context, ISurrogateSelector&amp; selector)</summary>
        </member>
        <member name="T:System.Runtime.Serialization.Fakes.StubObjectIDGenerator">
            <summary>Тип заглушки System.Runtime.Serialization.ObjectIDGenerator</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Fakes.StubObjectIDGenerator.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Fakes.StubObjectIDGenerator.GetId(System.Object,System.Boolean@)">
            <summary>Задает заглушка ObjectIDGenerator.GetId(Object obj, Boolean&amp; firstTime)</summary>
        </member>
        <member name="F:System.Runtime.Serialization.Fakes.StubObjectIDGenerator.GetIdObjectBooleanOut">
            <summary>Задает stub ObjectIDGenerator.GetId(Object obj, Boolean&amp; firstTime)</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Fakes.StubObjectIDGenerator.HasId(System.Object,System.Boolean@)">
            <summary>Задает заглушка ObjectIDGenerator.HasId(Object obj, Boolean&amp; firstTime)</summary>
        </member>
        <member name="F:System.Runtime.Serialization.Fakes.StubObjectIDGenerator.HasIdObjectBooleanOut">
            <summary>Задает stub ObjectIDGenerator.HasId(Object obj, Boolean&amp; firstTime)</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Fakes.StubObjectIDGenerator.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubObjectIDGenerator</summary>
        </member>
        <member name="P:System.Runtime.Serialization.Fakes.StubObjectIDGenerator.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Runtime.Serialization.Fakes.StubObjectIDGenerator.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.Serialization.Fakes.StubObjectIDGenerator.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Runtime.Serialization.Fakes.StubObjectManager">
            <summary>Тип заглушки System.Runtime.Serialization.ObjectManager</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Fakes.StubObjectManager.#ctor(System.Runtime.Serialization.ISurrogateSelector,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Fakes.StubObjectManager.DoFixups">
            <summary>Задает заглушка ObjectManager.DoFixups()</summary>
        </member>
        <member name="F:System.Runtime.Serialization.Fakes.StubObjectManager.DoFixups01">
            <summary>Задает stub ObjectManager.DoFixups()</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Fakes.StubObjectManager.GetObject(System.Int64)">
            <summary>Задает заглушка ObjectManager.GetObject(Int64 objectID)</summary>
        </member>
        <member name="F:System.Runtime.Serialization.Fakes.StubObjectManager.GetObjectInt64">
            <summary>Задает stub ObjectManager.GetObject(Int64 objectID)</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Fakes.StubObjectManager.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubObjectManager</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Fakes.StubObjectManager.RaiseDeserializationEvent">
            <summary>Задает заглушка ObjectManager.RaiseDeserializationEvent()</summary>
        </member>
        <member name="F:System.Runtime.Serialization.Fakes.StubObjectManager.RaiseDeserializationEvent01">
            <summary>Задает stub ObjectManager.RaiseDeserializationEvent()</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Fakes.StubObjectManager.RecordArrayElementFixup(System.Int64,System.Int32,System.Int64)">
            <summary>Задает заглушка ObjectManager.RecordArrayElementFixup(Int64 arrayToBeFixed, Int32 index, Int64 objectRequired)</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Fakes.StubObjectManager.RecordArrayElementFixup(System.Int64,System.Int32[],System.Int64)">
            <summary>Задает заглушка ObjectManager.RecordArrayElementFixup(Int64 arrayToBeFixed, Int32[] indices, Int64 objectRequired)</summary>
        </member>
        <member name="F:System.Runtime.Serialization.Fakes.StubObjectManager.RecordArrayElementFixupInt64Int32ArrayInt64">
            <summary>Задает stub ObjectManager.RecordArrayElementFixup(Int64 arrayToBeFixed, Int32[] indices, Int64 objectRequired)</summary>
        </member>
        <member name="F:System.Runtime.Serialization.Fakes.StubObjectManager.RecordArrayElementFixupInt64Int32Int64">
            <summary>Задает stub ObjectManager.RecordArrayElementFixup(Int64 arrayToBeFixed, Int32 index, Int64 objectRequired)</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Fakes.StubObjectManager.RecordDelayedFixup(System.Int64,System.String,System.Int64)">
            <summary>Задает заглушка ObjectManager.RecordDelayedFixup(Int64 objectToBeFixed, String memberName, Int64 objectRequired)</summary>
        </member>
        <member name="F:System.Runtime.Serialization.Fakes.StubObjectManager.RecordDelayedFixupInt64StringInt64">
            <summary>Задает stub ObjectManager.RecordDelayedFixup(Int64 objectToBeFixed, String memberName, Int64 objectRequired)</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Fakes.StubObjectManager.RecordFixup(System.Int64,System.Reflection.MemberInfo,System.Int64)">
            <summary>Задает заглушка ObjectManager.RecordFixup(Int64 objectToBeFixed, MemberInfo member, Int64 objectRequired)</summary>
        </member>
        <member name="F:System.Runtime.Serialization.Fakes.StubObjectManager.RecordFixupInt64MemberInfoInt64">
            <summary>Задает stub ObjectManager.RecordFixup(Int64 objectToBeFixed, MemberInfo member, Int64 objectRequired)</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Fakes.StubObjectManager.RegisterObject(System.Object,System.Int64)">
            <summary>Задает заглушка ObjectManager.RegisterObject(Object obj, Int64 objectID)</summary>
        </member>
        <member name="F:System.Runtime.Serialization.Fakes.StubObjectManager.RegisterObjectObjectInt64">
            <summary>Задает stub ObjectManager.RegisterObject(Object obj, Int64 objectID)</summary>
        </member>
        <member name="P:System.Runtime.Serialization.Fakes.StubObjectManager.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Runtime.Serialization.Fakes.StubObjectManager.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.Serialization.Fakes.StubObjectManager.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Runtime.Serialization.Fakes.StubSerializationBinder">
            <summary>Тип заглушки System.Runtime.Serialization.SerializationBinder</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Fakes.StubSerializationBinder.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Fakes.StubSerializationBinder.BindToName(System.Type,System.String@,System.String@)">
            <summary>Задает заглушка SerializationBinder.BindToName(Type serializedType, String&amp; assemblyName, String&amp; typeName)</summary>
        </member>
        <member name="F:System.Runtime.Serialization.Fakes.StubSerializationBinder.BindToNameTypeStringOutStringOut">
            <summary>Задает stub SerializationBinder.BindToName(Type serializedType, String&amp; assemblyName, String&amp; typeName)</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Fakes.StubSerializationBinder.BindToType(System.String,System.String)">
            <summary>Задает заглушка SerializationBinder.BindToType(String assemblyName, String typeName)</summary>
        </member>
        <member name="F:System.Runtime.Serialization.Fakes.StubSerializationBinder.BindToTypeStringString">
            <summary>Задает stub SerializationBinder.BindToType(String assemblyName, String typeName)</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Fakes.StubSerializationBinder.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubSerializationBinder</summary>
        </member>
        <member name="P:System.Runtime.Serialization.Fakes.StubSerializationBinder.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Runtime.Serialization.Fakes.StubSerializationBinder.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.Serialization.Fakes.StubSerializationBinder.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Runtime.Serialization.Fakes.StubSerializationException">
            <summary>Тип заглушки System.Runtime.Serialization.SerializationException</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Fakes.StubSerializationException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Fakes.StubSerializationException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Fakes.StubSerializationException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Fakes.StubSerializationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Fakes.StubSerializationException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubSerializationException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Fakes.StubSerializationException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubSerializationException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Runtime.Serialization.Fakes.StubSerializationException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Fakes.StubSerializationException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Runtime.Serialization.Fakes.StubSerializationException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Fakes.StubSerializationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Runtime.Serialization.Fakes.StubSerializationException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Runtime.Serialization.Fakes.StubSerializationException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Runtime.Serialization.Fakes.StubSerializationException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Fakes.StubSerializationException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubSerializationException</summary>
        </member>
        <member name="F:System.Runtime.Serialization.Fakes.StubSerializationException.MessageGet">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="F:System.Runtime.Serialization.Fakes.StubSerializationException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Runtime.Serialization.Fakes.StubSerializationException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Runtime.Serialization.Fakes.StubSerializationException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Fakes.StubSerializationException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.Runtime.Serialization.Fakes.StubSerializationException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="P:System.Runtime.Serialization.Fakes.StubSerializationException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Runtime.Serialization.Fakes.StubSerializationException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="P:System.Runtime.Serialization.Fakes.StubSerializationException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Runtime.Serialization.Fakes.StubSerializationException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.Serialization.Fakes.StubSerializationException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.Serialization.Fakes.StubSerializationException.Message">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="P:System.Runtime.Serialization.Fakes.StubSerializationException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="P:System.Runtime.Serialization.Fakes.StubSerializationException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Runtime.Serialization.Fakes.StubSurrogateSelector">
            <summary>Тип заглушки System.Runtime.Serialization.SurrogateSelector</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Fakes.StubSurrogateSelector.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Fakes.StubSurrogateSelector.AddSurrogate(System.Type,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.ISerializationSurrogate)">
            <summary>Задает заглушка SurrogateSelector.AddSurrogate(Type type, StreamingContext context, ISerializationSurrogate surrogate)</summary>
        </member>
        <member name="F:System.Runtime.Serialization.Fakes.StubSurrogateSelector.AddSurrogateTypeStreamingContextISerializationSurrogate">
            <summary>Задает stub SurrogateSelector.AddSurrogate(Type type, StreamingContext context, ISerializationSurrogate surrogate)</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Fakes.StubSurrogateSelector.ChainSelector(System.Runtime.Serialization.ISurrogateSelector)">
            <summary>Задает заглушка SurrogateSelector.ChainSelector(ISurrogateSelector selector)</summary>
        </member>
        <member name="F:System.Runtime.Serialization.Fakes.StubSurrogateSelector.ChainSelectorISurrogateSelector">
            <summary>Задает stub SurrogateSelector.ChainSelector(ISurrogateSelector selector)</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Fakes.StubSurrogateSelector.GetNextSelector">
            <summary>Задает заглушка SurrogateSelector.GetNextSelector()</summary>
        </member>
        <member name="F:System.Runtime.Serialization.Fakes.StubSurrogateSelector.GetNextSelector01">
            <summary>Задает stub SurrogateSelector.GetNextSelector()</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Fakes.StubSurrogateSelector.GetSurrogate(System.Type,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.ISurrogateSelector@)">
            <summary>Задает заглушка SurrogateSelector.GetSurrogate(Type type, StreamingContext context, ISurrogateSelector&amp; selector)</summary>
        </member>
        <member name="F:System.Runtime.Serialization.Fakes.StubSurrogateSelector.GetSurrogateTypeStreamingContextISurrogateSelectorOut">
            <summary>Задает stub SurrogateSelector.GetSurrogate(Type type, StreamingContext context, ISurrogateSelector&amp; selector)</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Fakes.StubSurrogateSelector.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubSurrogateSelector</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Fakes.StubSurrogateSelector.RemoveSurrogate(System.Type,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка SurrogateSelector.RemoveSurrogate(Type type, StreamingContext context)</summary>
        </member>
        <member name="F:System.Runtime.Serialization.Fakes.StubSurrogateSelector.RemoveSurrogateTypeStreamingContext">
            <summary>Задает stub SurrogateSelector.RemoveSurrogate(Type type, StreamingContext context)</summary>
        </member>
        <member name="P:System.Runtime.Serialization.Fakes.StubSurrogateSelector.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Runtime.Serialization.Fakes.StubSurrogateSelector.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.Serialization.Fakes.StubSurrogateSelector.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Runtime.Serialization.Formatters.Fakes.StubIFieldInfo">
            <summary>Тип заглушки System.Runtime.Serialization.Formatters.IFieldInfo</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Formatters.Fakes.StubIFieldInfo.#ctor">
            <summary>Инициализирует новый экземпляр type StubIFieldInfo</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Formatters.Fakes.StubIFieldInfo.AttachBackingFieldToFieldNames">
            <summary>Присоединение делегатов для эмуляции StubIFieldInfo.FieldNames как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Formatters.Fakes.StubIFieldInfo.AttachBackingFieldToFieldTypes">
            <summary>Присоединение делегатов для эмуляции StubIFieldInfo.FieldTypes как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Runtime.Serialization.Formatters.Fakes.StubIFieldInfo.FieldNamesGet">
            <summary>Задает stub IFieldInfo.get_FieldNames()</summary>
        </member>
        <member name="F:System.Runtime.Serialization.Formatters.Fakes.StubIFieldInfo.FieldNamesSetStringArray">
            <summary>Задает stub IFieldInfo.set_FieldNames(String[] value)</summary>
        </member>
        <member name="F:System.Runtime.Serialization.Formatters.Fakes.StubIFieldInfo.FieldTypesGet">
            <summary>Задает stub IFieldInfo.get_FieldTypes()</summary>
        </member>
        <member name="F:System.Runtime.Serialization.Formatters.Fakes.StubIFieldInfo.FieldTypesSetTypeArray">
            <summary>Задает stub IFieldInfo.set_FieldTypes(Type[] value)</summary>
        </member>
        <member name="P:System.Runtime.Serialization.Formatters.Fakes.StubIFieldInfo.global::System#Runtime#Serialization#Formatters#IFieldInfo#FieldNames">
            <summary>Задает stub IFieldInfo.get_FieldNames()</summary>
        </member>
        <member name="P:System.Runtime.Serialization.Formatters.Fakes.StubIFieldInfo.global::System#Runtime#Serialization#Formatters#IFieldInfo#FieldTypes">
            <summary>Задает stub IFieldInfo.get_FieldTypes()</summary>
        </member>
        <member name="T:System.Runtime.Serialization.Formatters.Fakes.StubISoapMessage">
            <summary>Тип заглушки System.Runtime.Serialization.Formatters.ISoapMessage</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Formatters.Fakes.StubISoapMessage.#ctor">
            <summary>Инициализирует новый экземпляр type StubISoapMessage</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Formatters.Fakes.StubISoapMessage.AttachBackingFieldToHeaders">
            <summary>Присоединение делегатов для эмуляции StubISoapMessage.Headers как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Formatters.Fakes.StubISoapMessage.AttachBackingFieldToMethodName">
            <summary>Присоединение делегатов для эмуляции StubISoapMessage.MethodName как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Formatters.Fakes.StubISoapMessage.AttachBackingFieldToParamNames">
            <summary>Присоединение делегатов для эмуляции StubISoapMessage.ParamNames как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Formatters.Fakes.StubISoapMessage.AttachBackingFieldToParamTypes">
            <summary>Присоединение делегатов для эмуляции StubISoapMessage.ParamTypes как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Formatters.Fakes.StubISoapMessage.AttachBackingFieldToParamValues">
            <summary>Присоединение делегатов для эмуляции StubISoapMessage.ParamValues как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Formatters.Fakes.StubISoapMessage.AttachBackingFieldToXmlNameSpace">
            <summary>Присоединение делегатов для эмуляции StubISoapMessage.XmlNameSpace как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Runtime.Serialization.Formatters.Fakes.StubISoapMessage.HeadersGet">
            <summary>Задает stub ISoapMessage.get_Headers()</summary>
        </member>
        <member name="F:System.Runtime.Serialization.Formatters.Fakes.StubISoapMessage.HeadersSetHeaderArray">
            <summary>Задает stub ISoapMessage.set_Headers(Header[] value)</summary>
        </member>
        <member name="F:System.Runtime.Serialization.Formatters.Fakes.StubISoapMessage.MethodNameGet">
            <summary>Задает stub ISoapMessage.get_MethodName()</summary>
        </member>
        <member name="F:System.Runtime.Serialization.Formatters.Fakes.StubISoapMessage.MethodNameSetString">
            <summary>Задает stub ISoapMessage.set_MethodName(String value)</summary>
        </member>
        <member name="F:System.Runtime.Serialization.Formatters.Fakes.StubISoapMessage.ParamNamesGet">
            <summary>Задает stub ISoapMessage.get_ParamNames()</summary>
        </member>
        <member name="F:System.Runtime.Serialization.Formatters.Fakes.StubISoapMessage.ParamNamesSetStringArray">
            <summary>Задает stub ISoapMessage.set_ParamNames(String[] value)</summary>
        </member>
        <member name="F:System.Runtime.Serialization.Formatters.Fakes.StubISoapMessage.ParamTypesGet">
            <summary>Задает stub ISoapMessage.get_ParamTypes()</summary>
        </member>
        <member name="F:System.Runtime.Serialization.Formatters.Fakes.StubISoapMessage.ParamTypesSetTypeArray">
            <summary>Задает stub ISoapMessage.set_ParamTypes(Type[] value)</summary>
        </member>
        <member name="F:System.Runtime.Serialization.Formatters.Fakes.StubISoapMessage.ParamValuesGet">
            <summary>Задает stub ISoapMessage.get_ParamValues()</summary>
        </member>
        <member name="F:System.Runtime.Serialization.Formatters.Fakes.StubISoapMessage.ParamValuesSetObjectArray">
            <summary>Задает stub ISoapMessage.set_ParamValues(Object[] value)</summary>
        </member>
        <member name="F:System.Runtime.Serialization.Formatters.Fakes.StubISoapMessage.XmlNameSpaceGet">
            <summary>Задает stub ISoapMessage.get_XmlNameSpace()</summary>
        </member>
        <member name="F:System.Runtime.Serialization.Formatters.Fakes.StubISoapMessage.XmlNameSpaceSetString">
            <summary>Задает stub ISoapMessage.set_XmlNameSpace(String value)</summary>
        </member>
        <member name="P:System.Runtime.Serialization.Formatters.Fakes.StubISoapMessage.global::System#Runtime#Serialization#Formatters#ISoapMessage#Headers">
            <summary>Задает stub ISoapMessage.get_Headers()</summary>
        </member>
        <member name="P:System.Runtime.Serialization.Formatters.Fakes.StubISoapMessage.global::System#Runtime#Serialization#Formatters#ISoapMessage#MethodName">
            <summary>Задает stub ISoapMessage.get_MethodName()</summary>
        </member>
        <member name="P:System.Runtime.Serialization.Formatters.Fakes.StubISoapMessage.global::System#Runtime#Serialization#Formatters#ISoapMessage#ParamNames">
            <summary>Задает stub ISoapMessage.get_ParamNames()</summary>
        </member>
        <member name="P:System.Runtime.Serialization.Formatters.Fakes.StubISoapMessage.global::System#Runtime#Serialization#Formatters#ISoapMessage#ParamTypes">
            <summary>Задает stub ISoapMessage.get_ParamTypes()</summary>
        </member>
        <member name="P:System.Runtime.Serialization.Formatters.Fakes.StubISoapMessage.global::System#Runtime#Serialization#Formatters#ISoapMessage#ParamValues">
            <summary>Задает stub ISoapMessage.get_ParamValues()</summary>
        </member>
        <member name="P:System.Runtime.Serialization.Formatters.Fakes.StubISoapMessage.global::System#Runtime#Serialization#Formatters#ISoapMessage#XmlNameSpace">
            <summary>Задает stub ISoapMessage.get_XmlNameSpace()</summary>
        </member>
        <member name="T:System.Runtime.Serialization.Formatters.Fakes.StubSoapMessage">
            <summary>Тип заглушки System.Runtime.Serialization.Formatters.SoapMessage</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Formatters.Fakes.StubSoapMessage.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Formatters.Fakes.StubSoapMessage.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubSoapMessage</summary>
        </member>
        <member name="P:System.Runtime.Serialization.Formatters.Fakes.StubSoapMessage.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Runtime.Serialization.Formatters.Fakes.StubSoapMessage.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Runtime.Serialization.Formatters.Fakes.StubSoapMessage.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Security.AccessControl.Fakes.StubAccessRule">
            <summary>Тип заглушки System.Security.AccessControl.AccessRule</summary>
        </member>
        <member name="M:System.Security.AccessControl.Fakes.StubAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.AccessControl.Fakes.StubAccessRule.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubAccessRule</summary>
        </member>
        <member name="P:System.Security.AccessControl.Fakes.StubAccessRule.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Security.AccessControl.Fakes.StubAccessRule.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Security.AccessControl.Fakes.StubAccessRule.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Security.AccessControl.Fakes.StubAuditRule">
            <summary>Тип заглушки System.Security.AccessControl.AuditRule</summary>
        </member>
        <member name="M:System.Security.AccessControl.Fakes.StubAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.AccessControl.Fakes.StubAuditRule.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubAuditRule</summary>
        </member>
        <member name="P:System.Security.AccessControl.Fakes.StubAuditRule.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Security.AccessControl.Fakes.StubAuditRule.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Security.AccessControl.Fakes.StubAuditRule.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Security.AccessControl.Fakes.StubAuthorizationRule">
            <summary>Тип заглушки System.Security.AccessControl.AuthorizationRule</summary>
        </member>
        <member name="M:System.Security.AccessControl.Fakes.StubAuthorizationRule.#ctor(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.AccessControl.Fakes.StubAuthorizationRule.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubAuthorizationRule</summary>
        </member>
        <member name="P:System.Security.AccessControl.Fakes.StubAuthorizationRule.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Security.AccessControl.Fakes.StubAuthorizationRule.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Security.AccessControl.Fakes.StubAuthorizationRule.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Security.AccessControl.Fakes.StubGenericAcl">
            <summary>Тип заглушки System.Security.AccessControl.GenericAcl</summary>
        </member>
        <member name="M:System.Security.AccessControl.Fakes.StubGenericAcl.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="F:System.Security.AccessControl.Fakes.StubGenericAcl.BinaryLengthGet">
            <summary>Задает stub GenericAcl.get_BinaryLength()</summary>
        </member>
        <member name="F:System.Security.AccessControl.Fakes.StubGenericAcl.CountGet">
            <summary>Задает stub GenericAcl.get_Count()</summary>
        </member>
        <member name="M:System.Security.AccessControl.Fakes.StubGenericAcl.GetBinaryForm(System.Byte[],System.Int32)">
            <summary>Задает заглушка GenericAcl.GetBinaryForm(Byte[] binaryForm, Int32 offset)</summary>
        </member>
        <member name="F:System.Security.AccessControl.Fakes.StubGenericAcl.GetBinaryFormByteArrayInt32">
            <summary>Задает stub GenericAcl.GetBinaryForm(Byte[] binaryForm, Int32 offset)</summary>
        </member>
        <member name="M:System.Security.AccessControl.Fakes.StubGenericAcl.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubGenericAcl</summary>
        </member>
        <member name="F:System.Security.AccessControl.Fakes.StubGenericAcl.ItemGetInt32">
            <summary>Задает stub GenericAcl.get_Item(Int32 index)</summary>
        </member>
        <member name="F:System.Security.AccessControl.Fakes.StubGenericAcl.ItemSetInt32GenericAce">
            <summary>Задает stub GenericAcl.set_Item(Int32 index, GenericAce value)</summary>
        </member>
        <member name="F:System.Security.AccessControl.Fakes.StubGenericAcl.RevisionGet">
            <summary>Задает stub GenericAcl.get_Revision()</summary>
        </member>
        <member name="F:System.Security.AccessControl.Fakes.StubGenericAcl.SyncRootGet">
            <summary>Задает stub GenericAcl.get_SyncRoot()</summary>
        </member>
        <member name="P:System.Security.AccessControl.Fakes.StubGenericAcl.BinaryLength">
            <summary>Задает stub GenericAcl.get_BinaryLength()</summary>
        </member>
        <member name="P:System.Security.AccessControl.Fakes.StubGenericAcl.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Security.AccessControl.Fakes.StubGenericAcl.Count">
            <summary>Задает stub GenericAcl.get_Count()</summary>
        </member>
        <member name="P:System.Security.AccessControl.Fakes.StubGenericAcl.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Security.AccessControl.Fakes.StubGenericAcl.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Security.AccessControl.Fakes.StubGenericAcl.Item(System.Int32)">
            <summary>Задает stub GenericAcl.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.Security.AccessControl.Fakes.StubGenericAcl.Revision">
            <summary>Задает stub GenericAcl.get_Revision()</summary>
        </member>
        <member name="P:System.Security.AccessControl.Fakes.StubGenericAcl.SyncRoot">
            <summary>Задает stub GenericAcl.get_SyncRoot()</summary>
        </member>
        <member name="T:System.Security.AccessControl.Fakes.StubObjectAccessRule">
            <summary>Тип заглушки System.Security.AccessControl.ObjectAccessRule</summary>
        </member>
        <member name="M:System.Security.AccessControl.Fakes.StubObjectAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Guid,System.Guid,System.Security.AccessControl.AccessControlType)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.AccessControl.Fakes.StubObjectAccessRule.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubObjectAccessRule</summary>
        </member>
        <member name="P:System.Security.AccessControl.Fakes.StubObjectAccessRule.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Security.AccessControl.Fakes.StubObjectAccessRule.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Security.AccessControl.Fakes.StubObjectAccessRule.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Security.AccessControl.Fakes.StubObjectAuditRule">
            <summary>Тип заглушки System.Security.AccessControl.ObjectAuditRule</summary>
        </member>
        <member name="M:System.Security.AccessControl.Fakes.StubObjectAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Guid,System.Guid,System.Security.AccessControl.AuditFlags)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.AccessControl.Fakes.StubObjectAuditRule.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubObjectAuditRule</summary>
        </member>
        <member name="P:System.Security.AccessControl.Fakes.StubObjectAuditRule.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Security.AccessControl.Fakes.StubObjectAuditRule.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Security.AccessControl.Fakes.StubObjectAuditRule.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate">
            <summary>Тип заглушки System.Security.Cryptography.X509Certificates.X509Certificate</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.#ctor(System.Byte[])">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.#ctor(System.IntPtr)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.#ctor(System.String,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.#ctor(System.String,System.Security.SecureString)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.#ctor(System.Byte[],System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.#ctor(System.Byte[],System.Security.SecureString)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.#ctor(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.#ctor(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.#ctor(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.Equals(System.Object)">
            <summary>Задает заглушка X509Certificate.Equals(Object obj)</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.Equals(System.Security.Cryptography.X509Certificates.X509Certificate)">
            <summary>Задает заглушка X509Certificate.Equals(X509Certificate other)</summary>
        </member>
        <member name="F:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.EqualsObject">
            <summary>Задает stub X509Certificate.Equals(Object obj)</summary>
        </member>
        <member name="F:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.EqualsX509Certificate">
            <summary>Задает stub X509Certificate.Equals(X509Certificate other)</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType)">
            <summary>Задает заглушка X509Certificate.Export(X509ContentType contentType)</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.String)">
            <summary>Задает заглушка X509Certificate.Export(X509ContentType contentType, String password)</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.Security.SecureString)">
            <summary>Задает заглушка X509Certificate.Export(X509ContentType contentType, SecureString password)</summary>
        </member>
        <member name="F:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.ExportX509ContentType">
            <summary>Задает stub X509Certificate.Export(X509ContentType contentType)</summary>
        </member>
        <member name="F:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.ExportX509ContentTypeSecureString">
            <summary>Задает stub X509Certificate.Export(X509ContentType contentType, SecureString password)</summary>
        </member>
        <member name="F:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.ExportX509ContentTypeString">
            <summary>Задает stub X509Certificate.Export(X509ContentType contentType, String password)</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.GetCertHash">
            <summary>Задает заглушка X509Certificate.GetCertHash()</summary>
        </member>
        <member name="F:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.GetCertHash01">
            <summary>Задает stub X509Certificate.GetCertHash()</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.GetCertHashString">
            <summary>Задает заглушка X509Certificate.GetCertHashString()</summary>
        </member>
        <member name="F:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.GetCertHashString01">
            <summary>Задает stub X509Certificate.GetCertHashString()</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.GetEffectiveDateString">
            <summary>Задает заглушка X509Certificate.GetEffectiveDateString()</summary>
        </member>
        <member name="F:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.GetEffectiveDateString01">
            <summary>Задает stub X509Certificate.GetEffectiveDateString()</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.GetExpirationDateString">
            <summary>Задает заглушка X509Certificate.GetExpirationDateString()</summary>
        </member>
        <member name="F:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.GetExpirationDateString01">
            <summary>Задает stub X509Certificate.GetExpirationDateString()</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.GetFormat">
            <summary>Задает заглушка X509Certificate.GetFormat()</summary>
        </member>
        <member name="F:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.GetFormat01">
            <summary>Задает stub X509Certificate.GetFormat()</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.GetHashCode">
            <summary>Задает заглушка X509Certificate.GetHashCode()</summary>
        </member>
        <member name="F:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.GetHashCode01">
            <summary>Задает stub X509Certificate.GetHashCode()</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.GetIssuerName">
            <summary>Задает заглушка X509Certificate.GetIssuerName()</summary>
        </member>
        <member name="F:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.GetIssuerName01">
            <summary>Задает stub X509Certificate.GetIssuerName()</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.GetKeyAlgorithm">
            <summary>Задает заглушка X509Certificate.GetKeyAlgorithm()</summary>
        </member>
        <member name="F:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.GetKeyAlgorithm01">
            <summary>Задает stub X509Certificate.GetKeyAlgorithm()</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.GetKeyAlgorithmParameters">
            <summary>Задает заглушка X509Certificate.GetKeyAlgorithmParameters()</summary>
        </member>
        <member name="F:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.GetKeyAlgorithmParameters01">
            <summary>Задает stub X509Certificate.GetKeyAlgorithmParameters()</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.GetKeyAlgorithmParametersString">
            <summary>Задает заглушка X509Certificate.GetKeyAlgorithmParametersString()</summary>
        </member>
        <member name="F:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.GetKeyAlgorithmParametersString01">
            <summary>Задает stub X509Certificate.GetKeyAlgorithmParametersString()</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.GetName">
            <summary>Задает заглушка X509Certificate.GetName()</summary>
        </member>
        <member name="F:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.GetName01">
            <summary>Задает stub X509Certificate.GetName()</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.GetPublicKey">
            <summary>Задает заглушка X509Certificate.GetPublicKey()</summary>
        </member>
        <member name="F:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.GetPublicKey01">
            <summary>Задает stub X509Certificate.GetPublicKey()</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.GetPublicKeyString">
            <summary>Задает заглушка X509Certificate.GetPublicKeyString()</summary>
        </member>
        <member name="F:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.GetPublicKeyString01">
            <summary>Задает stub X509Certificate.GetPublicKeyString()</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.GetRawCertData">
            <summary>Задает заглушка X509Certificate.GetRawCertData()</summary>
        </member>
        <member name="F:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.GetRawCertData01">
            <summary>Задает stub X509Certificate.GetRawCertData()</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.GetRawCertDataString">
            <summary>Задает заглушка X509Certificate.GetRawCertDataString()</summary>
        </member>
        <member name="F:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.GetRawCertDataString01">
            <summary>Задает stub X509Certificate.GetRawCertDataString()</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.GetSerialNumber">
            <summary>Задает заглушка X509Certificate.GetSerialNumber()</summary>
        </member>
        <member name="F:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.GetSerialNumber01">
            <summary>Задает stub X509Certificate.GetSerialNumber()</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.GetSerialNumberString">
            <summary>Задает заглушка X509Certificate.GetSerialNumberString()</summary>
        </member>
        <member name="F:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.GetSerialNumberString01">
            <summary>Задает stub X509Certificate.GetSerialNumberString()</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.Import(System.String)">
            <summary>Задает заглушка X509Certificate.Import(String fileName)</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.Import(System.Byte[])">
            <summary>Задает заглушка X509Certificate.Import(Byte[] rawData)</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.Import(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)">
            <summary>Задает заглушка X509Certificate.Import(String fileName, String password, X509KeyStorageFlags keyStorageFlags)</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.Import(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)">
            <summary>Задает заглушка X509Certificate.Import(String fileName, SecureString password, X509KeyStorageFlags keyStorageFlags)</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.Import(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)">
            <summary>Задает заглушка X509Certificate.Import(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags)</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.Import(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)">
            <summary>Задает заглушка X509Certificate.Import(Byte[] rawData, SecureString password, X509KeyStorageFlags keyStorageFlags)</summary>
        </member>
        <member name="F:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.ImportByteArray">
            <summary>Задает stub X509Certificate.Import(Byte[] rawData)</summary>
        </member>
        <member name="F:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.ImportByteArraySecureStringX509KeyStorageFlags">
            <summary>Задает stub X509Certificate.Import(Byte[] rawData, SecureString password, X509KeyStorageFlags keyStorageFlags)</summary>
        </member>
        <member name="F:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.ImportByteArrayStringX509KeyStorageFlags">
            <summary>Задает stub X509Certificate.Import(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags)</summary>
        </member>
        <member name="F:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.ImportString">
            <summary>Задает stub X509Certificate.Import(String fileName)</summary>
        </member>
        <member name="F:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.ImportStringSecureStringX509KeyStorageFlags">
            <summary>Задает stub X509Certificate.Import(String fileName, SecureString password, X509KeyStorageFlags keyStorageFlags)</summary>
        </member>
        <member name="F:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.ImportStringStringX509KeyStorageFlags">
            <summary>Задает stub X509Certificate.Import(String fileName, String password, X509KeyStorageFlags keyStorageFlags)</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubX509Certificate</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.Reset">
            <summary>Задает заглушка X509Certificate.Reset()</summary>
        </member>
        <member name="F:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.Reset01">
            <summary>Задает stub X509Certificate.Reset()</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.ToString">
            <summary>Задает заглушка X509Certificate.ToString()</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.ToString(System.Boolean)">
            <summary>Задает заглушка X509Certificate.ToString(Boolean fVerbose)</summary>
        </member>
        <member name="F:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.ToString01">
            <summary>Задает stub X509Certificate.ToString()</summary>
        </member>
        <member name="F:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.ToStringBoolean">
            <summary>Задает stub X509Certificate.ToString(Boolean fVerbose)</summary>
        </member>
        <member name="P:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Security.Cryptography.X509Certificates.Fakes.StubX509Certificate.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Security.Fakes.StubCodeAccessPermission">
            <summary>Тип заглушки System.Security.CodeAccessPermission</summary>
        </member>
        <member name="M:System.Security.Fakes.StubCodeAccessPermission.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.Fakes.StubCodeAccessPermission.Copy">
            <summary>Задает заглушка CodeAccessPermission.Copy()</summary>
        </member>
        <member name="F:System.Security.Fakes.StubCodeAccessPermission.Copy01">
            <summary>Задает stub CodeAccessPermission.Copy()</summary>
        </member>
        <member name="M:System.Security.Fakes.StubCodeAccessPermission.Equals(System.Object)">
            <summary>Задает заглушка CodeAccessPermission.Equals(Object obj)</summary>
        </member>
        <member name="F:System.Security.Fakes.StubCodeAccessPermission.EqualsObject">
            <summary>Задает stub CodeAccessPermission.Equals(Object obj)</summary>
        </member>
        <member name="M:System.Security.Fakes.StubCodeAccessPermission.FromXml(System.Security.SecurityElement)">
            <summary>Задает заглушка CodeAccessPermission.FromXml(SecurityElement elem)</summary>
        </member>
        <member name="F:System.Security.Fakes.StubCodeAccessPermission.FromXmlSecurityElement">
            <summary>Задает stub CodeAccessPermission.FromXml(SecurityElement elem)</summary>
        </member>
        <member name="M:System.Security.Fakes.StubCodeAccessPermission.GetHashCode">
            <summary>Задает заглушка CodeAccessPermission.GetHashCode()</summary>
        </member>
        <member name="F:System.Security.Fakes.StubCodeAccessPermission.GetHashCode01">
            <summary>Задает stub CodeAccessPermission.GetHashCode()</summary>
        </member>
        <member name="M:System.Security.Fakes.StubCodeAccessPermission.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeAccessPermission</summary>
        </member>
        <member name="M:System.Security.Fakes.StubCodeAccessPermission.Intersect(System.Security.IPermission)">
            <summary>Задает заглушка CodeAccessPermission.Intersect(IPermission target)</summary>
        </member>
        <member name="F:System.Security.Fakes.StubCodeAccessPermission.IntersectIPermission">
            <summary>Задает stub CodeAccessPermission.Intersect(IPermission target)</summary>
        </member>
        <member name="M:System.Security.Fakes.StubCodeAccessPermission.IsSubsetOf(System.Security.IPermission)">
            <summary>Задает заглушка CodeAccessPermission.IsSubsetOf(IPermission target)</summary>
        </member>
        <member name="F:System.Security.Fakes.StubCodeAccessPermission.IsSubsetOfIPermission">
            <summary>Задает stub CodeAccessPermission.IsSubsetOf(IPermission target)</summary>
        </member>
        <member name="M:System.Security.Fakes.StubCodeAccessPermission.ToString">
            <summary>Задает заглушка CodeAccessPermission.ToString()</summary>
        </member>
        <member name="F:System.Security.Fakes.StubCodeAccessPermission.ToString01">
            <summary>Задает stub CodeAccessPermission.ToString()</summary>
        </member>
        <member name="M:System.Security.Fakes.StubCodeAccessPermission.ToXml">
            <summary>Задает заглушка CodeAccessPermission.ToXml()</summary>
        </member>
        <member name="F:System.Security.Fakes.StubCodeAccessPermission.ToXml01">
            <summary>Задает stub CodeAccessPermission.ToXml()</summary>
        </member>
        <member name="M:System.Security.Fakes.StubCodeAccessPermission.Union(System.Security.IPermission)">
            <summary>Задает заглушка CodeAccessPermission.Union(IPermission other)</summary>
        </member>
        <member name="F:System.Security.Fakes.StubCodeAccessPermission.UnionIPermission">
            <summary>Задает stub CodeAccessPermission.Union(IPermission other)</summary>
        </member>
        <member name="P:System.Security.Fakes.StubCodeAccessPermission.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Security.Fakes.StubCodeAccessPermission.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Security.Fakes.StubCodeAccessPermission.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Security.Fakes.StubHostProtectionException">
            <summary>Тип заглушки System.Security.HostProtectionException</summary>
        </member>
        <member name="M:System.Security.Fakes.StubHostProtectionException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.Fakes.StubHostProtectionException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.Fakes.StubHostProtectionException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.Fakes.StubHostProtectionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.Fakes.StubHostProtectionException.#ctor(System.String,System.Security.Permissions.HostProtectionResource,System.Security.Permissions.HostProtectionResource)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.Fakes.StubHostProtectionException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubHostProtectionException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Security.Fakes.StubHostProtectionException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubHostProtectionException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Security.Fakes.StubHostProtectionException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.Security.Fakes.StubHostProtectionException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Security.Fakes.StubHostProtectionException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Security.Fakes.StubHostProtectionException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка HostProtectionException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Security.Fakes.StubHostProtectionException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub HostProtectionException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Security.Fakes.StubHostProtectionException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Security.Fakes.StubHostProtectionException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Security.Fakes.StubHostProtectionException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubHostProtectionException</summary>
        </member>
        <member name="F:System.Security.Fakes.StubHostProtectionException.MessageGet">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="F:System.Security.Fakes.StubHostProtectionException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Security.Fakes.StubHostProtectionException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Security.Fakes.StubHostProtectionException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Security.Fakes.StubHostProtectionException.ToString">
            <summary>Задает заглушка HostProtectionException.ToString()</summary>
        </member>
        <member name="F:System.Security.Fakes.StubHostProtectionException.ToString01">
            <summary>Задает stub HostProtectionException.ToString()</summary>
        </member>
        <member name="P:System.Security.Fakes.StubHostProtectionException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Security.Fakes.StubHostProtectionException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="P:System.Security.Fakes.StubHostProtectionException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Security.Fakes.StubHostProtectionException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Security.Fakes.StubHostProtectionException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Security.Fakes.StubHostProtectionException.Message">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="P:System.Security.Fakes.StubHostProtectionException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="P:System.Security.Fakes.StubHostProtectionException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Security.Fakes.StubHostSecurityManager">
            <summary>Тип заглушки System.Security.HostSecurityManager</summary>
        </member>
        <member name="M:System.Security.Fakes.StubHostSecurityManager.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.Fakes.StubHostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)">
            <summary>Задает заглушка HostSecurityManager.DetermineApplicationTrust(Evidence applicationEvidence, Evidence activatorEvidence, TrustManagerContext context)</summary>
        </member>
        <member name="F:System.Security.Fakes.StubHostSecurityManager.DetermineApplicationTrustEvidenceEvidenceTrustManagerContext">
            <summary>Задает stub HostSecurityManager.DetermineApplicationTrust(Evidence applicationEvidence, Evidence activatorEvidence, TrustManagerContext context)</summary>
        </member>
        <member name="F:System.Security.Fakes.StubHostSecurityManager.DomainPolicyGet">
            <summary>Задает stub HostSecurityManager.get_DomainPolicy()</summary>
        </member>
        <member name="F:System.Security.Fakes.StubHostSecurityManager.FlagsGet">
            <summary>Задает stub HostSecurityManager.get_Flags()</summary>
        </member>
        <member name="M:System.Security.Fakes.StubHostSecurityManager.GenerateAppDomainEvidence(System.Type)">
            <summary>Задает заглушка HostSecurityManager.GenerateAppDomainEvidence(Type evidenceType)</summary>
        </member>
        <member name="F:System.Security.Fakes.StubHostSecurityManager.GenerateAppDomainEvidenceType">
            <summary>Задает stub HostSecurityManager.GenerateAppDomainEvidence(Type evidenceType)</summary>
        </member>
        <member name="M:System.Security.Fakes.StubHostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)">
            <summary>Задает заглушка HostSecurityManager.GenerateAssemblyEvidence(Type evidenceType, Assembly assembly)</summary>
        </member>
        <member name="F:System.Security.Fakes.StubHostSecurityManager.GenerateAssemblyEvidenceTypeAssembly">
            <summary>Задает stub HostSecurityManager.GenerateAssemblyEvidence(Type evidenceType, Assembly assembly)</summary>
        </member>
        <member name="M:System.Security.Fakes.StubHostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes">
            <summary>Задает заглушка HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes()</summary>
        </member>
        <member name="F:System.Security.Fakes.StubHostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes01">
            <summary>Задает stub HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes()</summary>
        </member>
        <member name="M:System.Security.Fakes.StubHostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(System.Reflection.Assembly)">
            <summary>Задает заглушка HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(Assembly assembly)</summary>
        </member>
        <member name="F:System.Security.Fakes.StubHostSecurityManager.GetHostSuppliedAssemblyEvidenceTypesAssembly">
            <summary>Задает stub HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(Assembly assembly)</summary>
        </member>
        <member name="M:System.Security.Fakes.StubHostSecurityManager.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubHostSecurityManager</summary>
        </member>
        <member name="M:System.Security.Fakes.StubHostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)">
            <summary>Задает заглушка HostSecurityManager.ProvideAppDomainEvidence(Evidence inputEvidence)</summary>
        </member>
        <member name="F:System.Security.Fakes.StubHostSecurityManager.ProvideAppDomainEvidenceEvidence">
            <summary>Задает stub HostSecurityManager.ProvideAppDomainEvidence(Evidence inputEvidence)</summary>
        </member>
        <member name="M:System.Security.Fakes.StubHostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)">
            <summary>Задает заглушка HostSecurityManager.ProvideAssemblyEvidence(Assembly loadedAssembly, Evidence inputEvidence)</summary>
        </member>
        <member name="F:System.Security.Fakes.StubHostSecurityManager.ProvideAssemblyEvidenceAssemblyEvidence">
            <summary>Задает stub HostSecurityManager.ProvideAssemblyEvidence(Assembly loadedAssembly, Evidence inputEvidence)</summary>
        </member>
        <member name="M:System.Security.Fakes.StubHostSecurityManager.ResolvePolicy(System.Security.Policy.Evidence)">
            <summary>Задает заглушка HostSecurityManager.ResolvePolicy(Evidence evidence)</summary>
        </member>
        <member name="F:System.Security.Fakes.StubHostSecurityManager.ResolvePolicyEvidence">
            <summary>Задает stub HostSecurityManager.ResolvePolicy(Evidence evidence)</summary>
        </member>
        <member name="P:System.Security.Fakes.StubHostSecurityManager.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Security.Fakes.StubHostSecurityManager.DomainPolicy">
            <summary>Задает stub HostSecurityManager.get_DomainPolicy()</summary>
        </member>
        <member name="P:System.Security.Fakes.StubHostSecurityManager.Flags">
            <summary>Задает stub HostSecurityManager.get_Flags()</summary>
        </member>
        <member name="P:System.Security.Fakes.StubHostSecurityManager.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Security.Fakes.StubHostSecurityManager.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Security.Fakes.StubIEvidenceFactory">
            <summary>Тип заглушки System.Security.IEvidenceFactory</summary>
        </member>
        <member name="M:System.Security.Fakes.StubIEvidenceFactory.#ctor">
            <summary>Инициализирует новый экземпляр type StubIEvidenceFactory</summary>
        </member>
        <member name="F:System.Security.Fakes.StubIEvidenceFactory.EvidenceGet">
            <summary>Задает stub IEvidenceFactory.get_Evidence()</summary>
        </member>
        <member name="P:System.Security.Fakes.StubIEvidenceFactory.global::System#Security#IEvidenceFactory#Evidence">
            <summary>Задает stub IEvidenceFactory.get_Evidence()</summary>
        </member>
        <member name="T:System.Security.Fakes.StubIPermission">
            <summary>Тип заглушки System.Security.IPermission</summary>
        </member>
        <member name="M:System.Security.Fakes.StubIPermission.#ctor">
            <summary>Инициализирует новый экземпляр type StubIPermission</summary>
        </member>
        <member name="F:System.Security.Fakes.StubIPermission.Copy">
            <summary>Задает stub IPermission.Copy()</summary>
        </member>
        <member name="F:System.Security.Fakes.StubIPermission.Demand">
            <summary>Задает stub IPermission.Demand()</summary>
        </member>
        <member name="F:System.Security.Fakes.StubIPermission.FromXmlSecurityElement">
            <summary>Задает stub ISecurityEncodable.FromXml(SecurityElement e)</summary>
        </member>
        <member name="F:System.Security.Fakes.StubIPermission.IntersectIPermission">
            <summary>Задает stub IPermission.Intersect(IPermission target)</summary>
        </member>
        <member name="F:System.Security.Fakes.StubIPermission.IsSubsetOfIPermission">
            <summary>Задает stub IPermission.IsSubsetOf(IPermission target)</summary>
        </member>
        <member name="M:System.Security.Fakes.StubIPermission.global::System#Security#IPermission#Copy">
            <summary>Задает заглушка IPermission.Copy()</summary>
        </member>
        <member name="M:System.Security.Fakes.StubIPermission.global::System#Security#IPermission#Demand">
            <summary>Задает заглушка IPermission.Demand()</summary>
        </member>
        <member name="M:System.Security.Fakes.StubIPermission.global::System#Security#IPermission#Intersect(System.Security.IPermission)">
            <summary>Задает заглушка IPermission.Intersect(IPermission target)</summary>
        </member>
        <member name="M:System.Security.Fakes.StubIPermission.global::System#Security#IPermission#IsSubsetOf(System.Security.IPermission)">
            <summary>Задает заглушка IPermission.IsSubsetOf(IPermission target)</summary>
        </member>
        <member name="M:System.Security.Fakes.StubIPermission.global::System#Security#IPermission#Union(System.Security.IPermission)">
            <summary>Задает заглушка IPermission.Union(IPermission target)</summary>
        </member>
        <member name="M:System.Security.Fakes.StubIPermission.global::System#Security#ISecurityEncodable#FromXml(System.Security.SecurityElement)">
            <summary>Задает заглушка ISecurityEncodable.FromXml(SecurityElement e)</summary>
        </member>
        <member name="M:System.Security.Fakes.StubIPermission.global::System#Security#ISecurityEncodable#ToXml">
            <summary>Задает заглушка ISecurityEncodable.ToXml()</summary>
        </member>
        <member name="F:System.Security.Fakes.StubIPermission.ToXml">
            <summary>Задает stub ISecurityEncodable.ToXml()</summary>
        </member>
        <member name="F:System.Security.Fakes.StubIPermission.UnionIPermission">
            <summary>Задает stub IPermission.Union(IPermission target)</summary>
        </member>
        <member name="T:System.Security.Fakes.StubISecurityEncodable">
            <summary>Тип заглушки System.Security.ISecurityEncodable</summary>
        </member>
        <member name="M:System.Security.Fakes.StubISecurityEncodable.#ctor">
            <summary>Инициализирует новый экземпляр type StubISecurityEncodable</summary>
        </member>
        <member name="F:System.Security.Fakes.StubISecurityEncodable.FromXmlSecurityElement">
            <summary>Задает stub ISecurityEncodable.FromXml(SecurityElement e)</summary>
        </member>
        <member name="M:System.Security.Fakes.StubISecurityEncodable.global::System#Security#ISecurityEncodable#FromXml(System.Security.SecurityElement)">
            <summary>Задает заглушка ISecurityEncodable.FromXml(SecurityElement e)</summary>
        </member>
        <member name="M:System.Security.Fakes.StubISecurityEncodable.global::System#Security#ISecurityEncodable#ToXml">
            <summary>Задает заглушка ISecurityEncodable.ToXml()</summary>
        </member>
        <member name="F:System.Security.Fakes.StubISecurityEncodable.ToXml">
            <summary>Задает stub ISecurityEncodable.ToXml()</summary>
        </member>
        <member name="T:System.Security.Fakes.StubISecurityPolicyEncodable">
            <summary>Тип заглушки System.Security.ISecurityPolicyEncodable</summary>
        </member>
        <member name="M:System.Security.Fakes.StubISecurityPolicyEncodable.#ctor">
            <summary>Инициализирует новый экземпляр type StubISecurityPolicyEncodable</summary>
        </member>
        <member name="F:System.Security.Fakes.StubISecurityPolicyEncodable.FromXmlSecurityElementPolicyLevel">
            <summary>Задает stub ISecurityPolicyEncodable.FromXml(SecurityElement e, PolicyLevel level)</summary>
        </member>
        <member name="M:System.Security.Fakes.StubISecurityPolicyEncodable.global::System#Security#ISecurityPolicyEncodable#FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
            <summary>Задает заглушка ISecurityPolicyEncodable.FromXml(SecurityElement e, PolicyLevel level)</summary>
        </member>
        <member name="M:System.Security.Fakes.StubISecurityPolicyEncodable.global::System#Security#ISecurityPolicyEncodable#ToXml(System.Security.Policy.PolicyLevel)">
            <summary>Задает заглушка ISecurityPolicyEncodable.ToXml(PolicyLevel level)</summary>
        </member>
        <member name="F:System.Security.Fakes.StubISecurityPolicyEncodable.ToXmlPolicyLevel">
            <summary>Задает stub ISecurityPolicyEncodable.ToXml(PolicyLevel level)</summary>
        </member>
        <member name="T:System.Security.Fakes.StubIStackWalk">
            <summary>Тип заглушки System.Security.IStackWalk</summary>
        </member>
        <member name="M:System.Security.Fakes.StubIStackWalk.#ctor">
            <summary>Инициализирует новый экземпляр type StubIStackWalk</summary>
        </member>
        <member name="F:System.Security.Fakes.StubIStackWalk.Assert">
            <summary>Задает stub IStackWalk.Assert()</summary>
        </member>
        <member name="F:System.Security.Fakes.StubIStackWalk.Demand">
            <summary>Задает stub IStackWalk.Demand()</summary>
        </member>
        <member name="F:System.Security.Fakes.StubIStackWalk.Deny">
            <summary>Задает stub IStackWalk.Deny()</summary>
        </member>
        <member name="F:System.Security.Fakes.StubIStackWalk.PermitOnly">
            <summary>Задает stub IStackWalk.PermitOnly()</summary>
        </member>
        <member name="M:System.Security.Fakes.StubIStackWalk.global::System#Security#IStackWalk#Assert">
            <summary>Задает заглушка IStackWalk.Assert()</summary>
        </member>
        <member name="M:System.Security.Fakes.StubIStackWalk.global::System#Security#IStackWalk#Demand">
            <summary>Задает заглушка IStackWalk.Demand()</summary>
        </member>
        <member name="M:System.Security.Fakes.StubIStackWalk.global::System#Security#IStackWalk#Deny">
            <summary>Задает заглушка IStackWalk.Deny()</summary>
        </member>
        <member name="M:System.Security.Fakes.StubIStackWalk.global::System#Security#IStackWalk#PermitOnly">
            <summary>Задает заглушка IStackWalk.PermitOnly()</summary>
        </member>
        <member name="T:System.Security.Fakes.StubPermissionSet">
            <summary>Тип заглушки System.Security.PermissionSet</summary>
        </member>
        <member name="M:System.Security.Fakes.StubPermissionSet.#ctor(System.Security.Permissions.PermissionState)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.Fakes.StubPermissionSet.#ctor(System.Security.PermissionSet)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.Fakes.StubPermissionSet.AddPermissionImpl(System.Security.IPermission)">
            <summary>Задает заглушка PermissionSet.AddPermissionImpl(IPermission perm)</summary>
        </member>
        <member name="F:System.Security.Fakes.StubPermissionSet.AddPermissionImplIPermission">
            <summary>Задает stub PermissionSet.AddPermissionImpl(IPermission perm)</summary>
        </member>
        <member name="M:System.Security.Fakes.StubPermissionSet.Copy">
            <summary>Задает заглушка PermissionSet.Copy()</summary>
        </member>
        <member name="F:System.Security.Fakes.StubPermissionSet.Copy01">
            <summary>Задает stub PermissionSet.Copy()</summary>
        </member>
        <member name="M:System.Security.Fakes.StubPermissionSet.CopyTo(System.Array,System.Int32)">
            <summary>Задает заглушка PermissionSet.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="F:System.Security.Fakes.StubPermissionSet.CopyToArrayInt32">
            <summary>Задает stub PermissionSet.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="F:System.Security.Fakes.StubPermissionSet.CountGet">
            <summary>Задает stub PermissionSet.get_Count()</summary>
        </member>
        <member name="M:System.Security.Fakes.StubPermissionSet.Equals(System.Object)">
            <summary>Задает заглушка PermissionSet.Equals(Object obj)</summary>
        </member>
        <member name="F:System.Security.Fakes.StubPermissionSet.EqualsObject">
            <summary>Задает stub PermissionSet.Equals(Object obj)</summary>
        </member>
        <member name="M:System.Security.Fakes.StubPermissionSet.FromXml(System.Security.SecurityElement)">
            <summary>Задает заглушка PermissionSet.FromXml(SecurityElement et)</summary>
        </member>
        <member name="F:System.Security.Fakes.StubPermissionSet.FromXmlSecurityElement">
            <summary>Задает stub PermissionSet.FromXml(SecurityElement et)</summary>
        </member>
        <member name="M:System.Security.Fakes.StubPermissionSet.GetEnumeratorImpl">
            <summary>Задает заглушка PermissionSet.GetEnumeratorImpl()</summary>
        </member>
        <member name="F:System.Security.Fakes.StubPermissionSet.GetEnumeratorImpl01">
            <summary>Задает stub PermissionSet.GetEnumeratorImpl()</summary>
        </member>
        <member name="M:System.Security.Fakes.StubPermissionSet.GetHashCode">
            <summary>Задает заглушка PermissionSet.GetHashCode()</summary>
        </member>
        <member name="F:System.Security.Fakes.StubPermissionSet.GetHashCode01">
            <summary>Задает stub PermissionSet.GetHashCode()</summary>
        </member>
        <member name="M:System.Security.Fakes.StubPermissionSet.GetPermissionImpl(System.Type)">
            <summary>Задает заглушка PermissionSet.GetPermissionImpl(Type permClass)</summary>
        </member>
        <member name="F:System.Security.Fakes.StubPermissionSet.GetPermissionImplType">
            <summary>Задает stub PermissionSet.GetPermissionImpl(Type permClass)</summary>
        </member>
        <member name="M:System.Security.Fakes.StubPermissionSet.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubPermissionSet</summary>
        </member>
        <member name="F:System.Security.Fakes.StubPermissionSet.IsReadOnlyGet">
            <summary>Задает stub PermissionSet.get_IsReadOnly()</summary>
        </member>
        <member name="F:System.Security.Fakes.StubPermissionSet.IsSynchronizedGet">
            <summary>Задает stub PermissionSet.get_IsSynchronized()</summary>
        </member>
        <member name="M:System.Security.Fakes.StubPermissionSet.RemovePermissionImpl(System.Type)">
            <summary>Задает заглушка PermissionSet.RemovePermissionImpl(Type permClass)</summary>
        </member>
        <member name="F:System.Security.Fakes.StubPermissionSet.RemovePermissionImplType">
            <summary>Задает stub PermissionSet.RemovePermissionImpl(Type permClass)</summary>
        </member>
        <member name="M:System.Security.Fakes.StubPermissionSet.SetPermissionImpl(System.Security.IPermission)">
            <summary>Задает заглушка PermissionSet.SetPermissionImpl(IPermission perm)</summary>
        </member>
        <member name="F:System.Security.Fakes.StubPermissionSet.SetPermissionImplIPermission">
            <summary>Задает stub PermissionSet.SetPermissionImpl(IPermission perm)</summary>
        </member>
        <member name="F:System.Security.Fakes.StubPermissionSet.SyncRootGet">
            <summary>Задает stub PermissionSet.get_SyncRoot()</summary>
        </member>
        <member name="M:System.Security.Fakes.StubPermissionSet.ToString">
            <summary>Задает заглушка PermissionSet.ToString()</summary>
        </member>
        <member name="F:System.Security.Fakes.StubPermissionSet.ToString01">
            <summary>Задает stub PermissionSet.ToString()</summary>
        </member>
        <member name="M:System.Security.Fakes.StubPermissionSet.ToXml">
            <summary>Задает заглушка PermissionSet.ToXml()</summary>
        </member>
        <member name="F:System.Security.Fakes.StubPermissionSet.ToXml01">
            <summary>Задает stub PermissionSet.ToXml()</summary>
        </member>
        <member name="P:System.Security.Fakes.StubPermissionSet.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Security.Fakes.StubPermissionSet.Count">
            <summary>Задает stub PermissionSet.get_Count()</summary>
        </member>
        <member name="P:System.Security.Fakes.StubPermissionSet.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Security.Fakes.StubPermissionSet.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Security.Fakes.StubPermissionSet.IsReadOnly">
            <summary>Задает stub PermissionSet.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.Security.Fakes.StubPermissionSet.IsSynchronized">
            <summary>Задает stub PermissionSet.get_IsSynchronized()</summary>
        </member>
        <member name="P:System.Security.Fakes.StubPermissionSet.SyncRoot">
            <summary>Задает stub PermissionSet.get_SyncRoot()</summary>
        </member>
        <member name="T:System.Security.Fakes.StubSecurityException">
            <summary>Тип заглушки System.Security.SecurityException</summary>
        </member>
        <member name="M:System.Security.Fakes.StubSecurityException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.Fakes.StubSecurityException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.Fakes.StubSecurityException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.Fakes.StubSecurityException.#ctor(System.String,System.Type)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.Fakes.StubSecurityException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.Fakes.StubSecurityException.#ctor(System.String,System.Type,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.Fakes.StubSecurityException.#ctor(System.String,System.Object,System.Object,System.Reflection.MethodInfo,System.Object,System.Security.IPermission)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.Fakes.StubSecurityException.#ctor(System.String,System.Reflection.AssemblyName,System.Security.PermissionSet,System.Security.PermissionSet,System.Reflection.MethodInfo,System.Security.Permissions.SecurityAction,System.Object,System.Security.IPermission,System.Security.Policy.Evidence)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.Fakes.StubSecurityException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubSecurityException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Security.Fakes.StubSecurityException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubSecurityException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Security.Fakes.StubSecurityException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.Security.Fakes.StubSecurityException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Security.Fakes.StubSecurityException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Security.Fakes.StubSecurityException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка SecurityException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Security.Fakes.StubSecurityException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub SecurityException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Security.Fakes.StubSecurityException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Security.Fakes.StubSecurityException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Security.Fakes.StubSecurityException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubSecurityException</summary>
        </member>
        <member name="F:System.Security.Fakes.StubSecurityException.MessageGet">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="F:System.Security.Fakes.StubSecurityException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Security.Fakes.StubSecurityException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Security.Fakes.StubSecurityException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Security.Fakes.StubSecurityException.ToString">
            <summary>Задает заглушка SecurityException.ToString()</summary>
        </member>
        <member name="F:System.Security.Fakes.StubSecurityException.ToString01">
            <summary>Задает stub SecurityException.ToString()</summary>
        </member>
        <member name="P:System.Security.Fakes.StubSecurityException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Security.Fakes.StubSecurityException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="P:System.Security.Fakes.StubSecurityException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Security.Fakes.StubSecurityException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Security.Fakes.StubSecurityException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Security.Fakes.StubSecurityException.Message">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="P:System.Security.Fakes.StubSecurityException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="P:System.Security.Fakes.StubSecurityException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Security.Fakes.StubSecurityState">
            <summary>Тип заглушки System.Security.SecurityState</summary>
        </member>
        <member name="M:System.Security.Fakes.StubSecurityState.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.Fakes.StubSecurityState.EnsureState">
            <summary>Задает заглушка SecurityState.EnsureState()</summary>
        </member>
        <member name="F:System.Security.Fakes.StubSecurityState.EnsureState01">
            <summary>Задает stub SecurityState.EnsureState()</summary>
        </member>
        <member name="M:System.Security.Fakes.StubSecurityState.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubSecurityState</summary>
        </member>
        <member name="P:System.Security.Fakes.StubSecurityState.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Security.Fakes.StubSecurityState.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Security.Fakes.StubSecurityState.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Security.Fakes.StubVerificationException">
            <summary>Тип заглушки System.Security.VerificationException</summary>
        </member>
        <member name="M:System.Security.Fakes.StubVerificationException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.Fakes.StubVerificationException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.Fakes.StubVerificationException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.Fakes.StubVerificationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.Fakes.StubVerificationException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubVerificationException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Security.Fakes.StubVerificationException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubVerificationException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Security.Fakes.StubVerificationException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.Security.Fakes.StubVerificationException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Security.Fakes.StubVerificationException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Security.Fakes.StubVerificationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Security.Fakes.StubVerificationException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Security.Fakes.StubVerificationException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Security.Fakes.StubVerificationException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Security.Fakes.StubVerificationException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubVerificationException</summary>
        </member>
        <member name="F:System.Security.Fakes.StubVerificationException.MessageGet">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="F:System.Security.Fakes.StubVerificationException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Security.Fakes.StubVerificationException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Security.Fakes.StubVerificationException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Security.Fakes.StubVerificationException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.Security.Fakes.StubVerificationException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="P:System.Security.Fakes.StubVerificationException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Security.Fakes.StubVerificationException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="P:System.Security.Fakes.StubVerificationException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Security.Fakes.StubVerificationException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Security.Fakes.StubVerificationException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Security.Fakes.StubVerificationException.Message">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="P:System.Security.Fakes.StubVerificationException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="P:System.Security.Fakes.StubVerificationException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Security.Permissions.Fakes.StubCodeAccessSecurityAttribute">
            <summary>Тип заглушки System.Security.Permissions.CodeAccessSecurityAttribute</summary>
        </member>
        <member name="M:System.Security.Permissions.Fakes.StubCodeAccessSecurityAttribute.#ctor(System.Security.Permissions.SecurityAction)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.Permissions.Fakes.StubCodeAccessSecurityAttribute.CreatePermission">
            <summary>Задает заглушка SecurityAttribute.CreatePermission()</summary>
        </member>
        <member name="F:System.Security.Permissions.Fakes.StubCodeAccessSecurityAttribute.CreatePermission01">
            <summary>Задает stub SecurityAttribute.CreatePermission()</summary>
        </member>
        <member name="M:System.Security.Permissions.Fakes.StubCodeAccessSecurityAttribute.Equals(System.Object)">
            <summary>Задает заглушка Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:System.Security.Permissions.Fakes.StubCodeAccessSecurityAttribute.EqualsObject">
            <summary>Задает stub Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:System.Security.Permissions.Fakes.StubCodeAccessSecurityAttribute.GetHashCode">
            <summary>Задает заглушка Attribute.GetHashCode()</summary>
        </member>
        <member name="F:System.Security.Permissions.Fakes.StubCodeAccessSecurityAttribute.GetHashCode01">
            <summary>Задает stub Attribute.GetHashCode()</summary>
        </member>
        <member name="M:System.Security.Permissions.Fakes.StubCodeAccessSecurityAttribute.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeAccessSecurityAttribute</summary>
        </member>
        <member name="M:System.Security.Permissions.Fakes.StubCodeAccessSecurityAttribute.IsDefaultAttribute">
            <summary>Задает заглушка Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:System.Security.Permissions.Fakes.StubCodeAccessSecurityAttribute.IsDefaultAttribute01">
            <summary>Задает stub Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:System.Security.Permissions.Fakes.StubCodeAccessSecurityAttribute.Match(System.Object)">
            <summary>Задает заглушка Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.Security.Permissions.Fakes.StubCodeAccessSecurityAttribute.MatchObject">
            <summary>Задает stub Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.Security.Permissions.Fakes.StubCodeAccessSecurityAttribute.TypeIdGet">
            <summary>Задает stub Attribute.get_TypeId()</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.StubCodeAccessSecurityAttribute.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.StubCodeAccessSecurityAttribute.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.StubCodeAccessSecurityAttribute.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.StubCodeAccessSecurityAttribute.TypeId">
            <summary>Задает stub Attribute.get_TypeId()</summary>
        </member>
        <member name="T:System.Security.Permissions.Fakes.StubIUnrestrictedPermission">
            <summary>Тип заглушки System.Security.Permissions.IUnrestrictedPermission</summary>
        </member>
        <member name="M:System.Security.Permissions.Fakes.StubIUnrestrictedPermission.#ctor">
            <summary>Инициализирует новый экземпляр type StubIUnrestrictedPermission</summary>
        </member>
        <member name="F:System.Security.Permissions.Fakes.StubIUnrestrictedPermission.IsUnrestricted">
            <summary>Задает stub IUnrestrictedPermission.IsUnrestricted()</summary>
        </member>
        <member name="M:System.Security.Permissions.Fakes.StubIUnrestrictedPermission.global::System#Security#Permissions#IUnrestrictedPermission#IsUnrestricted">
            <summary>Задает заглушка IUnrestrictedPermission.IsUnrestricted()</summary>
        </member>
        <member name="T:System.Security.Permissions.Fakes.StubIsolatedStoragePermission">
            <summary>Тип заглушки System.Security.Permissions.IsolatedStoragePermission</summary>
        </member>
        <member name="M:System.Security.Permissions.Fakes.StubIsolatedStoragePermission.#ctor(System.Security.Permissions.PermissionState)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.Permissions.Fakes.StubIsolatedStoragePermission.Copy">
            <summary>Задает заглушка CodeAccessPermission.Copy()</summary>
        </member>
        <member name="F:System.Security.Permissions.Fakes.StubIsolatedStoragePermission.Copy01">
            <summary>Задает stub CodeAccessPermission.Copy()</summary>
        </member>
        <member name="M:System.Security.Permissions.Fakes.StubIsolatedStoragePermission.Equals(System.Object)">
            <summary>Задает заглушка CodeAccessPermission.Equals(Object obj)</summary>
        </member>
        <member name="F:System.Security.Permissions.Fakes.StubIsolatedStoragePermission.EqualsObject">
            <summary>Задает stub CodeAccessPermission.Equals(Object obj)</summary>
        </member>
        <member name="M:System.Security.Permissions.Fakes.StubIsolatedStoragePermission.FromXml(System.Security.SecurityElement)">
            <summary>Задает заглушка IsolatedStoragePermission.FromXml(SecurityElement esd)</summary>
        </member>
        <member name="F:System.Security.Permissions.Fakes.StubIsolatedStoragePermission.FromXmlSecurityElement">
            <summary>Задает stub IsolatedStoragePermission.FromXml(SecurityElement esd)</summary>
        </member>
        <member name="M:System.Security.Permissions.Fakes.StubIsolatedStoragePermission.GetHashCode">
            <summary>Задает заглушка CodeAccessPermission.GetHashCode()</summary>
        </member>
        <member name="F:System.Security.Permissions.Fakes.StubIsolatedStoragePermission.GetHashCode01">
            <summary>Задает stub CodeAccessPermission.GetHashCode()</summary>
        </member>
        <member name="M:System.Security.Permissions.Fakes.StubIsolatedStoragePermission.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubIsolatedStoragePermission</summary>
        </member>
        <member name="M:System.Security.Permissions.Fakes.StubIsolatedStoragePermission.Intersect(System.Security.IPermission)">
            <summary>Задает заглушка CodeAccessPermission.Intersect(IPermission target)</summary>
        </member>
        <member name="F:System.Security.Permissions.Fakes.StubIsolatedStoragePermission.IntersectIPermission">
            <summary>Задает stub CodeAccessPermission.Intersect(IPermission target)</summary>
        </member>
        <member name="M:System.Security.Permissions.Fakes.StubIsolatedStoragePermission.IsSubsetOf(System.Security.IPermission)">
            <summary>Задает заглушка CodeAccessPermission.IsSubsetOf(IPermission target)</summary>
        </member>
        <member name="F:System.Security.Permissions.Fakes.StubIsolatedStoragePermission.IsSubsetOfIPermission">
            <summary>Задает stub CodeAccessPermission.IsSubsetOf(IPermission target)</summary>
        </member>
        <member name="M:System.Security.Permissions.Fakes.StubIsolatedStoragePermission.ToString">
            <summary>Задает заглушка CodeAccessPermission.ToString()</summary>
        </member>
        <member name="F:System.Security.Permissions.Fakes.StubIsolatedStoragePermission.ToString01">
            <summary>Задает stub CodeAccessPermission.ToString()</summary>
        </member>
        <member name="M:System.Security.Permissions.Fakes.StubIsolatedStoragePermission.ToXml">
            <summary>Задает заглушка IsolatedStoragePermission.ToXml()</summary>
        </member>
        <member name="F:System.Security.Permissions.Fakes.StubIsolatedStoragePermission.ToXml01">
            <summary>Задает stub IsolatedStoragePermission.ToXml()</summary>
        </member>
        <member name="M:System.Security.Permissions.Fakes.StubIsolatedStoragePermission.Union(System.Security.IPermission)">
            <summary>Задает заглушка CodeAccessPermission.Union(IPermission other)</summary>
        </member>
        <member name="F:System.Security.Permissions.Fakes.StubIsolatedStoragePermission.UnionIPermission">
            <summary>Задает stub CodeAccessPermission.Union(IPermission other)</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.StubIsolatedStoragePermission.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.StubIsolatedStoragePermission.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.StubIsolatedStoragePermission.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Security.Permissions.Fakes.StubIsolatedStoragePermissionAttribute">
            <summary>Тип заглушки System.Security.Permissions.IsolatedStoragePermissionAttribute</summary>
        </member>
        <member name="M:System.Security.Permissions.Fakes.StubIsolatedStoragePermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.Permissions.Fakes.StubIsolatedStoragePermissionAttribute.CreatePermission">
            <summary>Задает заглушка SecurityAttribute.CreatePermission()</summary>
        </member>
        <member name="F:System.Security.Permissions.Fakes.StubIsolatedStoragePermissionAttribute.CreatePermission01">
            <summary>Задает stub SecurityAttribute.CreatePermission()</summary>
        </member>
        <member name="M:System.Security.Permissions.Fakes.StubIsolatedStoragePermissionAttribute.Equals(System.Object)">
            <summary>Задает заглушка Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:System.Security.Permissions.Fakes.StubIsolatedStoragePermissionAttribute.EqualsObject">
            <summary>Задает stub Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:System.Security.Permissions.Fakes.StubIsolatedStoragePermissionAttribute.GetHashCode">
            <summary>Задает заглушка Attribute.GetHashCode()</summary>
        </member>
        <member name="F:System.Security.Permissions.Fakes.StubIsolatedStoragePermissionAttribute.GetHashCode01">
            <summary>Задает stub Attribute.GetHashCode()</summary>
        </member>
        <member name="M:System.Security.Permissions.Fakes.StubIsolatedStoragePermissionAttribute.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubIsolatedStoragePermissionAttribute</summary>
        </member>
        <member name="M:System.Security.Permissions.Fakes.StubIsolatedStoragePermissionAttribute.IsDefaultAttribute">
            <summary>Задает заглушка Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:System.Security.Permissions.Fakes.StubIsolatedStoragePermissionAttribute.IsDefaultAttribute01">
            <summary>Задает stub Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:System.Security.Permissions.Fakes.StubIsolatedStoragePermissionAttribute.Match(System.Object)">
            <summary>Задает заглушка Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.Security.Permissions.Fakes.StubIsolatedStoragePermissionAttribute.MatchObject">
            <summary>Задает stub Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.Security.Permissions.Fakes.StubIsolatedStoragePermissionAttribute.TypeIdGet">
            <summary>Задает stub Attribute.get_TypeId()</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.StubIsolatedStoragePermissionAttribute.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.StubIsolatedStoragePermissionAttribute.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.StubIsolatedStoragePermissionAttribute.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.StubIsolatedStoragePermissionAttribute.TypeId">
            <summary>Задает stub Attribute.get_TypeId()</summary>
        </member>
        <member name="T:System.Security.Permissions.Fakes.StubSecurityAttribute">
            <summary>Тип заглушки System.Security.Permissions.SecurityAttribute</summary>
        </member>
        <member name="M:System.Security.Permissions.Fakes.StubSecurityAttribute.#ctor(System.Security.Permissions.SecurityAction)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.Permissions.Fakes.StubSecurityAttribute.CreatePermission">
            <summary>Задает заглушка SecurityAttribute.CreatePermission()</summary>
        </member>
        <member name="F:System.Security.Permissions.Fakes.StubSecurityAttribute.CreatePermission01">
            <summary>Задает stub SecurityAttribute.CreatePermission()</summary>
        </member>
        <member name="M:System.Security.Permissions.Fakes.StubSecurityAttribute.Equals(System.Object)">
            <summary>Задает заглушка Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:System.Security.Permissions.Fakes.StubSecurityAttribute.EqualsObject">
            <summary>Задает stub Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:System.Security.Permissions.Fakes.StubSecurityAttribute.GetHashCode">
            <summary>Задает заглушка Attribute.GetHashCode()</summary>
        </member>
        <member name="F:System.Security.Permissions.Fakes.StubSecurityAttribute.GetHashCode01">
            <summary>Задает stub Attribute.GetHashCode()</summary>
        </member>
        <member name="M:System.Security.Permissions.Fakes.StubSecurityAttribute.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubSecurityAttribute</summary>
        </member>
        <member name="M:System.Security.Permissions.Fakes.StubSecurityAttribute.IsDefaultAttribute">
            <summary>Задает заглушка Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:System.Security.Permissions.Fakes.StubSecurityAttribute.IsDefaultAttribute01">
            <summary>Задает stub Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:System.Security.Permissions.Fakes.StubSecurityAttribute.Match(System.Object)">
            <summary>Задает заглушка Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.Security.Permissions.Fakes.StubSecurityAttribute.MatchObject">
            <summary>Задает stub Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.Security.Permissions.Fakes.StubSecurityAttribute.TypeIdGet">
            <summary>Задает stub Attribute.get_TypeId()</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.StubSecurityAttribute.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.StubSecurityAttribute.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.StubSecurityAttribute.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Security.Permissions.Fakes.StubSecurityAttribute.TypeId">
            <summary>Задает stub Attribute.get_TypeId()</summary>
        </member>
        <member name="T:System.Security.Policy.Fakes.StubCodeConnectAccess">
            <summary>Тип заглушки System.Security.Policy.CodeConnectAccess</summary>
        </member>
        <member name="M:System.Security.Policy.Fakes.StubCodeConnectAccess.#ctor(System.String,System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.Policy.Fakes.StubCodeConnectAccess.Equals(System.Object)">
            <summary>Задает заглушка CodeConnectAccess.Equals(Object o)</summary>
        </member>
        <member name="F:System.Security.Policy.Fakes.StubCodeConnectAccess.EqualsObject">
            <summary>Задает stub CodeConnectAccess.Equals(Object o)</summary>
        </member>
        <member name="M:System.Security.Policy.Fakes.StubCodeConnectAccess.GetHashCode">
            <summary>Задает заглушка CodeConnectAccess.GetHashCode()</summary>
        </member>
        <member name="F:System.Security.Policy.Fakes.StubCodeConnectAccess.GetHashCode01">
            <summary>Задает stub CodeConnectAccess.GetHashCode()</summary>
        </member>
        <member name="M:System.Security.Policy.Fakes.StubCodeConnectAccess.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeConnectAccess</summary>
        </member>
        <member name="P:System.Security.Policy.Fakes.StubCodeConnectAccess.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Security.Policy.Fakes.StubCodeConnectAccess.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Security.Policy.Fakes.StubCodeConnectAccess.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Security.Policy.Fakes.StubCodeGroup">
            <summary>Тип заглушки System.Security.Policy.CodeGroup</summary>
        </member>
        <member name="M:System.Security.Policy.Fakes.StubCodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Policy.PolicyStatement)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="F:System.Security.Policy.Fakes.StubCodeGroup.AttributeStringGet">
            <summary>Задает stub CodeGroup.get_AttributeString()</summary>
        </member>
        <member name="M:System.Security.Policy.Fakes.StubCodeGroup.Copy">
            <summary>Задает заглушка CodeGroup.Copy()</summary>
        </member>
        <member name="F:System.Security.Policy.Fakes.StubCodeGroup.Copy01">
            <summary>Задает stub CodeGroup.Copy()</summary>
        </member>
        <member name="M:System.Security.Policy.Fakes.StubCodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
            <summary>Задает заглушка CodeGroup.CreateXml(SecurityElement element, PolicyLevel level)</summary>
        </member>
        <member name="F:System.Security.Policy.Fakes.StubCodeGroup.CreateXmlSecurityElementPolicyLevel">
            <summary>Задает stub CodeGroup.CreateXml(SecurityElement element, PolicyLevel level)</summary>
        </member>
        <member name="M:System.Security.Policy.Fakes.StubCodeGroup.Equals(System.Object)">
            <summary>Задает заглушка CodeGroup.Equals(Object o)</summary>
        </member>
        <member name="F:System.Security.Policy.Fakes.StubCodeGroup.EqualsObject">
            <summary>Задает stub CodeGroup.Equals(Object o)</summary>
        </member>
        <member name="M:System.Security.Policy.Fakes.StubCodeGroup.GetHashCode">
            <summary>Задает заглушка CodeGroup.GetHashCode()</summary>
        </member>
        <member name="F:System.Security.Policy.Fakes.StubCodeGroup.GetHashCode01">
            <summary>Задает stub CodeGroup.GetHashCode()</summary>
        </member>
        <member name="M:System.Security.Policy.Fakes.StubCodeGroup.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubCodeGroup</summary>
        </member>
        <member name="F:System.Security.Policy.Fakes.StubCodeGroup.MergeLogicGet">
            <summary>Задает stub CodeGroup.get_MergeLogic()</summary>
        </member>
        <member name="M:System.Security.Policy.Fakes.StubCodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
            <summary>Задает заглушка CodeGroup.ParseXml(SecurityElement e, PolicyLevel level)</summary>
        </member>
        <member name="F:System.Security.Policy.Fakes.StubCodeGroup.ParseXmlSecurityElementPolicyLevel">
            <summary>Задает stub CodeGroup.ParseXml(SecurityElement e, PolicyLevel level)</summary>
        </member>
        <member name="F:System.Security.Policy.Fakes.StubCodeGroup.PermissionSetNameGet">
            <summary>Задает stub CodeGroup.get_PermissionSetName()</summary>
        </member>
        <member name="M:System.Security.Policy.Fakes.StubCodeGroup.Resolve(System.Security.Policy.Evidence)">
            <summary>Задает заглушка CodeGroup.Resolve(Evidence evidence)</summary>
        </member>
        <member name="F:System.Security.Policy.Fakes.StubCodeGroup.ResolveEvidence">
            <summary>Задает stub CodeGroup.Resolve(Evidence evidence)</summary>
        </member>
        <member name="M:System.Security.Policy.Fakes.StubCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)">
            <summary>Задает заглушка CodeGroup.ResolveMatchingCodeGroups(Evidence evidence)</summary>
        </member>
        <member name="F:System.Security.Policy.Fakes.StubCodeGroup.ResolveMatchingCodeGroupsEvidence">
            <summary>Задает stub CodeGroup.ResolveMatchingCodeGroups(Evidence evidence)</summary>
        </member>
        <member name="P:System.Security.Policy.Fakes.StubCodeGroup.AttributeString">
            <summary>Задает stub CodeGroup.get_AttributeString()</summary>
        </member>
        <member name="P:System.Security.Policy.Fakes.StubCodeGroup.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Security.Policy.Fakes.StubCodeGroup.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Security.Policy.Fakes.StubCodeGroup.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Security.Policy.Fakes.StubCodeGroup.MergeLogic">
            <summary>Задает stub CodeGroup.get_MergeLogic()</summary>
        </member>
        <member name="P:System.Security.Policy.Fakes.StubCodeGroup.PermissionSetName">
            <summary>Задает stub CodeGroup.get_PermissionSetName()</summary>
        </member>
        <member name="T:System.Security.Policy.Fakes.StubEvidenceBase">
            <summary>Тип заглушки System.Security.Policy.EvidenceBase</summary>
        </member>
        <member name="M:System.Security.Policy.Fakes.StubEvidenceBase.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.Policy.Fakes.StubEvidenceBase.Clone">
            <summary>Задает заглушка EvidenceBase.Clone()</summary>
        </member>
        <member name="F:System.Security.Policy.Fakes.StubEvidenceBase.Clone01">
            <summary>Задает stub EvidenceBase.Clone()</summary>
        </member>
        <member name="M:System.Security.Policy.Fakes.StubEvidenceBase.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubEvidenceBase</summary>
        </member>
        <member name="P:System.Security.Policy.Fakes.StubEvidenceBase.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Security.Policy.Fakes.StubEvidenceBase.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Security.Policy.Fakes.StubEvidenceBase.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Security.Policy.Fakes.StubIApplicationTrustManager">
            <summary>Тип заглушки System.Security.Policy.IApplicationTrustManager</summary>
        </member>
        <member name="M:System.Security.Policy.Fakes.StubIApplicationTrustManager.#ctor">
            <summary>Инициализирует новый экземпляр type StubIApplicationTrustManager</summary>
        </member>
        <member name="F:System.Security.Policy.Fakes.StubIApplicationTrustManager.DetermineApplicationTrustActivationContextTrustManagerContext">
            <summary>Задает stub IApplicationTrustManager.DetermineApplicationTrust(ActivationContext activationContext, TrustManagerContext context)</summary>
        </member>
        <member name="F:System.Security.Policy.Fakes.StubIApplicationTrustManager.FromXmlSecurityElement">
            <summary>Задает stub ISecurityEncodable.FromXml(SecurityElement e)</summary>
        </member>
        <member name="M:System.Security.Policy.Fakes.StubIApplicationTrustManager.global::System#Security#ISecurityEncodable#FromXml(System.Security.SecurityElement)">
            <summary>Задает заглушка ISecurityEncodable.FromXml(SecurityElement e)</summary>
        </member>
        <member name="M:System.Security.Policy.Fakes.StubIApplicationTrustManager.global::System#Security#ISecurityEncodable#ToXml">
            <summary>Задает заглушка ISecurityEncodable.ToXml()</summary>
        </member>
        <member name="M:System.Security.Policy.Fakes.StubIApplicationTrustManager.global::System#Security#Policy#IApplicationTrustManager#DetermineApplicationTrust(System.ActivationContext,System.Security.Policy.TrustManagerContext)">
            <summary>Задает заглушка IApplicationTrustManager.DetermineApplicationTrust(ActivationContext activationContext, TrustManagerContext context)</summary>
        </member>
        <member name="F:System.Security.Policy.Fakes.StubIApplicationTrustManager.ToXml">
            <summary>Задает stub ISecurityEncodable.ToXml()</summary>
        </member>
        <member name="T:System.Security.Policy.Fakes.StubIIdentityPermissionFactory">
            <summary>Тип заглушки System.Security.Policy.IIdentityPermissionFactory</summary>
        </member>
        <member name="M:System.Security.Policy.Fakes.StubIIdentityPermissionFactory.#ctor">
            <summary>Инициализирует новый экземпляр type StubIIdentityPermissionFactory</summary>
        </member>
        <member name="F:System.Security.Policy.Fakes.StubIIdentityPermissionFactory.CreateIdentityPermissionEvidence">
            <summary>Задает stub IIdentityPermissionFactory.CreateIdentityPermission(Evidence evidence)</summary>
        </member>
        <member name="M:System.Security.Policy.Fakes.StubIIdentityPermissionFactory.global::System#Security#Policy#IIdentityPermissionFactory#CreateIdentityPermission(System.Security.Policy.Evidence)">
            <summary>Задает заглушка IIdentityPermissionFactory.CreateIdentityPermission(Evidence evidence)</summary>
        </member>
        <member name="T:System.Security.Policy.Fakes.StubIMembershipCondition">
            <summary>Тип заглушки System.Security.Policy.IMembershipCondition</summary>
        </member>
        <member name="M:System.Security.Policy.Fakes.StubIMembershipCondition.#ctor">
            <summary>Инициализирует новый экземпляр type StubIMembershipCondition</summary>
        </member>
        <member name="F:System.Security.Policy.Fakes.StubIMembershipCondition.CheckEvidence">
            <summary>Задает stub IMembershipCondition.Check(Evidence evidence)</summary>
        </member>
        <member name="F:System.Security.Policy.Fakes.StubIMembershipCondition.Copy">
            <summary>Задает stub IMembershipCondition.Copy()</summary>
        </member>
        <member name="F:System.Security.Policy.Fakes.StubIMembershipCondition.EqualsObject">
            <summary>Задает stub IMembershipCondition.Equals(Object obj)</summary>
        </member>
        <member name="F:System.Security.Policy.Fakes.StubIMembershipCondition.FromXmlSecurityElement">
            <summary>Задает stub ISecurityEncodable.FromXml(SecurityElement e)</summary>
        </member>
        <member name="F:System.Security.Policy.Fakes.StubIMembershipCondition.FromXmlSecurityElementPolicyLevel">
            <summary>Задает stub ISecurityPolicyEncodable.FromXml(SecurityElement e, PolicyLevel level)</summary>
        </member>
        <member name="M:System.Security.Policy.Fakes.StubIMembershipCondition.global::System#Security#ISecurityEncodable#FromXml(System.Security.SecurityElement)">
            <summary>Задает заглушка ISecurityEncodable.FromXml(SecurityElement e)</summary>
        </member>
        <member name="M:System.Security.Policy.Fakes.StubIMembershipCondition.global::System#Security#ISecurityEncodable#ToXml">
            <summary>Задает заглушка ISecurityEncodable.ToXml()</summary>
        </member>
        <member name="M:System.Security.Policy.Fakes.StubIMembershipCondition.global::System#Security#ISecurityPolicyEncodable#FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
            <summary>Задает заглушка ISecurityPolicyEncodable.FromXml(SecurityElement e, PolicyLevel level)</summary>
        </member>
        <member name="M:System.Security.Policy.Fakes.StubIMembershipCondition.global::System#Security#ISecurityPolicyEncodable#ToXml(System.Security.Policy.PolicyLevel)">
            <summary>Задает заглушка ISecurityPolicyEncodable.ToXml(PolicyLevel level)</summary>
        </member>
        <member name="M:System.Security.Policy.Fakes.StubIMembershipCondition.global::System#Security#Policy#IMembershipCondition#Check(System.Security.Policy.Evidence)">
            <summary>Задает заглушка IMembershipCondition.Check(Evidence evidence)</summary>
        </member>
        <member name="M:System.Security.Policy.Fakes.StubIMembershipCondition.global::System#Security#Policy#IMembershipCondition#Copy">
            <summary>Задает заглушка IMembershipCondition.Copy()</summary>
        </member>
        <member name="M:System.Security.Policy.Fakes.StubIMembershipCondition.global::System#Security#Policy#IMembershipCondition#Equals(System.Object)">
            <summary>Задает заглушка IMembershipCondition.Equals(Object obj)</summary>
        </member>
        <member name="M:System.Security.Policy.Fakes.StubIMembershipCondition.global::System#Security#Policy#IMembershipCondition#ToString">
            <summary>Задает заглушка IMembershipCondition.ToString()</summary>
        </member>
        <member name="F:System.Security.Policy.Fakes.StubIMembershipCondition.ToString">
            <summary>Задает stub IMembershipCondition.ToString()</summary>
        </member>
        <member name="F:System.Security.Policy.Fakes.StubIMembershipCondition.ToXml">
            <summary>Задает stub ISecurityEncodable.ToXml()</summary>
        </member>
        <member name="F:System.Security.Policy.Fakes.StubIMembershipCondition.ToXmlPolicyLevel">
            <summary>Задает stub ISecurityPolicyEncodable.ToXml(PolicyLevel level)</summary>
        </member>
        <member name="T:System.Security.Policy.Fakes.StubPolicyException">
            <summary>Тип заглушки System.Security.Policy.PolicyException</summary>
        </member>
        <member name="M:System.Security.Policy.Fakes.StubPolicyException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.Policy.Fakes.StubPolicyException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.Policy.Fakes.StubPolicyException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.Policy.Fakes.StubPolicyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.Policy.Fakes.StubPolicyException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubPolicyException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Security.Policy.Fakes.StubPolicyException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubPolicyException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Security.Policy.Fakes.StubPolicyException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.Security.Policy.Fakes.StubPolicyException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Security.Policy.Fakes.StubPolicyException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Security.Policy.Fakes.StubPolicyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Security.Policy.Fakes.StubPolicyException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Security.Policy.Fakes.StubPolicyException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Security.Policy.Fakes.StubPolicyException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Security.Policy.Fakes.StubPolicyException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubPolicyException</summary>
        </member>
        <member name="F:System.Security.Policy.Fakes.StubPolicyException.MessageGet">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="F:System.Security.Policy.Fakes.StubPolicyException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Security.Policy.Fakes.StubPolicyException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Security.Policy.Fakes.StubPolicyException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Security.Policy.Fakes.StubPolicyException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.Security.Policy.Fakes.StubPolicyException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="P:System.Security.Policy.Fakes.StubPolicyException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Security.Policy.Fakes.StubPolicyException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="P:System.Security.Policy.Fakes.StubPolicyException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Security.Policy.Fakes.StubPolicyException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Security.Policy.Fakes.StubPolicyException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Security.Policy.Fakes.StubPolicyException.Message">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="P:System.Security.Policy.Fakes.StubPolicyException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="P:System.Security.Policy.Fakes.StubPolicyException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Security.Policy.Fakes.StubTrustManagerContext">
            <summary>Тип заглушки System.Security.Policy.TrustManagerContext</summary>
        </member>
        <member name="M:System.Security.Policy.Fakes.StubTrustManagerContext.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.Policy.Fakes.StubTrustManagerContext.#ctor(System.Security.Policy.TrustManagerUIContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Security.Policy.Fakes.StubTrustManagerContext.AttachBackingFieldToIgnorePersistedDecision">
            <summary>Присоединение делегатов для эмуляции StubTrustManagerContext.IgnorePersistedDecision как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Security.Policy.Fakes.StubTrustManagerContext.AttachBackingFieldToKeepAlive">
            <summary>Присоединение делегатов для эмуляции StubTrustManagerContext.KeepAlive как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Security.Policy.Fakes.StubTrustManagerContext.AttachBackingFieldToNoPrompt">
            <summary>Присоединение делегатов для эмуляции StubTrustManagerContext.NoPrompt как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Security.Policy.Fakes.StubTrustManagerContext.AttachBackingFieldToPersist">
            <summary>Присоединение делегатов для эмуляции StubTrustManagerContext.Persist как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Security.Policy.Fakes.StubTrustManagerContext.AttachBackingFieldToPreviousApplicationIdentity">
            <summary>Присоединение делегатов для эмуляции StubTrustManagerContext.PreviousApplicationIdentity как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Security.Policy.Fakes.StubTrustManagerContext.AttachBackingFieldToUIContext">
            <summary>Присоединение делегатов для эмуляции StubTrustManagerContext.UIContext как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Security.Policy.Fakes.StubTrustManagerContext.IgnorePersistedDecisionGet">
            <summary>Задает stub TrustManagerContext.get_IgnorePersistedDecision()</summary>
        </member>
        <member name="F:System.Security.Policy.Fakes.StubTrustManagerContext.IgnorePersistedDecisionSetBoolean">
            <summary>Задает stub TrustManagerContext.set_IgnorePersistedDecision(Boolean value)</summary>
        </member>
        <member name="M:System.Security.Policy.Fakes.StubTrustManagerContext.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubTrustManagerContext</summary>
        </member>
        <member name="F:System.Security.Policy.Fakes.StubTrustManagerContext.KeepAliveGet">
            <summary>Задает stub TrustManagerContext.get_KeepAlive()</summary>
        </member>
        <member name="F:System.Security.Policy.Fakes.StubTrustManagerContext.KeepAliveSetBoolean">
            <summary>Задает stub TrustManagerContext.set_KeepAlive(Boolean value)</summary>
        </member>
        <member name="F:System.Security.Policy.Fakes.StubTrustManagerContext.NoPromptGet">
            <summary>Задает stub TrustManagerContext.get_NoPrompt()</summary>
        </member>
        <member name="F:System.Security.Policy.Fakes.StubTrustManagerContext.NoPromptSetBoolean">
            <summary>Задает stub TrustManagerContext.set_NoPrompt(Boolean value)</summary>
        </member>
        <member name="F:System.Security.Policy.Fakes.StubTrustManagerContext.PersistGet">
            <summary>Задает stub TrustManagerContext.get_Persist()</summary>
        </member>
        <member name="F:System.Security.Policy.Fakes.StubTrustManagerContext.PersistSetBoolean">
            <summary>Задает stub TrustManagerContext.set_Persist(Boolean value)</summary>
        </member>
        <member name="F:System.Security.Policy.Fakes.StubTrustManagerContext.PreviousApplicationIdentityGet">
            <summary>Задает stub TrustManagerContext.get_PreviousApplicationIdentity()</summary>
        </member>
        <member name="F:System.Security.Policy.Fakes.StubTrustManagerContext.PreviousApplicationIdentitySetApplicationIdentity">
            <summary>Задает stub TrustManagerContext.set_PreviousApplicationIdentity(ApplicationIdentity value)</summary>
        </member>
        <member name="F:System.Security.Policy.Fakes.StubTrustManagerContext.UIContextGet">
            <summary>Задает stub TrustManagerContext.get_UIContext()</summary>
        </member>
        <member name="F:System.Security.Policy.Fakes.StubTrustManagerContext.UIContextSetTrustManagerUIContext">
            <summary>Задает stub TrustManagerContext.set_UIContext(TrustManagerUIContext value)</summary>
        </member>
        <member name="P:System.Security.Policy.Fakes.StubTrustManagerContext.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Security.Policy.Fakes.StubTrustManagerContext.IgnorePersistedDecision">
            <summary>Задает stub TrustManagerContext.get_IgnorePersistedDecision()</summary>
        </member>
        <member name="P:System.Security.Policy.Fakes.StubTrustManagerContext.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Security.Policy.Fakes.StubTrustManagerContext.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Security.Policy.Fakes.StubTrustManagerContext.KeepAlive">
            <summary>Задает stub TrustManagerContext.get_KeepAlive()</summary>
        </member>
        <member name="P:System.Security.Policy.Fakes.StubTrustManagerContext.NoPrompt">
            <summary>Задает stub TrustManagerContext.get_NoPrompt()</summary>
        </member>
        <member name="P:System.Security.Policy.Fakes.StubTrustManagerContext.Persist">
            <summary>Задает stub TrustManagerContext.get_Persist()</summary>
        </member>
        <member name="P:System.Security.Policy.Fakes.StubTrustManagerContext.PreviousApplicationIdentity">
            <summary>Задает stub TrustManagerContext.get_PreviousApplicationIdentity()</summary>
        </member>
        <member name="P:System.Security.Policy.Fakes.StubTrustManagerContext.UIContext">
            <summary>Задает stub TrustManagerContext.get_UIContext()</summary>
        </member>
        <member name="T:System.Text.Fakes.StubASCIIEncoding">
            <summary>Тип заглушки System.Text.ASCIIEncoding</summary>
        </member>
        <member name="M:System.Text.Fakes.StubASCIIEncoding.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="F:System.Text.Fakes.StubASCIIEncoding.BodyNameGet">
            <summary>Задает stub Encoding.get_BodyName()</summary>
        </member>
        <member name="M:System.Text.Fakes.StubASCIIEncoding.Clone">
            <summary>Задает заглушка Encoding.Clone()</summary>
        </member>
        <member name="F:System.Text.Fakes.StubASCIIEncoding.Clone01">
            <summary>Задает stub Encoding.Clone()</summary>
        </member>
        <member name="F:System.Text.Fakes.StubASCIIEncoding.CodePageGet">
            <summary>Задает stub Encoding.get_CodePage()</summary>
        </member>
        <member name="F:System.Text.Fakes.StubASCIIEncoding.EncodingNameGet">
            <summary>Задает stub Encoding.get_EncodingName()</summary>
        </member>
        <member name="M:System.Text.Fakes.StubASCIIEncoding.Equals(System.Object)">
            <summary>Задает заглушка Encoding.Equals(Object value)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubASCIIEncoding.EqualsObject">
            <summary>Задает stub Encoding.Equals(Object value)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubASCIIEncoding.GetByteCount(System.String)">
            <summary>Задает заглушка ASCIIEncoding.GetByteCount(String chars)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubASCIIEncoding.GetByteCount(System.Char[])">
            <summary>Задает заглушка Encoding.GetByteCount(Char[] chars)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubASCIIEncoding.GetByteCount(System.Char*,System.Int32)">
            <summary>Задает заглушка ASCIIEncoding.GetByteCount(Char* chars, Int32 count)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
            <summary>Задает заглушка ASCIIEncoding.GetByteCount(Char[] chars, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubASCIIEncoding.GetByteCountCharArray">
            <summary>Задает stub Encoding.GetByteCount(Char[] chars)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubASCIIEncoding.GetByteCountCharArrayInt32Int32">
            <summary>Задает stub ASCIIEncoding.GetByteCount(Char[] chars, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubASCIIEncoding.GetByteCountString">
            <summary>Задает stub ASCIIEncoding.GetByteCount(String chars)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32)">
            <summary>Задает заглушка Encoding.GetBytes(Char[] chars, Int32 index, Int32 count)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
            <summary>Задает заглушка ASCIIEncoding.GetBytes(Char* chars, Int32 charCount, Byte* bytes, Int32 byteCount)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubASCIIEncoding.GetBytes(System.Char[])">
            <summary>Задает заглушка Encoding.GetBytes(Char[] chars)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>Задает заглушка ASCIIEncoding.GetBytes(String chars, Int32 charIndex, Int32 charCount, Byte[] bytes, Int32 byteIndex)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubASCIIEncoding.GetBytes(System.String)">
            <summary>Задает заглушка Encoding.GetBytes(String s)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>Задает заглушка ASCIIEncoding.GetBytes(Char[] chars, Int32 charIndex, Int32 charCount, Byte[] bytes, Int32 byteIndex)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubASCIIEncoding.GetBytesCharArray">
            <summary>Задает stub Encoding.GetBytes(Char[] chars)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubASCIIEncoding.GetBytesCharArrayInt32Int32">
            <summary>Задает stub Encoding.GetBytes(Char[] chars, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubASCIIEncoding.GetBytesCharArrayInt32Int32ByteArrayInt32">
            <summary>Задает stub ASCIIEncoding.GetBytes(Char[] chars, Int32 charIndex, Int32 charCount, Byte[] bytes, Int32 byteIndex)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubASCIIEncoding.GetBytesString">
            <summary>Задает stub Encoding.GetBytes(String s)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubASCIIEncoding.GetBytesStringInt32Int32ByteArrayInt32">
            <summary>Задает stub ASCIIEncoding.GetBytes(String chars, Int32 charIndex, Int32 charCount, Byte[] bytes, Int32 byteIndex)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubASCIIEncoding.GetCharCount(System.Byte[])">
            <summary>Задает заглушка Encoding.GetCharCount(Byte[] bytes)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubASCIIEncoding.GetCharCount(System.Byte*,System.Int32)">
            <summary>Задает заглушка ASCIIEncoding.GetCharCount(Byte* bytes, Int32 count)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
            <summary>Задает заглушка ASCIIEncoding.GetCharCount(Byte[] bytes, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubASCIIEncoding.GetCharCountByteArray">
            <summary>Задает stub Encoding.GetCharCount(Byte[] bytes)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubASCIIEncoding.GetCharCountByteArrayInt32Int32">
            <summary>Задает stub ASCIIEncoding.GetCharCount(Byte[] bytes, Int32 index, Int32 count)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32)">
            <summary>Задает заглушка Encoding.GetChars(Byte[] bytes, Int32 index, Int32 count)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
            <summary>Задает заглушка ASCIIEncoding.GetChars(Byte* bytes, Int32 byteCount, Char* chars, Int32 charCount)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubASCIIEncoding.GetChars(System.Byte[])">
            <summary>Задает заглушка Encoding.GetChars(Byte[] bytes)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
            <summary>Задает заглушка ASCIIEncoding.GetChars(Byte[] bytes, Int32 byteIndex, Int32 byteCount, Char[] chars, Int32 charIndex)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubASCIIEncoding.GetCharsByteArray">
            <summary>Задает stub Encoding.GetChars(Byte[] bytes)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubASCIIEncoding.GetCharsByteArrayInt32Int32">
            <summary>Задает stub Encoding.GetChars(Byte[] bytes, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubASCIIEncoding.GetCharsByteArrayInt32Int32CharArrayInt32">
            <summary>Задает stub ASCIIEncoding.GetChars(Byte[] bytes, Int32 byteIndex, Int32 byteCount, Char[] chars, Int32 charIndex)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubASCIIEncoding.GetDecoder">
            <summary>Задает заглушка ASCIIEncoding.GetDecoder()</summary>
        </member>
        <member name="F:System.Text.Fakes.StubASCIIEncoding.GetDecoder01">
            <summary>Задает stub ASCIIEncoding.GetDecoder()</summary>
        </member>
        <member name="M:System.Text.Fakes.StubASCIIEncoding.GetEncoder">
            <summary>Задает заглушка ASCIIEncoding.GetEncoder()</summary>
        </member>
        <member name="F:System.Text.Fakes.StubASCIIEncoding.GetEncoder01">
            <summary>Задает stub ASCIIEncoding.GetEncoder()</summary>
        </member>
        <member name="M:System.Text.Fakes.StubASCIIEncoding.GetHashCode">
            <summary>Задает заглушка Encoding.GetHashCode()</summary>
        </member>
        <member name="F:System.Text.Fakes.StubASCIIEncoding.GetHashCode01">
            <summary>Задает stub Encoding.GetHashCode()</summary>
        </member>
        <member name="M:System.Text.Fakes.StubASCIIEncoding.GetMaxByteCount(System.Int32)">
            <summary>Задает заглушка ASCIIEncoding.GetMaxByteCount(Int32 charCount)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubASCIIEncoding.GetMaxByteCountInt32">
            <summary>Задает stub ASCIIEncoding.GetMaxByteCount(Int32 charCount)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubASCIIEncoding.GetMaxCharCount(System.Int32)">
            <summary>Задает заглушка ASCIIEncoding.GetMaxCharCount(Int32 byteCount)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubASCIIEncoding.GetMaxCharCountInt32">
            <summary>Задает stub ASCIIEncoding.GetMaxCharCount(Int32 byteCount)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubASCIIEncoding.GetPreamble">
            <summary>Задает заглушка Encoding.GetPreamble()</summary>
        </member>
        <member name="F:System.Text.Fakes.StubASCIIEncoding.GetPreamble01">
            <summary>Задает stub Encoding.GetPreamble()</summary>
        </member>
        <member name="M:System.Text.Fakes.StubASCIIEncoding.GetString(System.Byte[])">
            <summary>Задает заглушка Encoding.GetString(Byte[] bytes)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)">
            <summary>Задает заглушка ASCIIEncoding.GetString(Byte[] bytes, Int32 byteIndex, Int32 byteCount)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubASCIIEncoding.GetStringByteArray">
            <summary>Задает stub Encoding.GetString(Byte[] bytes)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubASCIIEncoding.GetStringByteArrayInt32Int32">
            <summary>Задает stub ASCIIEncoding.GetString(Byte[] bytes, Int32 byteIndex, Int32 byteCount)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubASCIIEncoding.HeaderNameGet">
            <summary>Задает stub Encoding.get_HeaderName()</summary>
        </member>
        <member name="M:System.Text.Fakes.StubASCIIEncoding.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubASCIIEncoding</summary>
        </member>
        <member name="M:System.Text.Fakes.StubASCIIEncoding.IsAlwaysNormalized(System.Text.NormalizationForm)">
            <summary>Задает заглушка Encoding.IsAlwaysNormalized(NormalizationForm form)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubASCIIEncoding.IsAlwaysNormalizedNormalizationForm">
            <summary>Задает stub Encoding.IsAlwaysNormalized(NormalizationForm form)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubASCIIEncoding.IsBrowserDisplayGet">
            <summary>Задает stub Encoding.get_IsBrowserDisplay()</summary>
        </member>
        <member name="F:System.Text.Fakes.StubASCIIEncoding.IsBrowserSaveGet">
            <summary>Задает stub Encoding.get_IsBrowserSave()</summary>
        </member>
        <member name="F:System.Text.Fakes.StubASCIIEncoding.IsMailNewsDisplayGet">
            <summary>Задает stub Encoding.get_IsMailNewsDisplay()</summary>
        </member>
        <member name="F:System.Text.Fakes.StubASCIIEncoding.IsMailNewsSaveGet">
            <summary>Задает stub Encoding.get_IsMailNewsSave()</summary>
        </member>
        <member name="F:System.Text.Fakes.StubASCIIEncoding.IsSingleByteGet">
            <summary>Задает stub ASCIIEncoding.get_IsSingleByte()</summary>
        </member>
        <member name="F:System.Text.Fakes.StubASCIIEncoding.WebNameGet">
            <summary>Задает stub Encoding.get_WebName()</summary>
        </member>
        <member name="F:System.Text.Fakes.StubASCIIEncoding.WindowsCodePageGet">
            <summary>Задает stub Encoding.get_WindowsCodePage()</summary>
        </member>
        <member name="P:System.Text.Fakes.StubASCIIEncoding.BodyName">
            <summary>Задает stub Encoding.get_BodyName()</summary>
        </member>
        <member name="P:System.Text.Fakes.StubASCIIEncoding.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Text.Fakes.StubASCIIEncoding.CodePage">
            <summary>Задает stub Encoding.get_CodePage()</summary>
        </member>
        <member name="P:System.Text.Fakes.StubASCIIEncoding.EncodingName">
            <summary>Задает stub Encoding.get_EncodingName()</summary>
        </member>
        <member name="P:System.Text.Fakes.StubASCIIEncoding.HeaderName">
            <summary>Задает stub Encoding.get_HeaderName()</summary>
        </member>
        <member name="P:System.Text.Fakes.StubASCIIEncoding.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Text.Fakes.StubASCIIEncoding.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Text.Fakes.StubASCIIEncoding.IsBrowserDisplay">
            <summary>Задает stub Encoding.get_IsBrowserDisplay()</summary>
        </member>
        <member name="P:System.Text.Fakes.StubASCIIEncoding.IsBrowserSave">
            <summary>Задает stub Encoding.get_IsBrowserSave()</summary>
        </member>
        <member name="P:System.Text.Fakes.StubASCIIEncoding.IsMailNewsDisplay">
            <summary>Задает stub Encoding.get_IsMailNewsDisplay()</summary>
        </member>
        <member name="P:System.Text.Fakes.StubASCIIEncoding.IsMailNewsSave">
            <summary>Задает stub Encoding.get_IsMailNewsSave()</summary>
        </member>
        <member name="P:System.Text.Fakes.StubASCIIEncoding.IsSingleByte">
            <summary>Задает stub ASCIIEncoding.get_IsSingleByte()</summary>
        </member>
        <member name="P:System.Text.Fakes.StubASCIIEncoding.WebName">
            <summary>Задает stub Encoding.get_WebName()</summary>
        </member>
        <member name="P:System.Text.Fakes.StubASCIIEncoding.WindowsCodePage">
            <summary>Задает stub Encoding.get_WindowsCodePage()</summary>
        </member>
        <member name="T:System.Text.Fakes.StubDecoder">
            <summary>Тип заглушки System.Text.Decoder</summary>
        </member>
        <member name="M:System.Text.Fakes.StubDecoder.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Text.Fakes.StubDecoder.Convert(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
            <summary>Задает заглушка Decoder.Convert(Byte* bytes, Int32 byteCount, Char* chars, Int32 charCount, Boolean flush, Int32&amp; bytesUsed, Int32&amp; charsUsed, Boolean&amp; completed)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubDecoder.Convert(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
            <summary>Задает заглушка Decoder.Convert(Byte[] bytes, Int32 byteIndex, Int32 byteCount, Char[] chars, Int32 charIndex, Int32 charCount, Boolean flush, Int32&amp; bytesUsed, Int32&amp; charsUsed, Boolean&amp; completed)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubDecoder.ConvertByteArrayInt32Int32CharArrayInt32Int32BooleanInt32OutInt32OutBooleanOut">
            <summary>Задает stub Decoder.Convert(Byte[] bytes, Int32 byteIndex, Int32 byteCount, Char[] chars, Int32 charIndex, Int32 charCount, Boolean flush, Int32&amp; bytesUsed, Int32&amp; charsUsed, Boolean&amp; completed)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubDecoder.GetCharCount(System.Byte[],System.Int32,System.Int32)">
            <summary>Задает заглушка Decoder.GetCharCount(Byte[] bytes, Int32 index, Int32 count)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubDecoder.GetCharCount(System.Byte*,System.Int32,System.Boolean)">
            <summary>Задает заглушка Decoder.GetCharCount(Byte* bytes, Int32 count, Boolean flush)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubDecoder.GetCharCount(System.Byte[],System.Int32,System.Int32,System.Boolean)">
            <summary>Задает заглушка Decoder.GetCharCount(Byte[] bytes, Int32 index, Int32 count, Boolean flush)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubDecoder.GetCharCountByteArrayInt32Int32">
            <summary>Задает stub Decoder.GetCharCount(Byte[] bytes, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubDecoder.GetCharCountByteArrayInt32Int32Boolean">
            <summary>Задает stub Decoder.GetCharCount(Byte[] bytes, Int32 index, Int32 count, Boolean flush)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubDecoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
            <summary>Задает заглушка Decoder.GetChars(Byte[] bytes, Int32 byteIndex, Int32 byteCount, Char[] chars, Int32 charIndex)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubDecoder.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean)">
            <summary>Задает заглушка Decoder.GetChars(Byte* bytes, Int32 byteCount, Char* chars, Int32 charCount, Boolean flush)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubDecoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Boolean)">
            <summary>Задает заглушка Decoder.GetChars(Byte[] bytes, Int32 byteIndex, Int32 byteCount, Char[] chars, Int32 charIndex, Boolean flush)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubDecoder.GetCharsByteArrayInt32Int32CharArrayInt32">
            <summary>Задает stub Decoder.GetChars(Byte[] bytes, Int32 byteIndex, Int32 byteCount, Char[] chars, Int32 charIndex)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubDecoder.GetCharsByteArrayInt32Int32CharArrayInt32Boolean">
            <summary>Задает stub Decoder.GetChars(Byte[] bytes, Int32 byteIndex, Int32 byteCount, Char[] chars, Int32 charIndex, Boolean flush)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubDecoder.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubDecoder</summary>
        </member>
        <member name="M:System.Text.Fakes.StubDecoder.Reset">
            <summary>Задает заглушка Decoder.Reset()</summary>
        </member>
        <member name="F:System.Text.Fakes.StubDecoder.Reset01">
            <summary>Задает stub Decoder.Reset()</summary>
        </member>
        <member name="P:System.Text.Fakes.StubDecoder.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Text.Fakes.StubDecoder.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Text.Fakes.StubDecoder.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Text.Fakes.StubDecoderFallback">
            <summary>Тип заглушки System.Text.DecoderFallback</summary>
        </member>
        <member name="M:System.Text.Fakes.StubDecoderFallback.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Text.Fakes.StubDecoderFallback.CreateFallbackBuffer">
            <summary>Задает заглушка DecoderFallback.CreateFallbackBuffer()</summary>
        </member>
        <member name="F:System.Text.Fakes.StubDecoderFallback.CreateFallbackBuffer01">
            <summary>Задает stub DecoderFallback.CreateFallbackBuffer()</summary>
        </member>
        <member name="M:System.Text.Fakes.StubDecoderFallback.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubDecoderFallback</summary>
        </member>
        <member name="F:System.Text.Fakes.StubDecoderFallback.MaxCharCountGet">
            <summary>Задает stub DecoderFallback.get_MaxCharCount()</summary>
        </member>
        <member name="P:System.Text.Fakes.StubDecoderFallback.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Text.Fakes.StubDecoderFallback.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Text.Fakes.StubDecoderFallback.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Text.Fakes.StubDecoderFallback.MaxCharCount">
            <summary>Задает stub DecoderFallback.get_MaxCharCount()</summary>
        </member>
        <member name="T:System.Text.Fakes.StubDecoderFallbackBuffer">
            <summary>Тип заглушки System.Text.DecoderFallbackBuffer</summary>
        </member>
        <member name="M:System.Text.Fakes.StubDecoderFallbackBuffer.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Text.Fakes.StubDecoderFallbackBuffer.Fallback(System.Byte[],System.Int32)">
            <summary>Задает заглушка DecoderFallbackBuffer.Fallback(Byte[] bytesUnknown, Int32 index)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubDecoderFallbackBuffer.FallbackByteArrayInt32">
            <summary>Задает stub DecoderFallbackBuffer.Fallback(Byte[] bytesUnknown, Int32 index)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubDecoderFallbackBuffer.GetNextChar">
            <summary>Задает заглушка DecoderFallbackBuffer.GetNextChar()</summary>
        </member>
        <member name="F:System.Text.Fakes.StubDecoderFallbackBuffer.GetNextChar01">
            <summary>Задает stub DecoderFallbackBuffer.GetNextChar()</summary>
        </member>
        <member name="M:System.Text.Fakes.StubDecoderFallbackBuffer.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubDecoderFallbackBuffer</summary>
        </member>
        <member name="M:System.Text.Fakes.StubDecoderFallbackBuffer.MovePrevious">
            <summary>Задает заглушка DecoderFallbackBuffer.MovePrevious()</summary>
        </member>
        <member name="F:System.Text.Fakes.StubDecoderFallbackBuffer.MovePrevious01">
            <summary>Задает stub DecoderFallbackBuffer.MovePrevious()</summary>
        </member>
        <member name="F:System.Text.Fakes.StubDecoderFallbackBuffer.RemainingGet">
            <summary>Задает stub DecoderFallbackBuffer.get_Remaining()</summary>
        </member>
        <member name="M:System.Text.Fakes.StubDecoderFallbackBuffer.Reset">
            <summary>Задает заглушка DecoderFallbackBuffer.Reset()</summary>
        </member>
        <member name="F:System.Text.Fakes.StubDecoderFallbackBuffer.Reset01">
            <summary>Задает stub DecoderFallbackBuffer.Reset()</summary>
        </member>
        <member name="P:System.Text.Fakes.StubDecoderFallbackBuffer.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Text.Fakes.StubDecoderFallbackBuffer.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Text.Fakes.StubDecoderFallbackBuffer.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Text.Fakes.StubDecoderFallbackBuffer.Remaining">
            <summary>Задает stub DecoderFallbackBuffer.get_Remaining()</summary>
        </member>
        <member name="T:System.Text.Fakes.StubEncoder">
            <summary>Тип заглушки System.Text.Encoder</summary>
        </member>
        <member name="M:System.Text.Fakes.StubEncoder.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Text.Fakes.StubEncoder.Convert(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
            <summary>Задает заглушка Encoder.Convert(Char* chars, Int32 charCount, Byte* bytes, Int32 byteCount, Boolean flush, Int32&amp; charsUsed, Int32&amp; bytesUsed, Boolean&amp; completed)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubEncoder.Convert(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
            <summary>Задает заглушка Encoder.Convert(Char[] chars, Int32 charIndex, Int32 charCount, Byte[] bytes, Int32 byteIndex, Int32 byteCount, Boolean flush, Int32&amp; charsUsed, Int32&amp; bytesUsed, Boolean&amp; completed)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubEncoder.ConvertCharArrayInt32Int32ByteArrayInt32Int32BooleanInt32OutInt32OutBooleanOut">
            <summary>Задает stub Encoder.Convert(Char[] chars, Int32 charIndex, Int32 charCount, Byte[] bytes, Int32 byteIndex, Int32 byteCount, Boolean flush, Int32&amp; charsUsed, Int32&amp; bytesUsed, Boolean&amp; completed)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubEncoder.GetByteCount(System.Char*,System.Int32,System.Boolean)">
            <summary>Задает заглушка Encoder.GetByteCount(Char* chars, Int32 count, Boolean flush)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubEncoder.GetByteCount(System.Char[],System.Int32,System.Int32,System.Boolean)">
            <summary>Задает заглушка Encoder.GetByteCount(Char[] chars, Int32 index, Int32 count, Boolean flush)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubEncoder.GetByteCountCharArrayInt32Int32Boolean">
            <summary>Задает stub Encoder.GetByteCount(Char[] chars, Int32 index, Int32 count, Boolean flush)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubEncoder.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean)">
            <summary>Задает заглушка Encoder.GetBytes(Char* chars, Int32 charCount, Byte* bytes, Int32 byteCount, Boolean flush)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubEncoder.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Boolean)">
            <summary>Задает заглушка Encoder.GetBytes(Char[] chars, Int32 charIndex, Int32 charCount, Byte[] bytes, Int32 byteIndex, Boolean flush)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubEncoder.GetBytesCharArrayInt32Int32ByteArrayInt32Boolean">
            <summary>Задает stub Encoder.GetBytes(Char[] chars, Int32 charIndex, Int32 charCount, Byte[] bytes, Int32 byteIndex, Boolean flush)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubEncoder.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubEncoder</summary>
        </member>
        <member name="M:System.Text.Fakes.StubEncoder.Reset">
            <summary>Задает заглушка Encoder.Reset()</summary>
        </member>
        <member name="F:System.Text.Fakes.StubEncoder.Reset01">
            <summary>Задает stub Encoder.Reset()</summary>
        </member>
        <member name="P:System.Text.Fakes.StubEncoder.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Text.Fakes.StubEncoder.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Text.Fakes.StubEncoder.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Text.Fakes.StubEncoderFallback">
            <summary>Тип заглушки System.Text.EncoderFallback</summary>
        </member>
        <member name="M:System.Text.Fakes.StubEncoderFallback.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Text.Fakes.StubEncoderFallback.CreateFallbackBuffer">
            <summary>Задает заглушка EncoderFallback.CreateFallbackBuffer()</summary>
        </member>
        <member name="F:System.Text.Fakes.StubEncoderFallback.CreateFallbackBuffer01">
            <summary>Задает stub EncoderFallback.CreateFallbackBuffer()</summary>
        </member>
        <member name="M:System.Text.Fakes.StubEncoderFallback.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubEncoderFallback</summary>
        </member>
        <member name="F:System.Text.Fakes.StubEncoderFallback.MaxCharCountGet">
            <summary>Задает stub EncoderFallback.get_MaxCharCount()</summary>
        </member>
        <member name="P:System.Text.Fakes.StubEncoderFallback.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Text.Fakes.StubEncoderFallback.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Text.Fakes.StubEncoderFallback.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Text.Fakes.StubEncoderFallback.MaxCharCount">
            <summary>Задает stub EncoderFallback.get_MaxCharCount()</summary>
        </member>
        <member name="T:System.Text.Fakes.StubEncoderFallbackBuffer">
            <summary>Тип заглушки System.Text.EncoderFallbackBuffer</summary>
        </member>
        <member name="M:System.Text.Fakes.StubEncoderFallbackBuffer.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Text.Fakes.StubEncoderFallbackBuffer.Fallback(System.Char,System.Int32)">
            <summary>Задает заглушка EncoderFallbackBuffer.Fallback(Char charUnknown, Int32 index)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubEncoderFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)">
            <summary>Задает заглушка EncoderFallbackBuffer.Fallback(Char charUnknownHigh, Char charUnknownLow, Int32 index)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubEncoderFallbackBuffer.FallbackCharCharInt32">
            <summary>Задает stub EncoderFallbackBuffer.Fallback(Char charUnknownHigh, Char charUnknownLow, Int32 index)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubEncoderFallbackBuffer.FallbackCharInt32">
            <summary>Задает stub EncoderFallbackBuffer.Fallback(Char charUnknown, Int32 index)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubEncoderFallbackBuffer.GetNextChar">
            <summary>Задает заглушка EncoderFallbackBuffer.GetNextChar()</summary>
        </member>
        <member name="F:System.Text.Fakes.StubEncoderFallbackBuffer.GetNextChar01">
            <summary>Задает stub EncoderFallbackBuffer.GetNextChar()</summary>
        </member>
        <member name="M:System.Text.Fakes.StubEncoderFallbackBuffer.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubEncoderFallbackBuffer</summary>
        </member>
        <member name="M:System.Text.Fakes.StubEncoderFallbackBuffer.MovePrevious">
            <summary>Задает заглушка EncoderFallbackBuffer.MovePrevious()</summary>
        </member>
        <member name="F:System.Text.Fakes.StubEncoderFallbackBuffer.MovePrevious01">
            <summary>Задает stub EncoderFallbackBuffer.MovePrevious()</summary>
        </member>
        <member name="F:System.Text.Fakes.StubEncoderFallbackBuffer.RemainingGet">
            <summary>Задает stub EncoderFallbackBuffer.get_Remaining()</summary>
        </member>
        <member name="M:System.Text.Fakes.StubEncoderFallbackBuffer.Reset">
            <summary>Задает заглушка EncoderFallbackBuffer.Reset()</summary>
        </member>
        <member name="F:System.Text.Fakes.StubEncoderFallbackBuffer.Reset01">
            <summary>Задает stub EncoderFallbackBuffer.Reset()</summary>
        </member>
        <member name="P:System.Text.Fakes.StubEncoderFallbackBuffer.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Text.Fakes.StubEncoderFallbackBuffer.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Text.Fakes.StubEncoderFallbackBuffer.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Text.Fakes.StubEncoderFallbackBuffer.Remaining">
            <summary>Задает stub EncoderFallbackBuffer.get_Remaining()</summary>
        </member>
        <member name="T:System.Text.Fakes.StubEncoding">
            <summary>Тип заглушки System.Text.Encoding</summary>
        </member>
        <member name="M:System.Text.Fakes.StubEncoding.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Text.Fakes.StubEncoding.#ctor(System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="F:System.Text.Fakes.StubEncoding.BodyNameGet">
            <summary>Задает stub Encoding.get_BodyName()</summary>
        </member>
        <member name="M:System.Text.Fakes.StubEncoding.Clone">
            <summary>Задает заглушка Encoding.Clone()</summary>
        </member>
        <member name="F:System.Text.Fakes.StubEncoding.Clone01">
            <summary>Задает stub Encoding.Clone()</summary>
        </member>
        <member name="F:System.Text.Fakes.StubEncoding.CodePageGet">
            <summary>Задает stub Encoding.get_CodePage()</summary>
        </member>
        <member name="F:System.Text.Fakes.StubEncoding.EncodingNameGet">
            <summary>Задает stub Encoding.get_EncodingName()</summary>
        </member>
        <member name="M:System.Text.Fakes.StubEncoding.Equals(System.Object)">
            <summary>Задает заглушка Encoding.Equals(Object value)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubEncoding.EqualsObject">
            <summary>Задает stub Encoding.Equals(Object value)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubEncoding.GetByteCount(System.String)">
            <summary>Задает заглушка Encoding.GetByteCount(String s)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubEncoding.GetByteCount(System.Char[])">
            <summary>Задает заглушка Encoding.GetByteCount(Char[] chars)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubEncoding.GetByteCount(System.Char*,System.Int32)">
            <summary>Задает заглушка Encoding.GetByteCount(Char* chars, Int32 count)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
            <summary>Задает заглушка Encoding.GetByteCount(Char[] chars, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubEncoding.GetByteCountCharArray">
            <summary>Задает stub Encoding.GetByteCount(Char[] chars)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubEncoding.GetByteCountCharArrayInt32Int32">
            <summary>Задает stub Encoding.GetByteCount(Char[] chars, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubEncoding.GetByteCountString">
            <summary>Задает stub Encoding.GetByteCount(String s)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
            <summary>Задает заглушка Encoding.GetBytes(Char* chars, Int32 charCount, Byte* bytes, Int32 byteCount)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>Задает заглушка Encoding.GetBytes(Char[] chars, Int32 charIndex, Int32 charCount, Byte[] bytes, Int32 byteIndex)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>Задает заглушка Encoding.GetBytes(String s, Int32 charIndex, Int32 charCount, Byte[] bytes, Int32 byteIndex)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubEncoding.GetBytes(System.Char[])">
            <summary>Задает заглушка Encoding.GetBytes(Char[] chars)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubEncoding.GetBytes(System.String)">
            <summary>Задает заглушка Encoding.GetBytes(String s)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubEncoding.GetBytes(System.Char[],System.Int32,System.Int32)">
            <summary>Задает заглушка Encoding.GetBytes(Char[] chars, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubEncoding.GetBytesCharArray">
            <summary>Задает stub Encoding.GetBytes(Char[] chars)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubEncoding.GetBytesCharArrayInt32Int32">
            <summary>Задает stub Encoding.GetBytes(Char[] chars, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubEncoding.GetBytesCharArrayInt32Int32ByteArrayInt32">
            <summary>Задает stub Encoding.GetBytes(Char[] chars, Int32 charIndex, Int32 charCount, Byte[] bytes, Int32 byteIndex)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubEncoding.GetBytesString">
            <summary>Задает stub Encoding.GetBytes(String s)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubEncoding.GetBytesStringInt32Int32ByteArrayInt32">
            <summary>Задает stub Encoding.GetBytes(String s, Int32 charIndex, Int32 charCount, Byte[] bytes, Int32 byteIndex)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubEncoding.GetCharCount(System.Byte[])">
            <summary>Задает заглушка Encoding.GetCharCount(Byte[] bytes)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubEncoding.GetCharCount(System.Byte*,System.Int32)">
            <summary>Задает заглушка Encoding.GetCharCount(Byte* bytes, Int32 count)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
            <summary>Задает заглушка Encoding.GetCharCount(Byte[] bytes, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubEncoding.GetCharCountByteArray">
            <summary>Задает stub Encoding.GetCharCount(Byte[] bytes)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubEncoding.GetCharCountByteArrayInt32Int32">
            <summary>Задает stub Encoding.GetCharCount(Byte[] bytes, Int32 index, Int32 count)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubEncoding.GetChars(System.Byte[])">
            <summary>Задает заглушка Encoding.GetChars(Byte[] bytes)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
            <summary>Задает заглушка Encoding.GetChars(Byte* bytes, Int32 byteCount, Char* chars, Int32 charCount)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubEncoding.GetChars(System.Byte[],System.Int32,System.Int32)">
            <summary>Задает заглушка Encoding.GetChars(Byte[] bytes, Int32 index, Int32 count)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
            <summary>Задает заглушка Encoding.GetChars(Byte[] bytes, Int32 byteIndex, Int32 byteCount, Char[] chars, Int32 charIndex)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubEncoding.GetCharsByteArray">
            <summary>Задает stub Encoding.GetChars(Byte[] bytes)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubEncoding.GetCharsByteArrayInt32Int32">
            <summary>Задает stub Encoding.GetChars(Byte[] bytes, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubEncoding.GetCharsByteArrayInt32Int32CharArrayInt32">
            <summary>Задает stub Encoding.GetChars(Byte[] bytes, Int32 byteIndex, Int32 byteCount, Char[] chars, Int32 charIndex)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubEncoding.GetDecoder">
            <summary>Задает заглушка Encoding.GetDecoder()</summary>
        </member>
        <member name="F:System.Text.Fakes.StubEncoding.GetDecoder01">
            <summary>Задает stub Encoding.GetDecoder()</summary>
        </member>
        <member name="M:System.Text.Fakes.StubEncoding.GetEncoder">
            <summary>Задает заглушка Encoding.GetEncoder()</summary>
        </member>
        <member name="F:System.Text.Fakes.StubEncoding.GetEncoder01">
            <summary>Задает stub Encoding.GetEncoder()</summary>
        </member>
        <member name="M:System.Text.Fakes.StubEncoding.GetHashCode">
            <summary>Задает заглушка Encoding.GetHashCode()</summary>
        </member>
        <member name="F:System.Text.Fakes.StubEncoding.GetHashCode01">
            <summary>Задает stub Encoding.GetHashCode()</summary>
        </member>
        <member name="M:System.Text.Fakes.StubEncoding.GetMaxByteCount(System.Int32)">
            <summary>Задает заглушка Encoding.GetMaxByteCount(Int32 charCount)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubEncoding.GetMaxByteCountInt32">
            <summary>Задает stub Encoding.GetMaxByteCount(Int32 charCount)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubEncoding.GetMaxCharCount(System.Int32)">
            <summary>Задает заглушка Encoding.GetMaxCharCount(Int32 byteCount)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubEncoding.GetMaxCharCountInt32">
            <summary>Задает stub Encoding.GetMaxCharCount(Int32 byteCount)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubEncoding.GetPreamble">
            <summary>Задает заглушка Encoding.GetPreamble()</summary>
        </member>
        <member name="F:System.Text.Fakes.StubEncoding.GetPreamble01">
            <summary>Задает stub Encoding.GetPreamble()</summary>
        </member>
        <member name="M:System.Text.Fakes.StubEncoding.GetString(System.Byte[])">
            <summary>Задает заглушка Encoding.GetString(Byte[] bytes)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubEncoding.GetString(System.Byte[],System.Int32,System.Int32)">
            <summary>Задает заглушка Encoding.GetString(Byte[] bytes, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubEncoding.GetStringByteArray">
            <summary>Задает stub Encoding.GetString(Byte[] bytes)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubEncoding.GetStringByteArrayInt32Int32">
            <summary>Задает stub Encoding.GetString(Byte[] bytes, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubEncoding.HeaderNameGet">
            <summary>Задает stub Encoding.get_HeaderName()</summary>
        </member>
        <member name="M:System.Text.Fakes.StubEncoding.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubEncoding</summary>
        </member>
        <member name="M:System.Text.Fakes.StubEncoding.IsAlwaysNormalized(System.Text.NormalizationForm)">
            <summary>Задает заглушка Encoding.IsAlwaysNormalized(NormalizationForm form)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubEncoding.IsAlwaysNormalizedNormalizationForm">
            <summary>Задает stub Encoding.IsAlwaysNormalized(NormalizationForm form)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubEncoding.IsBrowserDisplayGet">
            <summary>Задает stub Encoding.get_IsBrowserDisplay()</summary>
        </member>
        <member name="F:System.Text.Fakes.StubEncoding.IsBrowserSaveGet">
            <summary>Задает stub Encoding.get_IsBrowserSave()</summary>
        </member>
        <member name="F:System.Text.Fakes.StubEncoding.IsMailNewsDisplayGet">
            <summary>Задает stub Encoding.get_IsMailNewsDisplay()</summary>
        </member>
        <member name="F:System.Text.Fakes.StubEncoding.IsMailNewsSaveGet">
            <summary>Задает stub Encoding.get_IsMailNewsSave()</summary>
        </member>
        <member name="F:System.Text.Fakes.StubEncoding.IsSingleByteGet">
            <summary>Задает stub Encoding.get_IsSingleByte()</summary>
        </member>
        <member name="F:System.Text.Fakes.StubEncoding.WebNameGet">
            <summary>Задает stub Encoding.get_WebName()</summary>
        </member>
        <member name="F:System.Text.Fakes.StubEncoding.WindowsCodePageGet">
            <summary>Задает stub Encoding.get_WindowsCodePage()</summary>
        </member>
        <member name="P:System.Text.Fakes.StubEncoding.BodyName">
            <summary>Задает stub Encoding.get_BodyName()</summary>
        </member>
        <member name="P:System.Text.Fakes.StubEncoding.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Text.Fakes.StubEncoding.CodePage">
            <summary>Задает stub Encoding.get_CodePage()</summary>
        </member>
        <member name="P:System.Text.Fakes.StubEncoding.EncodingName">
            <summary>Задает stub Encoding.get_EncodingName()</summary>
        </member>
        <member name="P:System.Text.Fakes.StubEncoding.HeaderName">
            <summary>Задает stub Encoding.get_HeaderName()</summary>
        </member>
        <member name="P:System.Text.Fakes.StubEncoding.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Text.Fakes.StubEncoding.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Text.Fakes.StubEncoding.IsBrowserDisplay">
            <summary>Задает stub Encoding.get_IsBrowserDisplay()</summary>
        </member>
        <member name="P:System.Text.Fakes.StubEncoding.IsBrowserSave">
            <summary>Задает stub Encoding.get_IsBrowserSave()</summary>
        </member>
        <member name="P:System.Text.Fakes.StubEncoding.IsMailNewsDisplay">
            <summary>Задает stub Encoding.get_IsMailNewsDisplay()</summary>
        </member>
        <member name="P:System.Text.Fakes.StubEncoding.IsMailNewsSave">
            <summary>Задает stub Encoding.get_IsMailNewsSave()</summary>
        </member>
        <member name="P:System.Text.Fakes.StubEncoding.IsSingleByte">
            <summary>Задает stub Encoding.get_IsSingleByte()</summary>
        </member>
        <member name="P:System.Text.Fakes.StubEncoding.WebName">
            <summary>Задает stub Encoding.get_WebName()</summary>
        </member>
        <member name="P:System.Text.Fakes.StubEncoding.WindowsCodePage">
            <summary>Задает stub Encoding.get_WindowsCodePage()</summary>
        </member>
        <member name="T:System.Text.Fakes.StubUTF7Encoding">
            <summary>Тип заглушки System.Text.UTF7Encoding</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUTF7Encoding.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUTF7Encoding.#ctor(System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUTF7Encoding.BodyNameGet">
            <summary>Задает stub Encoding.get_BodyName()</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUTF7Encoding.Clone">
            <summary>Задает заглушка Encoding.Clone()</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUTF7Encoding.Clone01">
            <summary>Задает stub Encoding.Clone()</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUTF7Encoding.CodePageGet">
            <summary>Задает stub Encoding.get_CodePage()</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUTF7Encoding.EncodingNameGet">
            <summary>Задает stub Encoding.get_EncodingName()</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUTF7Encoding.Equals(System.Object)">
            <summary>Задает заглушка UTF7Encoding.Equals(Object value)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUTF7Encoding.EqualsObject">
            <summary>Задает stub UTF7Encoding.Equals(Object value)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUTF7Encoding.GetByteCount(System.Char[])">
            <summary>Задает заглушка Encoding.GetByteCount(Char[] chars)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUTF7Encoding.GetByteCount(System.String)">
            <summary>Задает заглушка UTF7Encoding.GetByteCount(String s)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUTF7Encoding.GetByteCount(System.Char*,System.Int32)">
            <summary>Задает заглушка UTF7Encoding.GetByteCount(Char* chars, Int32 count)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUTF7Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
            <summary>Задает заглушка UTF7Encoding.GetByteCount(Char[] chars, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUTF7Encoding.GetByteCountCharArray">
            <summary>Задает stub Encoding.GetByteCount(Char[] chars)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUTF7Encoding.GetByteCountCharArrayInt32Int32">
            <summary>Задает stub UTF7Encoding.GetByteCount(Char[] chars, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUTF7Encoding.GetByteCountString">
            <summary>Задает stub UTF7Encoding.GetByteCount(String s)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUTF7Encoding.GetBytes(System.String)">
            <summary>Задает заглушка Encoding.GetBytes(String s)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUTF7Encoding.GetBytes(System.Char[])">
            <summary>Задает заглушка Encoding.GetBytes(Char[] chars)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUTF7Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
            <summary>Задает заглушка UTF7Encoding.GetBytes(Char* chars, Int32 charCount, Byte* bytes, Int32 byteCount)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUTF7Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>Задает заглушка UTF7Encoding.GetBytes(Char[] chars, Int32 charIndex, Int32 charCount, Byte[] bytes, Int32 byteIndex)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUTF7Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>Задает заглушка UTF7Encoding.GetBytes(String s, Int32 charIndex, Int32 charCount, Byte[] bytes, Int32 byteIndex)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUTF7Encoding.GetBytes(System.Char[],System.Int32,System.Int32)">
            <summary>Задает заглушка Encoding.GetBytes(Char[] chars, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUTF7Encoding.GetBytesCharArray">
            <summary>Задает stub Encoding.GetBytes(Char[] chars)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUTF7Encoding.GetBytesCharArrayInt32Int32">
            <summary>Задает stub Encoding.GetBytes(Char[] chars, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUTF7Encoding.GetBytesCharArrayInt32Int32ByteArrayInt32">
            <summary>Задает stub UTF7Encoding.GetBytes(Char[] chars, Int32 charIndex, Int32 charCount, Byte[] bytes, Int32 byteIndex)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUTF7Encoding.GetBytesString">
            <summary>Задает stub Encoding.GetBytes(String s)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUTF7Encoding.GetBytesStringInt32Int32ByteArrayInt32">
            <summary>Задает stub UTF7Encoding.GetBytes(String s, Int32 charIndex, Int32 charCount, Byte[] bytes, Int32 byteIndex)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUTF7Encoding.GetCharCount(System.Byte[])">
            <summary>Задает заглушка Encoding.GetCharCount(Byte[] bytes)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUTF7Encoding.GetCharCount(System.Byte*,System.Int32)">
            <summary>Задает заглушка UTF7Encoding.GetCharCount(Byte* bytes, Int32 count)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUTF7Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
            <summary>Задает заглушка UTF7Encoding.GetCharCount(Byte[] bytes, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUTF7Encoding.GetCharCountByteArray">
            <summary>Задает stub Encoding.GetCharCount(Byte[] bytes)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUTF7Encoding.GetCharCountByteArrayInt32Int32">
            <summary>Задает stub UTF7Encoding.GetCharCount(Byte[] bytes, Int32 index, Int32 count)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUTF7Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
            <summary>Задает заглушка UTF7Encoding.GetChars(Byte* bytes, Int32 byteCount, Char* chars, Int32 charCount)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUTF7Encoding.GetChars(System.Byte[])">
            <summary>Задает заглушка Encoding.GetChars(Byte[] bytes)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUTF7Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
            <summary>Задает заглушка UTF7Encoding.GetChars(Byte[] bytes, Int32 byteIndex, Int32 byteCount, Char[] chars, Int32 charIndex)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUTF7Encoding.GetChars(System.Byte[],System.Int32,System.Int32)">
            <summary>Задает заглушка Encoding.GetChars(Byte[] bytes, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUTF7Encoding.GetCharsByteArray">
            <summary>Задает stub Encoding.GetChars(Byte[] bytes)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUTF7Encoding.GetCharsByteArrayInt32Int32">
            <summary>Задает stub Encoding.GetChars(Byte[] bytes, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUTF7Encoding.GetCharsByteArrayInt32Int32CharArrayInt32">
            <summary>Задает stub UTF7Encoding.GetChars(Byte[] bytes, Int32 byteIndex, Int32 byteCount, Char[] chars, Int32 charIndex)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUTF7Encoding.GetDecoder">
            <summary>Задает заглушка UTF7Encoding.GetDecoder()</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUTF7Encoding.GetDecoder01">
            <summary>Задает stub UTF7Encoding.GetDecoder()</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUTF7Encoding.GetEncoder">
            <summary>Задает заглушка UTF7Encoding.GetEncoder()</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUTF7Encoding.GetEncoder01">
            <summary>Задает stub UTF7Encoding.GetEncoder()</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUTF7Encoding.GetHashCode">
            <summary>Задает заглушка UTF7Encoding.GetHashCode()</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUTF7Encoding.GetHashCode01">
            <summary>Задает stub UTF7Encoding.GetHashCode()</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUTF7Encoding.GetMaxByteCount(System.Int32)">
            <summary>Задает заглушка UTF7Encoding.GetMaxByteCount(Int32 charCount)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUTF7Encoding.GetMaxByteCountInt32">
            <summary>Задает stub UTF7Encoding.GetMaxByteCount(Int32 charCount)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUTF7Encoding.GetMaxCharCount(System.Int32)">
            <summary>Задает заглушка UTF7Encoding.GetMaxCharCount(Int32 byteCount)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUTF7Encoding.GetMaxCharCountInt32">
            <summary>Задает stub UTF7Encoding.GetMaxCharCount(Int32 byteCount)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUTF7Encoding.GetPreamble">
            <summary>Задает заглушка Encoding.GetPreamble()</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUTF7Encoding.GetPreamble01">
            <summary>Задает stub Encoding.GetPreamble()</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUTF7Encoding.GetString(System.Byte[])">
            <summary>Задает заглушка Encoding.GetString(Byte[] bytes)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUTF7Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
            <summary>Задает заглушка UTF7Encoding.GetString(Byte[] bytes, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUTF7Encoding.GetStringByteArray">
            <summary>Задает stub Encoding.GetString(Byte[] bytes)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUTF7Encoding.GetStringByteArrayInt32Int32">
            <summary>Задает stub UTF7Encoding.GetString(Byte[] bytes, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUTF7Encoding.HeaderNameGet">
            <summary>Задает stub Encoding.get_HeaderName()</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUTF7Encoding.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubUTF7Encoding</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUTF7Encoding.IsAlwaysNormalized(System.Text.NormalizationForm)">
            <summary>Задает заглушка Encoding.IsAlwaysNormalized(NormalizationForm form)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUTF7Encoding.IsAlwaysNormalizedNormalizationForm">
            <summary>Задает stub Encoding.IsAlwaysNormalized(NormalizationForm form)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUTF7Encoding.IsBrowserDisplayGet">
            <summary>Задает stub Encoding.get_IsBrowserDisplay()</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUTF7Encoding.IsBrowserSaveGet">
            <summary>Задает stub Encoding.get_IsBrowserSave()</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUTF7Encoding.IsMailNewsDisplayGet">
            <summary>Задает stub Encoding.get_IsMailNewsDisplay()</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUTF7Encoding.IsMailNewsSaveGet">
            <summary>Задает stub Encoding.get_IsMailNewsSave()</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUTF7Encoding.IsSingleByteGet">
            <summary>Задает stub Encoding.get_IsSingleByte()</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUTF7Encoding.WebNameGet">
            <summary>Задает stub Encoding.get_WebName()</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUTF7Encoding.WindowsCodePageGet">
            <summary>Задает stub Encoding.get_WindowsCodePage()</summary>
        </member>
        <member name="P:System.Text.Fakes.StubUTF7Encoding.BodyName">
            <summary>Задает stub Encoding.get_BodyName()</summary>
        </member>
        <member name="P:System.Text.Fakes.StubUTF7Encoding.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Text.Fakes.StubUTF7Encoding.CodePage">
            <summary>Задает stub Encoding.get_CodePage()</summary>
        </member>
        <member name="P:System.Text.Fakes.StubUTF7Encoding.EncodingName">
            <summary>Задает stub Encoding.get_EncodingName()</summary>
        </member>
        <member name="P:System.Text.Fakes.StubUTF7Encoding.HeaderName">
            <summary>Задает stub Encoding.get_HeaderName()</summary>
        </member>
        <member name="P:System.Text.Fakes.StubUTF7Encoding.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Text.Fakes.StubUTF7Encoding.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Text.Fakes.StubUTF7Encoding.IsBrowserDisplay">
            <summary>Задает stub Encoding.get_IsBrowserDisplay()</summary>
        </member>
        <member name="P:System.Text.Fakes.StubUTF7Encoding.IsBrowserSave">
            <summary>Задает stub Encoding.get_IsBrowserSave()</summary>
        </member>
        <member name="P:System.Text.Fakes.StubUTF7Encoding.IsMailNewsDisplay">
            <summary>Задает stub Encoding.get_IsMailNewsDisplay()</summary>
        </member>
        <member name="P:System.Text.Fakes.StubUTF7Encoding.IsMailNewsSave">
            <summary>Задает stub Encoding.get_IsMailNewsSave()</summary>
        </member>
        <member name="P:System.Text.Fakes.StubUTF7Encoding.IsSingleByte">
            <summary>Задает stub Encoding.get_IsSingleByte()</summary>
        </member>
        <member name="P:System.Text.Fakes.StubUTF7Encoding.WebName">
            <summary>Задает stub Encoding.get_WebName()</summary>
        </member>
        <member name="P:System.Text.Fakes.StubUTF7Encoding.WindowsCodePage">
            <summary>Задает stub Encoding.get_WindowsCodePage()</summary>
        </member>
        <member name="T:System.Text.Fakes.StubUTF8Encoding">
            <summary>Тип заглушки System.Text.UTF8Encoding</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUTF8Encoding.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUTF8Encoding.#ctor(System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUTF8Encoding.#ctor(System.Boolean,System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUTF8Encoding.BodyNameGet">
            <summary>Задает stub Encoding.get_BodyName()</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUTF8Encoding.Clone">
            <summary>Задает заглушка Encoding.Clone()</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUTF8Encoding.Clone01">
            <summary>Задает stub Encoding.Clone()</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUTF8Encoding.CodePageGet">
            <summary>Задает stub Encoding.get_CodePage()</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUTF8Encoding.EncodingNameGet">
            <summary>Задает stub Encoding.get_EncodingName()</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUTF8Encoding.Equals(System.Object)">
            <summary>Задает заглушка UTF8Encoding.Equals(Object value)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUTF8Encoding.EqualsObject">
            <summary>Задает stub UTF8Encoding.Equals(Object value)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUTF8Encoding.GetByteCount(System.Char[])">
            <summary>Задает заглушка Encoding.GetByteCount(Char[] chars)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUTF8Encoding.GetByteCount(System.String)">
            <summary>Задает заглушка UTF8Encoding.GetByteCount(String chars)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUTF8Encoding.GetByteCount(System.Char*,System.Int32)">
            <summary>Задает заглушка UTF8Encoding.GetByteCount(Char* chars, Int32 count)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
            <summary>Задает заглушка UTF8Encoding.GetByteCount(Char[] chars, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUTF8Encoding.GetByteCountCharArray">
            <summary>Задает stub Encoding.GetByteCount(Char[] chars)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUTF8Encoding.GetByteCountCharArrayInt32Int32">
            <summary>Задает stub UTF8Encoding.GetByteCount(Char[] chars, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUTF8Encoding.GetByteCountString">
            <summary>Задает stub UTF8Encoding.GetByteCount(String chars)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUTF8Encoding.GetBytes(System.String)">
            <summary>Задает заглушка Encoding.GetBytes(String s)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUTF8Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
            <summary>Задает заглушка UTF8Encoding.GetBytes(Char* chars, Int32 charCount, Byte* bytes, Int32 byteCount)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>Задает заглушка UTF8Encoding.GetBytes(String s, Int32 charIndex, Int32 charCount, Byte[] bytes, Int32 byteIndex)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUTF8Encoding.GetBytes(System.Char[])">
            <summary>Задает заглушка Encoding.GetBytes(Char[] chars)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUTF8Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>Задает заглушка UTF8Encoding.GetBytes(Char[] chars, Int32 charIndex, Int32 charCount, Byte[] bytes, Int32 byteIndex)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUTF8Encoding.GetBytes(System.Char[],System.Int32,System.Int32)">
            <summary>Задает заглушка Encoding.GetBytes(Char[] chars, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUTF8Encoding.GetBytesCharArray">
            <summary>Задает stub Encoding.GetBytes(Char[] chars)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUTF8Encoding.GetBytesCharArrayInt32Int32">
            <summary>Задает stub Encoding.GetBytes(Char[] chars, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUTF8Encoding.GetBytesCharArrayInt32Int32ByteArrayInt32">
            <summary>Задает stub UTF8Encoding.GetBytes(Char[] chars, Int32 charIndex, Int32 charCount, Byte[] bytes, Int32 byteIndex)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUTF8Encoding.GetBytesString">
            <summary>Задает stub Encoding.GetBytes(String s)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUTF8Encoding.GetBytesStringInt32Int32ByteArrayInt32">
            <summary>Задает stub UTF8Encoding.GetBytes(String s, Int32 charIndex, Int32 charCount, Byte[] bytes, Int32 byteIndex)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUTF8Encoding.GetCharCount(System.Byte[])">
            <summary>Задает заглушка Encoding.GetCharCount(Byte[] bytes)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUTF8Encoding.GetCharCount(System.Byte*,System.Int32)">
            <summary>Задает заглушка UTF8Encoding.GetCharCount(Byte* bytes, Int32 count)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
            <summary>Задает заглушка UTF8Encoding.GetCharCount(Byte[] bytes, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUTF8Encoding.GetCharCountByteArray">
            <summary>Задает stub Encoding.GetCharCount(Byte[] bytes)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUTF8Encoding.GetCharCountByteArrayInt32Int32">
            <summary>Задает stub UTF8Encoding.GetCharCount(Byte[] bytes, Int32 index, Int32 count)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUTF8Encoding.GetChars(System.Byte[])">
            <summary>Задает заглушка Encoding.GetChars(Byte[] bytes)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUTF8Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
            <summary>Задает заглушка UTF8Encoding.GetChars(Byte* bytes, Int32 byteCount, Char* chars, Int32 charCount)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUTF8Encoding.GetChars(System.Byte[],System.Int32,System.Int32)">
            <summary>Задает заглушка Encoding.GetChars(Byte[] bytes, Int32 index, Int32 count)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUTF8Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
            <summary>Задает заглушка UTF8Encoding.GetChars(Byte[] bytes, Int32 byteIndex, Int32 byteCount, Char[] chars, Int32 charIndex)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUTF8Encoding.GetCharsByteArray">
            <summary>Задает stub Encoding.GetChars(Byte[] bytes)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUTF8Encoding.GetCharsByteArrayInt32Int32">
            <summary>Задает stub Encoding.GetChars(Byte[] bytes, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUTF8Encoding.GetCharsByteArrayInt32Int32CharArrayInt32">
            <summary>Задает stub UTF8Encoding.GetChars(Byte[] bytes, Int32 byteIndex, Int32 byteCount, Char[] chars, Int32 charIndex)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUTF8Encoding.GetDecoder">
            <summary>Задает заглушка UTF8Encoding.GetDecoder()</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUTF8Encoding.GetDecoder01">
            <summary>Задает stub UTF8Encoding.GetDecoder()</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUTF8Encoding.GetEncoder">
            <summary>Задает заглушка UTF8Encoding.GetEncoder()</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUTF8Encoding.GetEncoder01">
            <summary>Задает stub UTF8Encoding.GetEncoder()</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUTF8Encoding.GetHashCode">
            <summary>Задает заглушка UTF8Encoding.GetHashCode()</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUTF8Encoding.GetHashCode01">
            <summary>Задает stub UTF8Encoding.GetHashCode()</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUTF8Encoding.GetMaxByteCount(System.Int32)">
            <summary>Задает заглушка UTF8Encoding.GetMaxByteCount(Int32 charCount)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUTF8Encoding.GetMaxByteCountInt32">
            <summary>Задает stub UTF8Encoding.GetMaxByteCount(Int32 charCount)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUTF8Encoding.GetMaxCharCount(System.Int32)">
            <summary>Задает заглушка UTF8Encoding.GetMaxCharCount(Int32 byteCount)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUTF8Encoding.GetMaxCharCountInt32">
            <summary>Задает stub UTF8Encoding.GetMaxCharCount(Int32 byteCount)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUTF8Encoding.GetPreamble">
            <summary>Задает заглушка UTF8Encoding.GetPreamble()</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUTF8Encoding.GetPreamble01">
            <summary>Задает stub UTF8Encoding.GetPreamble()</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUTF8Encoding.GetString(System.Byte[])">
            <summary>Задает заглушка Encoding.GetString(Byte[] bytes)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUTF8Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
            <summary>Задает заглушка UTF8Encoding.GetString(Byte[] bytes, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUTF8Encoding.GetStringByteArray">
            <summary>Задает stub Encoding.GetString(Byte[] bytes)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUTF8Encoding.GetStringByteArrayInt32Int32">
            <summary>Задает stub UTF8Encoding.GetString(Byte[] bytes, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUTF8Encoding.HeaderNameGet">
            <summary>Задает stub Encoding.get_HeaderName()</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUTF8Encoding.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubUTF8Encoding</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUTF8Encoding.IsAlwaysNormalized(System.Text.NormalizationForm)">
            <summary>Задает заглушка Encoding.IsAlwaysNormalized(NormalizationForm form)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUTF8Encoding.IsAlwaysNormalizedNormalizationForm">
            <summary>Задает stub Encoding.IsAlwaysNormalized(NormalizationForm form)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUTF8Encoding.IsBrowserDisplayGet">
            <summary>Задает stub Encoding.get_IsBrowserDisplay()</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUTF8Encoding.IsBrowserSaveGet">
            <summary>Задает stub Encoding.get_IsBrowserSave()</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUTF8Encoding.IsMailNewsDisplayGet">
            <summary>Задает stub Encoding.get_IsMailNewsDisplay()</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUTF8Encoding.IsMailNewsSaveGet">
            <summary>Задает stub Encoding.get_IsMailNewsSave()</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUTF8Encoding.IsSingleByteGet">
            <summary>Задает stub Encoding.get_IsSingleByte()</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUTF8Encoding.WebNameGet">
            <summary>Задает stub Encoding.get_WebName()</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUTF8Encoding.WindowsCodePageGet">
            <summary>Задает stub Encoding.get_WindowsCodePage()</summary>
        </member>
        <member name="P:System.Text.Fakes.StubUTF8Encoding.BodyName">
            <summary>Задает stub Encoding.get_BodyName()</summary>
        </member>
        <member name="P:System.Text.Fakes.StubUTF8Encoding.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Text.Fakes.StubUTF8Encoding.CodePage">
            <summary>Задает stub Encoding.get_CodePage()</summary>
        </member>
        <member name="P:System.Text.Fakes.StubUTF8Encoding.EncodingName">
            <summary>Задает stub Encoding.get_EncodingName()</summary>
        </member>
        <member name="P:System.Text.Fakes.StubUTF8Encoding.HeaderName">
            <summary>Задает stub Encoding.get_HeaderName()</summary>
        </member>
        <member name="P:System.Text.Fakes.StubUTF8Encoding.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Text.Fakes.StubUTF8Encoding.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Text.Fakes.StubUTF8Encoding.IsBrowserDisplay">
            <summary>Задает stub Encoding.get_IsBrowserDisplay()</summary>
        </member>
        <member name="P:System.Text.Fakes.StubUTF8Encoding.IsBrowserSave">
            <summary>Задает stub Encoding.get_IsBrowserSave()</summary>
        </member>
        <member name="P:System.Text.Fakes.StubUTF8Encoding.IsMailNewsDisplay">
            <summary>Задает stub Encoding.get_IsMailNewsDisplay()</summary>
        </member>
        <member name="P:System.Text.Fakes.StubUTF8Encoding.IsMailNewsSave">
            <summary>Задает stub Encoding.get_IsMailNewsSave()</summary>
        </member>
        <member name="P:System.Text.Fakes.StubUTF8Encoding.IsSingleByte">
            <summary>Задает stub Encoding.get_IsSingleByte()</summary>
        </member>
        <member name="P:System.Text.Fakes.StubUTF8Encoding.WebName">
            <summary>Задает stub Encoding.get_WebName()</summary>
        </member>
        <member name="P:System.Text.Fakes.StubUTF8Encoding.WindowsCodePage">
            <summary>Задает stub Encoding.get_WindowsCodePage()</summary>
        </member>
        <member name="T:System.Text.Fakes.StubUnicodeEncoding">
            <summary>Тип заглушки System.Text.UnicodeEncoding</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUnicodeEncoding.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUnicodeEncoding.#ctor(System.Boolean,System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUnicodeEncoding.#ctor(System.Boolean,System.Boolean,System.Boolean)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUnicodeEncoding.BodyNameGet">
            <summary>Задает stub Encoding.get_BodyName()</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUnicodeEncoding.Clone">
            <summary>Задает заглушка Encoding.Clone()</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUnicodeEncoding.Clone01">
            <summary>Задает stub Encoding.Clone()</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUnicodeEncoding.CodePageGet">
            <summary>Задает stub Encoding.get_CodePage()</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUnicodeEncoding.EncodingNameGet">
            <summary>Задает stub Encoding.get_EncodingName()</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUnicodeEncoding.Equals(System.Object)">
            <summary>Задает заглушка UnicodeEncoding.Equals(Object value)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUnicodeEncoding.EqualsObject">
            <summary>Задает stub UnicodeEncoding.Equals(Object value)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUnicodeEncoding.GetByteCount(System.Char[])">
            <summary>Задает заглушка Encoding.GetByteCount(Char[] chars)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUnicodeEncoding.GetByteCount(System.String)">
            <summary>Задает заглушка UnicodeEncoding.GetByteCount(String s)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUnicodeEncoding.GetByteCount(System.Char*,System.Int32)">
            <summary>Задает заглушка UnicodeEncoding.GetByteCount(Char* chars, Int32 count)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUnicodeEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
            <summary>Задает заглушка UnicodeEncoding.GetByteCount(Char[] chars, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUnicodeEncoding.GetByteCountCharArray">
            <summary>Задает stub Encoding.GetByteCount(Char[] chars)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUnicodeEncoding.GetByteCountCharArrayInt32Int32">
            <summary>Задает stub UnicodeEncoding.GetByteCount(Char[] chars, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUnicodeEncoding.GetByteCountString">
            <summary>Задает stub UnicodeEncoding.GetByteCount(String s)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUnicodeEncoding.GetBytes(System.String)">
            <summary>Задает заглушка Encoding.GetBytes(String s)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUnicodeEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
            <summary>Задает заглушка UnicodeEncoding.GetBytes(Char* chars, Int32 charCount, Byte* bytes, Int32 byteCount)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUnicodeEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>Задает заглушка UnicodeEncoding.GetBytes(String s, Int32 charIndex, Int32 charCount, Byte[] bytes, Int32 byteIndex)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUnicodeEncoding.GetBytes(System.Char[])">
            <summary>Задает заглушка Encoding.GetBytes(Char[] chars)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUnicodeEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>Задает заглушка UnicodeEncoding.GetBytes(Char[] chars, Int32 charIndex, Int32 charCount, Byte[] bytes, Int32 byteIndex)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUnicodeEncoding.GetBytes(System.Char[],System.Int32,System.Int32)">
            <summary>Задает заглушка Encoding.GetBytes(Char[] chars, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUnicodeEncoding.GetBytesCharArray">
            <summary>Задает stub Encoding.GetBytes(Char[] chars)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUnicodeEncoding.GetBytesCharArrayInt32Int32">
            <summary>Задает stub Encoding.GetBytes(Char[] chars, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUnicodeEncoding.GetBytesCharArrayInt32Int32ByteArrayInt32">
            <summary>Задает stub UnicodeEncoding.GetBytes(Char[] chars, Int32 charIndex, Int32 charCount, Byte[] bytes, Int32 byteIndex)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUnicodeEncoding.GetBytesString">
            <summary>Задает stub Encoding.GetBytes(String s)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUnicodeEncoding.GetBytesStringInt32Int32ByteArrayInt32">
            <summary>Задает stub UnicodeEncoding.GetBytes(String s, Int32 charIndex, Int32 charCount, Byte[] bytes, Int32 byteIndex)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUnicodeEncoding.GetCharCount(System.Byte[])">
            <summary>Задает заглушка Encoding.GetCharCount(Byte[] bytes)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUnicodeEncoding.GetCharCount(System.Byte*,System.Int32)">
            <summary>Задает заглушка UnicodeEncoding.GetCharCount(Byte* bytes, Int32 count)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUnicodeEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
            <summary>Задает заглушка UnicodeEncoding.GetCharCount(Byte[] bytes, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUnicodeEncoding.GetCharCountByteArray">
            <summary>Задает stub Encoding.GetCharCount(Byte[] bytes)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUnicodeEncoding.GetCharCountByteArrayInt32Int32">
            <summary>Задает stub UnicodeEncoding.GetCharCount(Byte[] bytes, Int32 index, Int32 count)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUnicodeEncoding.GetChars(System.Byte[])">
            <summary>Задает заглушка Encoding.GetChars(Byte[] bytes)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUnicodeEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
            <summary>Задает заглушка UnicodeEncoding.GetChars(Byte* bytes, Int32 byteCount, Char* chars, Int32 charCount)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUnicodeEncoding.GetChars(System.Byte[],System.Int32,System.Int32)">
            <summary>Задает заглушка Encoding.GetChars(Byte[] bytes, Int32 index, Int32 count)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUnicodeEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
            <summary>Задает заглушка UnicodeEncoding.GetChars(Byte[] bytes, Int32 byteIndex, Int32 byteCount, Char[] chars, Int32 charIndex)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUnicodeEncoding.GetCharsByteArray">
            <summary>Задает stub Encoding.GetChars(Byte[] bytes)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUnicodeEncoding.GetCharsByteArrayInt32Int32">
            <summary>Задает stub Encoding.GetChars(Byte[] bytes, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUnicodeEncoding.GetCharsByteArrayInt32Int32CharArrayInt32">
            <summary>Задает stub UnicodeEncoding.GetChars(Byte[] bytes, Int32 byteIndex, Int32 byteCount, Char[] chars, Int32 charIndex)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUnicodeEncoding.GetDecoder">
            <summary>Задает заглушка UnicodeEncoding.GetDecoder()</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUnicodeEncoding.GetDecoder01">
            <summary>Задает stub UnicodeEncoding.GetDecoder()</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUnicodeEncoding.GetEncoder">
            <summary>Задает заглушка UnicodeEncoding.GetEncoder()</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUnicodeEncoding.GetEncoder01">
            <summary>Задает stub UnicodeEncoding.GetEncoder()</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUnicodeEncoding.GetHashCode">
            <summary>Задает заглушка UnicodeEncoding.GetHashCode()</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUnicodeEncoding.GetHashCode01">
            <summary>Задает stub UnicodeEncoding.GetHashCode()</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUnicodeEncoding.GetMaxByteCount(System.Int32)">
            <summary>Задает заглушка UnicodeEncoding.GetMaxByteCount(Int32 charCount)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUnicodeEncoding.GetMaxByteCountInt32">
            <summary>Задает stub UnicodeEncoding.GetMaxByteCount(Int32 charCount)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUnicodeEncoding.GetMaxCharCount(System.Int32)">
            <summary>Задает заглушка UnicodeEncoding.GetMaxCharCount(Int32 byteCount)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUnicodeEncoding.GetMaxCharCountInt32">
            <summary>Задает stub UnicodeEncoding.GetMaxCharCount(Int32 byteCount)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUnicodeEncoding.GetPreamble">
            <summary>Задает заглушка UnicodeEncoding.GetPreamble()</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUnicodeEncoding.GetPreamble01">
            <summary>Задает stub UnicodeEncoding.GetPreamble()</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUnicodeEncoding.GetString(System.Byte[])">
            <summary>Задает заглушка Encoding.GetString(Byte[] bytes)</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUnicodeEncoding.GetString(System.Byte[],System.Int32,System.Int32)">
            <summary>Задает заглушка UnicodeEncoding.GetString(Byte[] bytes, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUnicodeEncoding.GetStringByteArray">
            <summary>Задает stub Encoding.GetString(Byte[] bytes)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUnicodeEncoding.GetStringByteArrayInt32Int32">
            <summary>Задает stub UnicodeEncoding.GetString(Byte[] bytes, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUnicodeEncoding.HeaderNameGet">
            <summary>Задает stub Encoding.get_HeaderName()</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUnicodeEncoding.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubUnicodeEncoding</summary>
        </member>
        <member name="M:System.Text.Fakes.StubUnicodeEncoding.IsAlwaysNormalized(System.Text.NormalizationForm)">
            <summary>Задает заглушка Encoding.IsAlwaysNormalized(NormalizationForm form)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUnicodeEncoding.IsAlwaysNormalizedNormalizationForm">
            <summary>Задает stub Encoding.IsAlwaysNormalized(NormalizationForm form)</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUnicodeEncoding.IsBrowserDisplayGet">
            <summary>Задает stub Encoding.get_IsBrowserDisplay()</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUnicodeEncoding.IsBrowserSaveGet">
            <summary>Задает stub Encoding.get_IsBrowserSave()</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUnicodeEncoding.IsMailNewsDisplayGet">
            <summary>Задает stub Encoding.get_IsMailNewsDisplay()</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUnicodeEncoding.IsMailNewsSaveGet">
            <summary>Задает stub Encoding.get_IsMailNewsSave()</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUnicodeEncoding.IsSingleByteGet">
            <summary>Задает stub Encoding.get_IsSingleByte()</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUnicodeEncoding.WebNameGet">
            <summary>Задает stub Encoding.get_WebName()</summary>
        </member>
        <member name="F:System.Text.Fakes.StubUnicodeEncoding.WindowsCodePageGet">
            <summary>Задает stub Encoding.get_WindowsCodePage()</summary>
        </member>
        <member name="P:System.Text.Fakes.StubUnicodeEncoding.BodyName">
            <summary>Задает stub Encoding.get_BodyName()</summary>
        </member>
        <member name="P:System.Text.Fakes.StubUnicodeEncoding.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Text.Fakes.StubUnicodeEncoding.CodePage">
            <summary>Задает stub Encoding.get_CodePage()</summary>
        </member>
        <member name="P:System.Text.Fakes.StubUnicodeEncoding.EncodingName">
            <summary>Задает stub Encoding.get_EncodingName()</summary>
        </member>
        <member name="P:System.Text.Fakes.StubUnicodeEncoding.HeaderName">
            <summary>Задает stub Encoding.get_HeaderName()</summary>
        </member>
        <member name="P:System.Text.Fakes.StubUnicodeEncoding.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Text.Fakes.StubUnicodeEncoding.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Text.Fakes.StubUnicodeEncoding.IsBrowserDisplay">
            <summary>Задает stub Encoding.get_IsBrowserDisplay()</summary>
        </member>
        <member name="P:System.Text.Fakes.StubUnicodeEncoding.IsBrowserSave">
            <summary>Задает stub Encoding.get_IsBrowserSave()</summary>
        </member>
        <member name="P:System.Text.Fakes.StubUnicodeEncoding.IsMailNewsDisplay">
            <summary>Задает stub Encoding.get_IsMailNewsDisplay()</summary>
        </member>
        <member name="P:System.Text.Fakes.StubUnicodeEncoding.IsMailNewsSave">
            <summary>Задает stub Encoding.get_IsMailNewsSave()</summary>
        </member>
        <member name="P:System.Text.Fakes.StubUnicodeEncoding.IsSingleByte">
            <summary>Задает stub Encoding.get_IsSingleByte()</summary>
        </member>
        <member name="P:System.Text.Fakes.StubUnicodeEncoding.WebName">
            <summary>Задает stub Encoding.get_WebName()</summary>
        </member>
        <member name="P:System.Text.Fakes.StubUnicodeEncoding.WindowsCodePage">
            <summary>Задает stub Encoding.get_WindowsCodePage()</summary>
        </member>
        <member name="T:System.Threading.Tasks.Fakes.StubParallelOptions">
            <summary>Тип заглушки System.Threading.Tasks.ParallelOptions</summary>
        </member>
        <member name="M:System.Threading.Tasks.Fakes.StubParallelOptions.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Threading.Tasks.Fakes.StubParallelOptions.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubParallelOptions</summary>
        </member>
        <member name="P:System.Threading.Tasks.Fakes.StubParallelOptions.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Threading.Tasks.Fakes.StubParallelOptions.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Threading.Tasks.Fakes.StubParallelOptions.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Threading.Tasks.Fakes.StubTask">
            <summary>Тип заглушки System.Threading.Tasks.Task</summary>
        </member>
        <member name="M:System.Threading.Tasks.Fakes.StubTask.#ctor(System.Action)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Threading.Tasks.Fakes.StubTask.#ctor(System.Action,System.Threading.CancellationToken)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Threading.Tasks.Fakes.StubTask.#ctor(System.Action,System.Threading.Tasks.TaskCreationOptions)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Threading.Tasks.Fakes.StubTask.#ctor(System.Action{System.Object},System.Object)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Threading.Tasks.Fakes.StubTask.#ctor(System.Action,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Threading.Tasks.Fakes.StubTask.#ctor(System.Action{System.Object},System.Object,System.Threading.CancellationToken)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Threading.Tasks.Fakes.StubTask.#ctor(System.Action{System.Object},System.Object,System.Threading.Tasks.TaskCreationOptions)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Threading.Tasks.Fakes.StubTask.#ctor(System.Action{System.Object},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Threading.Tasks.Fakes.StubTask.Dispose(System.Boolean)">
            <summary>Задает заглушка Task.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Threading.Tasks.Fakes.StubTask.DisposeBoolean">
            <summary>Задает stub Task.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.Threading.Tasks.Fakes.StubTask.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubTask</summary>
        </member>
        <member name="P:System.Threading.Tasks.Fakes.StubTask.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Threading.Tasks.Fakes.StubTask.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Threading.Tasks.Fakes.StubTask.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Threading.Tasks.Fakes.StubTask`1">
            <summary>Тип заглушки System.Threading.Tasks.Task`1</summary>
        </member>
        <member name="M:System.Threading.Tasks.Fakes.StubTask`1.#ctor(System.Func{`0})">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Threading.Tasks.Fakes.StubTask`1.#ctor(System.Func{`0},System.Threading.CancellationToken)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Threading.Tasks.Fakes.StubTask`1.#ctor(System.Func{`0},System.Threading.Tasks.TaskCreationOptions)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Threading.Tasks.Fakes.StubTask`1.#ctor(System.Func{System.Object,`0},System.Object)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Threading.Tasks.Fakes.StubTask`1.#ctor(System.Func{`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Threading.Tasks.Fakes.StubTask`1.#ctor(System.Func{System.Object,`0},System.Object,System.Threading.CancellationToken)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Threading.Tasks.Fakes.StubTask`1.#ctor(System.Func{System.Object,`0},System.Object,System.Threading.Tasks.TaskCreationOptions)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Threading.Tasks.Fakes.StubTask`1.#ctor(System.Func{System.Object,`0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Threading.Tasks.Fakes.StubTask`1.Dispose(System.Boolean)">
            <summary>Задает заглушка Task.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Threading.Tasks.Fakes.StubTask`1.DisposeBoolean">
            <summary>Задает stub Task.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.Threading.Tasks.Fakes.StubTask`1.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubTask</summary>
        </member>
        <member name="P:System.Threading.Tasks.Fakes.StubTask`1.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Threading.Tasks.Fakes.StubTask`1.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Threading.Tasks.Fakes.StubTask`1.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Threading.Tasks.Fakes.StubTaskCanceledException">
            <summary>Тип заглушки System.Threading.Tasks.TaskCanceledException</summary>
        </member>
        <member name="M:System.Threading.Tasks.Fakes.StubTaskCanceledException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Threading.Tasks.Fakes.StubTaskCanceledException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Threading.Tasks.Fakes.StubTaskCanceledException.#ctor(System.Threading.Tasks.Task)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Threading.Tasks.Fakes.StubTaskCanceledException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Threading.Tasks.Fakes.StubTaskCanceledException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Threading.Tasks.Fakes.StubTaskCanceledException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubTaskCanceledException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Threading.Tasks.Fakes.StubTaskCanceledException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubTaskCanceledException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Threading.Tasks.Fakes.StubTaskCanceledException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.Threading.Tasks.Fakes.StubTaskCanceledException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Threading.Tasks.Fakes.StubTaskCanceledException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Threading.Tasks.Fakes.StubTaskCanceledException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Threading.Tasks.Fakes.StubTaskCanceledException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Threading.Tasks.Fakes.StubTaskCanceledException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Threading.Tasks.Fakes.StubTaskCanceledException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Threading.Tasks.Fakes.StubTaskCanceledException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubTaskCanceledException</summary>
        </member>
        <member name="F:System.Threading.Tasks.Fakes.StubTaskCanceledException.MessageGet">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="F:System.Threading.Tasks.Fakes.StubTaskCanceledException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Threading.Tasks.Fakes.StubTaskCanceledException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Threading.Tasks.Fakes.StubTaskCanceledException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Threading.Tasks.Fakes.StubTaskCanceledException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.Threading.Tasks.Fakes.StubTaskCanceledException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="P:System.Threading.Tasks.Fakes.StubTaskCanceledException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Threading.Tasks.Fakes.StubTaskCanceledException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="P:System.Threading.Tasks.Fakes.StubTaskCanceledException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Threading.Tasks.Fakes.StubTaskCanceledException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Threading.Tasks.Fakes.StubTaskCanceledException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Threading.Tasks.Fakes.StubTaskCanceledException.Message">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="P:System.Threading.Tasks.Fakes.StubTaskCanceledException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="P:System.Threading.Tasks.Fakes.StubTaskCanceledException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Threading.Tasks.Fakes.StubTaskCompletionSource`1">
            <summary>Тип заглушки System.Threading.Tasks.TaskCompletionSource`1</summary>
        </member>
        <member name="M:System.Threading.Tasks.Fakes.StubTaskCompletionSource`1.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Threading.Tasks.Fakes.StubTaskCompletionSource`1.#ctor(System.Threading.Tasks.TaskCreationOptions)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Threading.Tasks.Fakes.StubTaskCompletionSource`1.#ctor(System.Object)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Threading.Tasks.Fakes.StubTaskCompletionSource`1.#ctor(System.Object,System.Threading.Tasks.TaskCreationOptions)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Threading.Tasks.Fakes.StubTaskCompletionSource`1.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubTaskCompletionSource</summary>
        </member>
        <member name="P:System.Threading.Tasks.Fakes.StubTaskCompletionSource`1.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Threading.Tasks.Fakes.StubTaskCompletionSource`1.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Threading.Tasks.Fakes.StubTaskCompletionSource`1.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Threading.Tasks.Fakes.StubTaskFactory">
            <summary>Тип заглушки System.Threading.Tasks.TaskFactory</summary>
        </member>
        <member name="M:System.Threading.Tasks.Fakes.StubTaskFactory.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Threading.Tasks.Fakes.StubTaskFactory.#ctor(System.Threading.CancellationToken)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Threading.Tasks.Fakes.StubTaskFactory.#ctor(System.Threading.Tasks.TaskScheduler)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Threading.Tasks.Fakes.StubTaskFactory.#ctor(System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskContinuationOptions)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Threading.Tasks.Fakes.StubTaskFactory.#ctor(System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Threading.Tasks.Fakes.StubTaskFactory.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubTaskFactory</summary>
        </member>
        <member name="P:System.Threading.Tasks.Fakes.StubTaskFactory.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Threading.Tasks.Fakes.StubTaskFactory.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Threading.Tasks.Fakes.StubTaskFactory.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Threading.Tasks.Fakes.StubTaskFactory`1">
            <summary>Тип заглушки System.Threading.Tasks.TaskFactory`1</summary>
        </member>
        <member name="M:System.Threading.Tasks.Fakes.StubTaskFactory`1.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Threading.Tasks.Fakes.StubTaskFactory`1.#ctor(System.Threading.CancellationToken)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Threading.Tasks.Fakes.StubTaskFactory`1.#ctor(System.Threading.Tasks.TaskScheduler)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Threading.Tasks.Fakes.StubTaskFactory`1.#ctor(System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskContinuationOptions)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Threading.Tasks.Fakes.StubTaskFactory`1.#ctor(System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Threading.Tasks.Fakes.StubTaskFactory`1.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubTaskFactory</summary>
        </member>
        <member name="P:System.Threading.Tasks.Fakes.StubTaskFactory`1.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Threading.Tasks.Fakes.StubTaskFactory`1.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Threading.Tasks.Fakes.StubTaskFactory`1.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:System.Threading.Tasks.Fakes.StubTaskScheduler">
            <summary>Тип заглушки System.Threading.Tasks.TaskScheduler</summary>
        </member>
        <member name="M:System.Threading.Tasks.Fakes.StubTaskScheduler.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Threading.Tasks.Fakes.StubTaskScheduler.GetScheduledTasks">
            <summary>Задает заглушка TaskScheduler.GetScheduledTasks()</summary>
        </member>
        <member name="F:System.Threading.Tasks.Fakes.StubTaskScheduler.GetScheduledTasks01">
            <summary>Задает stub TaskScheduler.GetScheduledTasks()</summary>
        </member>
        <member name="M:System.Threading.Tasks.Fakes.StubTaskScheduler.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubTaskScheduler</summary>
        </member>
        <member name="F:System.Threading.Tasks.Fakes.StubTaskScheduler.MaximumConcurrencyLevelGet">
            <summary>Задает stub TaskScheduler.get_MaximumConcurrencyLevel()</summary>
        </member>
        <member name="M:System.Threading.Tasks.Fakes.StubTaskScheduler.QueueTask(System.Threading.Tasks.Task)">
            <summary>Задает заглушка TaskScheduler.QueueTask(Task task)</summary>
        </member>
        <member name="F:System.Threading.Tasks.Fakes.StubTaskScheduler.QueueTaskTask">
            <summary>Задает stub TaskScheduler.QueueTask(Task task)</summary>
        </member>
        <member name="M:System.Threading.Tasks.Fakes.StubTaskScheduler.TryDequeue(System.Threading.Tasks.Task)">
            <summary>Задает заглушка TaskScheduler.TryDequeue(Task task)</summary>
        </member>
        <member name="F:System.Threading.Tasks.Fakes.StubTaskScheduler.TryDequeueTask">
            <summary>Задает stub TaskScheduler.TryDequeue(Task task)</summary>
        </member>
        <member name="M:System.Threading.Tasks.Fakes.StubTaskScheduler.TryExecuteTaskInline(System.Threading.Tasks.Task,System.Boolean)">
            <summary>Задает заглушка TaskScheduler.TryExecuteTaskInline(Task task, Boolean taskWasPreviouslyQueued)</summary>
        </member>
        <member name="F:System.Threading.Tasks.Fakes.StubTaskScheduler.TryExecuteTaskInlineTaskBoolean">
            <summary>Задает stub TaskScheduler.TryExecuteTaskInline(Task task, Boolean taskWasPreviouslyQueued)</summary>
        </member>
        <member name="P:System.Threading.Tasks.Fakes.StubTaskScheduler.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Threading.Tasks.Fakes.StubTaskScheduler.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Threading.Tasks.Fakes.StubTaskScheduler.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Threading.Tasks.Fakes.StubTaskScheduler.MaximumConcurrencyLevel">
            <summary>Задает stub TaskScheduler.get_MaximumConcurrencyLevel()</summary>
        </member>
        <member name="T:System.Threading.Tasks.Fakes.StubTaskSchedulerException">
            <summary>Тип заглушки System.Threading.Tasks.TaskSchedulerException</summary>
        </member>
        <member name="M:System.Threading.Tasks.Fakes.StubTaskSchedulerException.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Threading.Tasks.Fakes.StubTaskSchedulerException.#ctor(System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Threading.Tasks.Fakes.StubTaskSchedulerException.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Threading.Tasks.Fakes.StubTaskSchedulerException.#ctor(System.String,System.Exception)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Threading.Tasks.Fakes.StubTaskSchedulerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Threading.Tasks.Fakes.StubTaskSchedulerException.AttachBackingFieldToHelpLink">
            <summary>Присоединение делегатов для эмуляции StubTaskSchedulerException.HelpLink как свойства с резервным полем.</summary>
        </member>
        <member name="M:System.Threading.Tasks.Fakes.StubTaskSchedulerException.AttachBackingFieldToSource">
            <summary>Присоединение делегатов для эмуляции StubTaskSchedulerException.Source как свойства с резервным полем.</summary>
        </member>
        <member name="F:System.Threading.Tasks.Fakes.StubTaskSchedulerException.DataGet">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="M:System.Threading.Tasks.Fakes.StubTaskSchedulerException.GetBaseException">
            <summary>Задает заглушка Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Threading.Tasks.Fakes.StubTaskSchedulerException.GetBaseException01">
            <summary>Задает stub Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Threading.Tasks.Fakes.StubTaskSchedulerException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Threading.Tasks.Fakes.StubTaskSchedulerException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Threading.Tasks.Fakes.StubTaskSchedulerException.HelpLinkGet">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Threading.Tasks.Fakes.StubTaskSchedulerException.HelpLinkSetString">
            <summary>Задает stub Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Threading.Tasks.Fakes.StubTaskSchedulerException.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubTaskSchedulerException</summary>
        </member>
        <member name="F:System.Threading.Tasks.Fakes.StubTaskSchedulerException.MessageGet">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="F:System.Threading.Tasks.Fakes.StubTaskSchedulerException.SourceGet">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="F:System.Threading.Tasks.Fakes.StubTaskSchedulerException.SourceSetString">
            <summary>Задает stub Exception.set_Source(String value)</summary>
        </member>
        <member name="F:System.Threading.Tasks.Fakes.StubTaskSchedulerException.StackTraceGet">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Threading.Tasks.Fakes.StubTaskSchedulerException.ToString">
            <summary>Задает заглушка Exception.ToString()</summary>
        </member>
        <member name="F:System.Threading.Tasks.Fakes.StubTaskSchedulerException.ToString01">
            <summary>Задает stub Exception.ToString()</summary>
        </member>
        <member name="P:System.Threading.Tasks.Fakes.StubTaskSchedulerException.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Threading.Tasks.Fakes.StubTaskSchedulerException.Data">
            <summary>Задает stub Exception.get_Data()</summary>
        </member>
        <member name="P:System.Threading.Tasks.Fakes.StubTaskSchedulerException.HelpLink">
            <summary>Задает stub Exception.get_HelpLink()</summary>
        </member>
        <member name="P:System.Threading.Tasks.Fakes.StubTaskSchedulerException.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Threading.Tasks.Fakes.StubTaskSchedulerException.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="P:System.Threading.Tasks.Fakes.StubTaskSchedulerException.Message">
            <summary>Задает stub Exception.get_Message()</summary>
        </member>
        <member name="P:System.Threading.Tasks.Fakes.StubTaskSchedulerException.Source">
            <summary>Задает stub Exception.get_Source()</summary>
        </member>
        <member name="P:System.Threading.Tasks.Fakes.StubTaskSchedulerException.StackTrace">
            <summary>Задает stub Exception.get_StackTrace()</summary>
        </member>
        <member name="T:System.Threading.Tasks.Fakes.StubUnobservedTaskExceptionEventArgs">
            <summary>Тип заглушки System.Threading.Tasks.UnobservedTaskExceptionEventArgs</summary>
        </member>
        <member name="M:System.Threading.Tasks.Fakes.StubUnobservedTaskExceptionEventArgs.#ctor(System.AggregateException)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:System.Threading.Tasks.Fakes.StubUnobservedTaskExceptionEventArgs.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubUnobservedTaskExceptionEventArgs</summary>
        </member>
        <member name="P:System.Threading.Tasks.Fakes.StubUnobservedTaskExceptionEventArgs.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:System.Threading.Tasks.Fakes.StubUnobservedTaskExceptionEventArgs.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:System.Threading.Tasks.Fakes.StubUnobservedTaskExceptionEventArgs.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
    </members>
</doc>
